import{s as ms,o as rs}from"../chunks/scheduler.d6170356.js";import{S as us,i as hs,g as i,s as a,r as m,m as wt,A as fs,h as o,f as s,c as n,j as ps,u as r,x as p,n as xt,k as v,l as ye,y as gs,a as l,v as u,d as h,t as f,w as g}from"../chunks/index.fcd4cc08.js";import{T as cs}from"../chunks/Tip.b09c67cf.js";import{C as ds}from"../chunks/CodeBlock.db16bf50.js";import{H as M,E as vs}from"../chunks/index.9f2da87a.js";function Ms(Me){let c;return{c(){c=wt("This feature is still in Beta stage.")},l(d){c=xt(d,"This feature is still in Beta stage.")},m(d,y){l(d,c,y)},d(d){d&&s(c)}}}function ys(Me){let c;return{c(){c=wt("The Spaces Dev Mode is part of PRO and Enterprise Hub subscriptions.")},l(d){c=xt(d,"The Spaces Dev Mode is part of PRO and Enterprise Hub subscriptions.")},m(d,y){l(d,c,y)},d(d){d&&s(c)}}}function bs(Me){let c,d,y,we,_,xe,k,$e,S,Ce,D,Te,I,$t="Spaces Dev Mode is a feature that eases the debugging of your application and makes iterating on Spaces faster.",ke,J,Ct="Whenever your commit some changes to your Space repo, the underlying Docker image gets rebuilt, and then a new virtual machine is provisioned to host the new container.",Se,L,Tt="The Dev Mode allows you to update your Space much quicker by overriding the Docker image.",je,P,kt="The Dev Mode Docker image starts your application as a sub-process, allowing you to restart it without stopping the Space container itself. It also starts a VS Code server and a SSH server in the background for you to connect to the Space.",Ue,E,St="The ability to connect to the running Space unlocks several use cases:",He,R,jt="<li>You can make changes to the app code without the Space rebuilding everytime</li> <li>You can debug a running application and monitor resources live</li>",_e,B,Ut="Overall it makes developing and experimenting with Spaces much faster by skipping the Docker image rebuild phase.",De,V,Ie,A,Ht="Once the Dev Mode is enabled on your Space, you should see a modal like the following.",Je,b,_t='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-controls.png" alt="screenshot of the dev mode controls interface."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-controls-dark.png" alt="screenshot of the dev mode controls interface."/>',Le,Z,Dt="The application does not restart automatically when you change the code. For your changes to appear in the Space, you need to use the <code>Refresh</code> button that will restart the app.",Pe,j,It="If you're using the Streamlit or Gradio SDK, or if your application is Python-based, note that requirements are not installed automatically.\n  You will need to manually run `pip install` from VS Code or SSH.",Ee,q,Re,G,Jt="The Dev Mode allows you to connect to your Space’s docker container using SSH.",Be,Y,Lt="Instructions to connect are listed in the Dev Mode controls modal.",Ve,F,Pt=`You will need to add your machine’s SSH public key to <a href="https://huggingface.co/settings/keys" rel="nofollow">your user account</a> to be able to connect to the Space using SSH.
Check out the <a href="./security-git-ssh#add-a-ssh-key-to-your-account">Git over SSH</a> documentation for more detailed instructions.`,Ae,N,Et='You can also use a local install of VS Code to connect to the Space container. To do so, you will need to install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh" rel="nofollow">SSH Remote</a> extension.',Ze,Q,qe,U,Rt=`The changes you make when Dev Mode is enabled are not persisted to the Space repo automatically.
By default, they will be discarded when Dev Mode is disabled or when the Space goes to sleep.`,Ge,W,Ye,z,Bt="The modal will display a warning if you have uncommitted or unpushed changes in the Space:",Fe,w,Vt='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-controls-uncommitted.png" alt="screenshot of the dev mode controls interface."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-controls-uncommitted-dark.png" alt="screenshot of the dev mode controls interface."/>',Ne,O,Qe,X,At="You can enable the Dev Mode on your Space from the web interface.",We,x,Zt='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-contextual.png" alt="screenshot of the dev mode toggle from the contextual menu."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-contextual-dark.png" alt="screenshot of the dev mode toggle from the contextual menu."/>',ze,$,qt='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-settings.png" alt="screenshot of the dev mode toggle from the Space settings."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-settings-dark.png" alt="screenshot of the dev mode toggle from the Space settings."/>',Oe,C,Gt='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-logs.png" alt="screenshot of the dev mode toggle from the Space logs."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-enable-logs-dark.png" alt="screenshot of the dev mode toggle from the Space logs."/>',Xe,K,Yt="You can also create a Space with the dev mode enabled:",Ke,T,Ft='<img class="block dark:hidden m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-creation-enable.png" alt="screenshot of the dev mode toggle from the Space creation page."/> <img class="hidden dark:block m-0!" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-dev-mode/dev-mode-creation-enable-dark.png" alt="screenshot of the dev mode toggle from the Space creation page."/>',et,ee,tt,te,Nt="Dev Mode is currently not available for static Spaces. Docker Spaces also have some additional requirements.",st,se,lt,le,Qt="Dev Mode is supported for Docker Spaces. However, your Space needs to comply with the following rules for Dev Mode to work properly.",at,ae,Wt="<li>The following packages must be installed:</li>",nt,ne,zt="<li><code>bash</code> (required to establish SSH connections)</li> <li><code>curl</code>, <code>wget</code> and <code>procps</code> (required by the VS Code server process)</li> <li><code>git</code> and <code>git-lfs</code> to be able to commit and push changes from your Dev Mode environment</li>",it,H,Ot='<li><p>Your application code must be located in the <code>/app</code> folder for the Dev Mode daemon to be able to detect changes.</p></li> <li><p>The <code>/app</code> folder must be owned by the user with uid <code>1000</code> to allow you to make changes to the code.</p></li> <li><p>The Dockerfile must contain a <code>CMD</code> instruction for startup. Checkout <a href="https://docs.docker.com/reference/dockerfile/#cmd" rel="nofollow">Docker’s documentation</a> about the <code>CMD</code> instruction for more details.</p></li>',ot,ie,Xt="Dev Mode works well when the base image is debian-based (eg, ubuntu).",pt,oe,Kt="More exotic linux distros (eg, alpine) are not tested and Dev Mode is not guaranteed to work on them.",ct,pe,dt,ce,es="This is an example of a Dockerfile compatible with Spaces Dev Mode.",mt,de,ts=`It installs the required packages with <code>apt-get</code>, along with a couple more for developer convenience (namely: <code>top</code>, <code>vim</code> and <code>nano</code>).
It then starts a NodeJS application from <code>/app</code>.`,rt,me,ut,re,ss=`There are several examples of Dev Mode compatible Docker Spaces in this organization.
Feel free to duplicate them in your namespace!`,ht,ue,ls='Example Python app (FastAPI HTTP server): <a href="https://huggingface.co/spaces/dev-mode-explorers/dev-mode-python" rel="nofollow">https://huggingface.co/spaces/dev-mode-explorers/dev-mode-python</a>',ft,he,as='Example Javascript app (Express.js HTTP server): <a href="https://huggingface.co/spaces/dev-mode-explorers/dev-mode-javascript" rel="nofollow">https://huggingface.co/spaces/dev-mode-explorers/dev-mode-javascript</a>',gt,fe,vt,ge,ns='You can share your feedback on Spaces Dev Mode directly on the HF Hub: <a href="https://huggingface.co/spaces/dev-mode-explorers/README/discussions" rel="nofollow">https://huggingface.co/spaces/dev-mode-explorers/README/discussions</a>',Mt,ve,yt,be,bt;return _=new M({props:{title:"Spaces Dev Mode: Seamless development in Spaces",local:"spaces-dev-mode-seamless-development-in-spaces",headingTag:"h1"}}),k=new cs({props:{warning:!0,$$slots:{default:[Ms]},$$scope:{ctx:Me}}}),S=new cs({props:{warning:!0,$$slots:{default:[ys]},$$scope:{ctx:Me}}}),D=new M({props:{title:"Spaces Dev Mode",local:"spaces-dev-mode",headingTag:"h2"}}),V=new M({props:{title:"Interface",local:"interface",headingTag:"h2"}}),q=new M({props:{title:"SSH connection and VS Code",local:"ssh-connection-and-vs-code",headingTag:"h3"}}),Q=new M({props:{title:"Persisting changes",local:"persisting-changes",headingTag:"h3"}}),W=new ds({props:{code:"JTIzJTIwQWRkJTIwY2hhbmdlcyUyMGFuZCUyMGNvbW1pdCUyMHRoZW0lMEFnaXQlMjBhZGQlMjAuJTBBZ2l0JTIwY29tbWl0JTIwLW0lMjAlMjJQZXJzaXN0JTIwY2hhbmdlcyUyMGZyb20lMjBEZXYlMjBNb2RlJTIyJTBBJTBBJTIzJTIwUHVzaCUyMHRoZSUyMGNvbW1pdCUyMHRvJTIwcGVyc2lzdCUyMHRoZW0lMjBpbiUyMHRoZSUyMHJlcG8lMEFnaXQlMjBwdXNo",highlighted:`<span class="hljs-meta prompt_"># </span><span class="language-bash">Add changes and commit them</span>
git add .
git commit -m &quot;Persist changes from Dev Mode&quot;
<span class="hljs-meta prompt_">
# </span><span class="language-bash">Push the commit to persist them <span class="hljs-keyword">in</span> the repo</span>
git push`,wrap:!1}}),O=new M({props:{title:"Enabling Dev Mode",local:"enabling-dev-mode",headingTag:"h2"}}),ee=new M({props:{title:"Limitations",local:"limitations",headingTag:"h2"}}),se=new M({props:{title:"Docker Spaces",local:"docker-spaces",headingTag:"h3"}}),pe=new M({props:{title:"Example of compatible Dockerfiles",local:"example-of-compatible-dockerfiles",headingTag:"h3"}}),me=new ds({props:{code:"RlJPTSUyMG5vZGUlM0ExOS1zbGltJTBBJTBBUlVOJTIwYXB0LWdldCUyMHVwZGF0ZSUyMCUyNiUyNiUyMCU1QyUwQSUyMCUyMCUyMCUyMGFwdC1nZXQlMjBpbnN0YWxsJTIwLXklMjAlNUMlMEElMjAlMjAlMjAlMjAlMjAlMjBiYXNoJTIwJTVDJTBBJTIwJTIwJTIwJTIwJTIwJTIwZ2l0JTIwZ2l0LWxmcyUyMCU1QyUwQSUyMCUyMCUyMCUyMCUyMCUyMHdnZXQlMjBjdXJsJTIwcHJvY3BzJTIwJTVDJTBBJTIwJTIwJTIwJTIwJTIwJTIwaHRvcCUyMHZpbSUyMG5hbm8lMjAlMjYlMjYlMjAlNUMlMEElMjAlMjAlMjAlMjBybSUyMC1yZiUyMCUyRnZhciUyRmxpYiUyRmFwdCUyRmxpc3RzJTJGKiUwQSUwQSUwQVdPUktESVIlMjAlMkZhcHAlMEFDT1BZJTIwLS1saW5rJTIwLiUyRiUyMCUyRmFwcCUwQVJVTiUyMCUyMG5wbSUyMGklMjAlMEElMEFSVU4lMjBjaG93biUyMDEwMDAlMjAlMkZhcHAlMEFVU0VSJTIwMTAwMCUwQUNNRCUyMCU1QiUyMm5vZGUlMjIlMkMlMjAlMjJpbmRleC5qcyUyMiU1RA==",highlighted:`<span class="hljs-keyword">FROM</span> node:<span class="hljs-number">19</span>-slim

<span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \\
    apt-get install -y \\
      bash \\
      git git-lfs \\
      wget curl procps \\
      htop vim nano &amp;&amp; \\
    <span class="hljs-built_in">rm</span> -rf /var/lib/apt/lists/*</span>


<span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span>
<span class="hljs-keyword">COPY</span><span class="language-bash"> --<span class="hljs-built_in">link</span> ./ /app</span>
<span class="hljs-keyword">RUN</span><span class="language-bash">  npm i </span>

<span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">chown</span> 1000 /app</span>
<span class="hljs-keyword">USER</span> <span class="hljs-number">1000</span>
<span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;node&quot;</span>, <span class="hljs-string">&quot;index.js&quot;</span>]</span>`,wrap:!1}}),fe=new M({props:{title:"Feedback",local:"feedback",headingTag:"h2"}}),ve=new vs({props:{source:"https://github.com/huggingface/hub-docs/blob/main/docs/hub/spaces-dev-mode.md"}}),{c(){c=i("meta"),d=a(),y=i("p"),we=a(),m(_.$$.fragment),xe=a(),m(k.$$.fragment),$e=a(),m(S.$$.fragment),Ce=a(),m(D.$$.fragment),Te=a(),I=i("p"),I.textContent=$t,ke=a(),J=i("p"),J.textContent=Ct,Se=a(),L=i("p"),L.textContent=Tt,je=a(),P=i("p"),P.textContent=kt,Ue=a(),E=i("p"),E.textContent=St,He=a(),R=i("ul"),R.innerHTML=jt,_e=a(),B=i("p"),B.textContent=Ut,De=a(),m(V.$$.fragment),Ie=a(),A=i("p"),A.textContent=Ht,Je=a(),b=i("div"),b.innerHTML=_t,Le=a(),Z=i("p"),Z.innerHTML=Dt,Pe=a(),j=i("div"),j.textContent=It,Ee=a(),m(q.$$.fragment),Re=a(),G=i("p"),G.textContent=Jt,Be=a(),Y=i("p"),Y.textContent=Lt,Ve=a(),F=i("p"),F.innerHTML=Pt,Ae=a(),N=i("p"),N.innerHTML=Et,Ze=a(),m(Q.$$.fragment),qe=a(),U=i("div"),U.textContent=Rt,Ge=wt(`
If you wish to persist changes made while Dev Mode is enabled, you need to use \`git\` from inside the Space container (using VS Code or SSH). For example:

	`),m(W.$$.fragment),Ye=a(),z=i("p"),z.textContent=Bt,Fe=a(),w=i("div"),w.innerHTML=Vt,Ne=a(),m(O.$$.fragment),Qe=a(),X=i("p"),X.textContent=At,We=a(),x=i("div"),x.innerHTML=Zt,ze=a(),$=i("div"),$.innerHTML=qt,Oe=a(),C=i("div"),C.innerHTML=Gt,Xe=a(),K=i("p"),K.textContent=Yt,Ke=a(),T=i("div"),T.innerHTML=Ft,et=a(),m(ee.$$.fragment),tt=a(),te=i("p"),te.textContent=Nt,st=a(),m(se.$$.fragment),lt=a(),le=i("p"),le.textContent=Qt,at=a(),ae=i("ol"),ae.innerHTML=Wt,nt=a(),ne=i("ul"),ne.innerHTML=zt,it=a(),H=i("ol"),H.innerHTML=Ot,ot=a(),ie=i("p"),ie.textContent=Xt,pt=a(),oe=i("p"),oe.textContent=Kt,ct=a(),m(pe.$$.fragment),dt=a(),ce=i("p"),ce.textContent=es,mt=a(),de=i("p"),de.innerHTML=ts,rt=a(),m(me.$$.fragment),ut=a(),re=i("p"),re.textContent=ss,ht=a(),ue=i("p"),ue.innerHTML=ls,ft=a(),he=i("p"),he.innerHTML=as,gt=a(),m(fe.$$.fragment),vt=a(),ge=i("p"),ge.innerHTML=ns,Mt=a(),m(ve.$$.fragment),yt=a(),be=i("p"),this.h()},l(e){const t=fs("svelte-u9bgzb",document.head);c=o(t,"META",{name:!0,content:!0}),t.forEach(s),d=n(e),y=o(e,"P",{}),ps(y).forEach(s),we=n(e),r(_.$$.fragment,e),xe=n(e),r(k.$$.fragment,e),$e=n(e),r(S.$$.fragment,e),Ce=n(e),r(D.$$.fragment,e),Te=n(e),I=o(e,"P",{"data-svelte-h":!0}),p(I)!=="svelte-17joiqd"&&(I.textContent=$t),ke=n(e),J=o(e,"P",{"data-svelte-h":!0}),p(J)!=="svelte-fepvi0"&&(J.textContent=Ct),Se=n(e),L=o(e,"P",{"data-svelte-h":!0}),p(L)!=="svelte-1qcur0i"&&(L.textContent=Tt),je=n(e),P=o(e,"P",{"data-svelte-h":!0}),p(P)!=="svelte-bqdk0g"&&(P.textContent=kt),Ue=n(e),E=o(e,"P",{"data-svelte-h":!0}),p(E)!=="svelte-d2q5gy"&&(E.textContent=St),He=n(e),R=o(e,"UL",{"data-svelte-h":!0}),p(R)!=="svelte-19nl0he"&&(R.innerHTML=jt),_e=n(e),B=o(e,"P",{"data-svelte-h":!0}),p(B)!=="svelte-y1a6fj"&&(B.textContent=Ut),De=n(e),r(V.$$.fragment,e),Ie=n(e),A=o(e,"P",{"data-svelte-h":!0}),p(A)!=="svelte-sqjhf1"&&(A.textContent=Ht),Je=n(e),b=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p(b)!=="svelte-1p2nfy2"&&(b.innerHTML=_t),Le=n(e),Z=o(e,"P",{"data-svelte-h":!0}),p(Z)!=="svelte-a3xjb"&&(Z.innerHTML=Dt),Pe=n(e),j=o(e,"DIV",{class:!0,"data-svelte-h":!0}),p(j)!=="svelte-1i22bde"&&(j.textContent=It),Ee=n(e),r(q.$$.fragment,e),Re=n(e),G=o(e,"P",{"data-svelte-h":!0}),p(G)!=="svelte-7tup7c"&&(G.textContent=Jt),Be=n(e),Y=o(e,"P",{"data-svelte-h":!0}),p(Y)!=="svelte-ll49ce"&&(Y.textContent=Lt),Ve=n(e),F=o(e,"P",{"data-svelte-h":!0}),p(F)!=="svelte-bi8bcm"&&(F.innerHTML=Pt),Ae=n(e),N=o(e,"P",{"data-svelte-h":!0}),p(N)!=="svelte-18xxcya"&&(N.innerHTML=Et),Ze=n(e),r(Q.$$.fragment,e),qe=n(e),U=o(e,"DIV",{class:!0,"data-svelte-h":!0}),p(U)!=="svelte-x52hht"&&(U.textContent=Rt),Ge=xt(e,`
If you wish to persist changes made while Dev Mode is enabled, you need to use \`git\` from inside the Space container (using VS Code or SSH). For example:

	`),r(W.$$.fragment,e),Ye=n(e),z=o(e,"P",{"data-svelte-h":!0}),p(z)!=="svelte-1nu5wjq"&&(z.textContent=Bt),Fe=n(e),w=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p(w)!=="svelte-po1de"&&(w.innerHTML=Vt),Ne=n(e),r(O.$$.fragment,e),Qe=n(e),X=o(e,"P",{"data-svelte-h":!0}),p(X)!=="svelte-5ckl3d"&&(X.textContent=At),We=n(e),x=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p(x)!=="svelte-1b34ljc"&&(x.innerHTML=Zt),ze=n(e),$=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p($)!=="svelte-1wppxua"&&($.innerHTML=qt),Oe=n(e),C=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p(C)!=="svelte-17l661q"&&(C.innerHTML=Gt),Xe=n(e),K=o(e,"P",{"data-svelte-h":!0}),p(K)!=="svelte-1ncgrwp"&&(K.textContent=Yt),Ke=n(e),T=o(e,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),p(T)!=="svelte-z3iqzc"&&(T.innerHTML=Ft),et=n(e),r(ee.$$.fragment,e),tt=n(e),te=o(e,"P",{"data-svelte-h":!0}),p(te)!=="svelte-1r40a2v"&&(te.textContent=Nt),st=n(e),r(se.$$.fragment,e),lt=n(e),le=o(e,"P",{"data-svelte-h":!0}),p(le)!=="svelte-1d8t4jy"&&(le.textContent=Qt),at=n(e),ae=o(e,"OL",{"data-svelte-h":!0}),p(ae)!=="svelte-1ajt0u8"&&(ae.innerHTML=Wt),nt=n(e),ne=o(e,"UL",{"data-svelte-h":!0}),p(ne)!=="svelte-1vc0bn6"&&(ne.innerHTML=zt),it=n(e),H=o(e,"OL",{start:!0,"data-svelte-h":!0}),p(H)!=="svelte-pf9o4r"&&(H.innerHTML=Ot),ot=n(e),ie=o(e,"P",{"data-svelte-h":!0}),p(ie)!=="svelte-jc4u36"&&(ie.textContent=Xt),pt=n(e),oe=o(e,"P",{"data-svelte-h":!0}),p(oe)!=="svelte-np28y2"&&(oe.textContent=Kt),ct=n(e),r(pe.$$.fragment,e),dt=n(e),ce=o(e,"P",{"data-svelte-h":!0}),p(ce)!=="svelte-ot2d0e"&&(ce.textContent=es),mt=n(e),de=o(e,"P",{"data-svelte-h":!0}),p(de)!=="svelte-didr42"&&(de.innerHTML=ts),rt=n(e),r(me.$$.fragment,e),ut=n(e),re=o(e,"P",{"data-svelte-h":!0}),p(re)!=="svelte-11840mj"&&(re.textContent=ss),ht=n(e),ue=o(e,"P",{"data-svelte-h":!0}),p(ue)!=="svelte-1bil04w"&&(ue.innerHTML=ls),ft=n(e),he=o(e,"P",{"data-svelte-h":!0}),p(he)!=="svelte-cc0ki8"&&(he.innerHTML=as),gt=n(e),r(fe.$$.fragment,e),vt=n(e),ge=o(e,"P",{"data-svelte-h":!0}),p(ge)!=="svelte-130cjym"&&(ge.innerHTML=ns),Mt=n(e),r(ve.$$.fragment,e),yt=n(e),be=o(e,"P",{}),ps(be).forEach(s),this.h()},h(){v(c,"name","hf:doc:metadata"),v(c,"content",ws),v(b,"class","flex justify-center"),ye(b,"max-width","550px"),v(j,"class","alert alert-warning"),v(U,"class","alert alert-warning"),v(w,"class","flex justify-center"),ye(w,"max-width","550px"),v(x,"class","flex justify-center"),ye(x,"max-width","550px"),v($,"class","flex justify-center"),ye($,"max-width","550px"),v(C,"class","flex justify-center"),ye(C,"max-width","550px"),v(T,"class","flex justify-center"),ye(T,"max-width","550px"),v(H,"start","2")},m(e,t){gs(document.head,c),l(e,d,t),l(e,y,t),l(e,we,t),u(_,e,t),l(e,xe,t),u(k,e,t),l(e,$e,t),u(S,e,t),l(e,Ce,t),u(D,e,t),l(e,Te,t),l(e,I,t),l(e,ke,t),l(e,J,t),l(e,Se,t),l(e,L,t),l(e,je,t),l(e,P,t),l(e,Ue,t),l(e,E,t),l(e,He,t),l(e,R,t),l(e,_e,t),l(e,B,t),l(e,De,t),u(V,e,t),l(e,Ie,t),l(e,A,t),l(e,Je,t),l(e,b,t),l(e,Le,t),l(e,Z,t),l(e,Pe,t),l(e,j,t),l(e,Ee,t),u(q,e,t),l(e,Re,t),l(e,G,t),l(e,Be,t),l(e,Y,t),l(e,Ve,t),l(e,F,t),l(e,Ae,t),l(e,N,t),l(e,Ze,t),u(Q,e,t),l(e,qe,t),l(e,U,t),l(e,Ge,t),u(W,e,t),l(e,Ye,t),l(e,z,t),l(e,Fe,t),l(e,w,t),l(e,Ne,t),u(O,e,t),l(e,Qe,t),l(e,X,t),l(e,We,t),l(e,x,t),l(e,ze,t),l(e,$,t),l(e,Oe,t),l(e,C,t),l(e,Xe,t),l(e,K,t),l(e,Ke,t),l(e,T,t),l(e,et,t),u(ee,e,t),l(e,tt,t),l(e,te,t),l(e,st,t),u(se,e,t),l(e,lt,t),l(e,le,t),l(e,at,t),l(e,ae,t),l(e,nt,t),l(e,ne,t),l(e,it,t),l(e,H,t),l(e,ot,t),l(e,ie,t),l(e,pt,t),l(e,oe,t),l(e,ct,t),u(pe,e,t),l(e,dt,t),l(e,ce,t),l(e,mt,t),l(e,de,t),l(e,rt,t),u(me,e,t),l(e,ut,t),l(e,re,t),l(e,ht,t),l(e,ue,t),l(e,ft,t),l(e,he,t),l(e,gt,t),u(fe,e,t),l(e,vt,t),l(e,ge,t),l(e,Mt,t),u(ve,e,t),l(e,yt,t),l(e,be,t),bt=!0},p(e,[t]){const is={};t&2&&(is.$$scope={dirty:t,ctx:e}),k.$set(is);const os={};t&2&&(os.$$scope={dirty:t,ctx:e}),S.$set(os)},i(e){bt||(h(_.$$.fragment,e),h(k.$$.fragment,e),h(S.$$.fragment,e),h(D.$$.fragment,e),h(V.$$.fragment,e),h(q.$$.fragment,e),h(Q.$$.fragment,e),h(W.$$.fragment,e),h(O.$$.fragment,e),h(ee.$$.fragment,e),h(se.$$.fragment,e),h(pe.$$.fragment,e),h(me.$$.fragment,e),h(fe.$$.fragment,e),h(ve.$$.fragment,e),bt=!0)},o(e){f(_.$$.fragment,e),f(k.$$.fragment,e),f(S.$$.fragment,e),f(D.$$.fragment,e),f(V.$$.fragment,e),f(q.$$.fragment,e),f(Q.$$.fragment,e),f(W.$$.fragment,e),f(O.$$.fragment,e),f(ee.$$.fragment,e),f(se.$$.fragment,e),f(pe.$$.fragment,e),f(me.$$.fragment,e),f(fe.$$.fragment,e),f(ve.$$.fragment,e),bt=!1},d(e){e&&(s(d),s(y),s(we),s(xe),s($e),s(Ce),s(Te),s(I),s(ke),s(J),s(Se),s(L),s(je),s(P),s(Ue),s(E),s(He),s(R),s(_e),s(B),s(De),s(Ie),s(A),s(Je),s(b),s(Le),s(Z),s(Pe),s(j),s(Ee),s(Re),s(G),s(Be),s(Y),s(Ve),s(F),s(Ae),s(N),s(Ze),s(qe),s(U),s(Ge),s(Ye),s(z),s(Fe),s(w),s(Ne),s(Qe),s(X),s(We),s(x),s(ze),s($),s(Oe),s(C),s(Xe),s(K),s(Ke),s(T),s(et),s(tt),s(te),s(st),s(lt),s(le),s(at),s(ae),s(nt),s(ne),s(it),s(H),s(ot),s(ie),s(pt),s(oe),s(ct),s(dt),s(ce),s(mt),s(de),s(rt),s(ut),s(re),s(ht),s(ue),s(ft),s(he),s(gt),s(vt),s(ge),s(Mt),s(yt),s(be)),s(c),g(_,e),g(k,e),g(S,e),g(D,e),g(V,e),g(q,e),g(Q,e),g(W,e),g(O,e),g(ee,e),g(se,e),g(pe,e),g(me,e),g(fe,e),g(ve,e)}}}const ws='{"title":"Spaces Dev Mode: Seamless development in Spaces","local":"spaces-dev-mode-seamless-development-in-spaces","sections":[{"title":"Spaces Dev Mode","local":"spaces-dev-mode","sections":[],"depth":2},{"title":"Interface","local":"interface","sections":[{"title":"SSH connection and VS Code","local":"ssh-connection-and-vs-code","sections":[],"depth":3},{"title":"Persisting changes","local":"persisting-changes","sections":[],"depth":3}],"depth":2},{"title":"Enabling Dev Mode","local":"enabling-dev-mode","sections":[],"depth":2},{"title":"Limitations","local":"limitations","sections":[{"title":"Docker Spaces","local":"docker-spaces","sections":[],"depth":3},{"title":"Example of compatible Dockerfiles","local":"example-of-compatible-dockerfiles","sections":[],"depth":3}],"depth":2},{"title":"Feedback","local":"feedback","sections":[],"depth":2}],"depth":1}';function xs(Me){return rs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class js extends us{constructor(c){super(),hs(this,c,xs,bs,ms,{})}}export{js as component};
