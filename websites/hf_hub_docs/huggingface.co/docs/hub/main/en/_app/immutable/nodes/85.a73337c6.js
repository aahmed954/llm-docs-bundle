import{s as ne,n as oe,o as ie}from"../chunks/scheduler.d6170356.js";import{S as de,i as re,g as i,s as t,r,A as pe,h as d,f as l,c as n,j as ae,u as p,x as G,k as te,y as ue,a,v as u,d as c,t as T,w as f}from"../chunks/index.fcd4cc08.js";import{C as ce}from"../chunks/CodeBlock.db16bf50.js";import{H as C,E as Te}from"../chunks/index.9f2da87a.js";function fe(z){let o,v,D,I,m,x,h,H,J,X="Counting the number of downloads for models is not a trivial task, as a single model repository might contain multiple files, including multiple model weight files (e.g., with sharded models) and different formats depending on the library (GGUF, PyTorch, TensorFlow, etc.). To avoid double counting downloads (e.g., counting a single download of a model as multiple downloads), the Hub uses a set of query files that are employed for download counting. No information is sent from the user, and no additional calls are made for this. The count is done server-side as the Hub serves files for downloads.",S,w,L="Every HTTP request to these files, including <code>GET</code> and <code>HEAD</code>, will be counted as a download. By default, when no library is specified, the Hub uses <code>config.json</code> as the default query file. Otherwise, the query file depends on each library, and the Hub might examine files such as <code>pytorch_model.bin</code> or <code>adapter_config.json</code>.",_,y,q,g,K='By default, the Hub looks at <code>config.json</code>, <code>config.yaml</code>, <code>hyperparams.yaml</code>, and <code>meta.yaml</code>. Some libraries override these defaults by specifying their own filter (specifying <code>countDownloads</code>). The code that defines these overrides is <a href="https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/src/model-libraries.ts" rel="nofollow">open-source</a>. For example, for the <code>nemo</code> library, all files with <code>.nemo</code> extension are used to count downloads.',R,M,Z,b,ee='Yes, you can open a Pull Request <a href="https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/src/model-libraries.ts" rel="nofollow">here</a>. Here is a minimal <a href="https://github.com/huggingface/huggingface.js/pull/885/files" rel="nofollow">example</a> adding download metrics for VFIMamba. Check out the <a href="./models-adding-libraries#register-your-library">integration guide</a> for more details.',F,A,Q,U,se="GGUF files are self-contained and are not tied to a single library, so all of them are counted for downloads. This will double count downloads in the case a user performs cloning of a whole repository, but most users and interfaces download a single GGUF file for a given repo.",N,j,V,$,le="The <code>diffusers</code> library is an edge case and has its filter configured in the internal codebase. The filter ensures repos tagged as <code>diffusers</code> count both files loaded via the library as well as through UIs that require users to manually download the top-level safetensors.",Y,B,W,k,O,E,P;return m=new C({props:{title:"Models Download Stats",local:"models-download-stats",headingTag:"h1"}}),h=new C({props:{title:"How are downloads counted for models?",local:"how-are-downloads-counted-for-models",headingTag:"h2"}}),y=new C({props:{title:"Which are the query files for different libraries?",local:"which-are-the-query-files-for-different-libraries",headingTag:"h2"}}),M=new C({props:{title:"Can I add my query files for my library?",local:"can-i-add-my-query-files-for-my-library",headingTag:"h2"}}),A=new C({props:{title:"How are GGUF files handled?",local:"how-are-gguf-files-handled",headingTag:"h2"}}),j=new C({props:{title:"How is diffusers handled?",local:"how-is-diffusers-handled",headingTag:"h2"}}),B=new ce({props:{code:"ZmlsdGVyJTNBJTIwJTVCJTBBJTA5JTA5JTdCJTBBJTA5JTA5JTA5Ym9vbCUzQSUyMCU3QiUwQSUwOSUwOSUwOSUwOSUyRiUyRiUyRiUyMEluY2x1ZGUlMjBkb2N1bWVudHMlMjB0aGF0JTIwbWF0Y2glMjBhdCUyMGxlYXN0JTIwb25lJTIwb2YlMjB0aGUlMjBmb2xsb3dpbmclMjBydWxlcyUwQSUwOSUwOSUwOSUwOXNob3VsZCUzQSUyMCU1QiUwQSUwOSUwOSUwOSUwOSUwOSUyRiUyRiUyRiUyMERvd25sb2FkZWQlMjBmcm9tJTIwZGlmZnVzZXJzJTIwbGliJTBBJTA5JTA5JTA5JTA5JTA5JTdCJTBBJTA5JTA5JTA5JTA5JTA5JTA5dGVybSUzQSUyMCU3QiUyMHBhdGglM0ElMjAlMjJtb2RlbF9pbmRleC5qc29uJTIyJTIwJTdEJTJDJTBBJTA5JTA5JTA5JTA5JTA5JTdEJTJDJTBBJTA5JTA5JTA5JTA5JTA5JTJGJTJGJTJGJTIwRGlyZWN0JTIwZG93bmxvYWRzJTIwKExvUmElMkMlMjBBdXRvMTExMSUyMGFuZCUyMG90aGVycyklMEElMDklMDklMDklMDklMDklMkYlMkYlMkYlMjBGaWx0ZXIlMjBvdXQlMjBuZXN0ZWQlMjBzYWZldGVuc29ycyUyMGFuZCUyMHBpY2tsZSUyMHdlaWdodHMlMjB0byUyMGF2b2lkJTIwZG91YmxlJTIwY291bnRpbmclMjBkb3dubG9hZHMlMjBmcm9tJTIwdGhlJTIwZGlmZnVzZXJzJTIwbGliJTBBJTA5JTA5JTA5JTA5JTA5JTdCJTBBJTA5JTA5JTA5JTA5JTA5JTA5cmVnZXhwJTNBJTIwJTdCJTIwcGF0aCUzQSUyMCUyMiU1QiU1RSUyRiU1RColNUMlNUMuc2FmZXRlbnNvcnMlMjIlMjAlN0QlMkMlMEElMDklMDklMDklMDklMDklN0QlMkMlMEElMDklMDklMDklMDklMDklN0IlMEElMDklMDklMDklMDklMDklMDlyZWdleHAlM0ElMjAlN0IlMjBwYXRoJTNBJTIwJTIyJTVCJTVFJTJGJTVEKiU1QyU1Qy5ja3B0JTIyJTIwJTdEJTJDJTBBJTA5JTA5JTA5JTA5JTA5JTdEJTJDJTBBJTA5JTA5JTA5JTA5JTA5JTdCJTBBJTA5JTA5JTA5JTA5JTA5JTA5cmVnZXhwJTNBJTIwJTdCJTIwcGF0aCUzQSUyMCUyMiU1QiU1RSUyRiU1RColNUMlNUMuYmluJTIyJTIwJTdEJTJDJTBBJTA5JTA5JTA5JTA5JTA5JTdEJTJDJTBBJTA5JTA5JTA5JTA5JTVEJTJDJTBBJTA5JTA5JTA5JTA5bWluaW11bV9zaG91bGRfbWF0Y2glM0ElMjAxJTJDJTBBJTA5JTA5JTA5JTdEJTJDJTBBJTA5JTA5JTdEJTJDJTBBJTA5JTVEJTBBJTdE",highlighted:`<span class="hljs-symbol">filter:</span> [
		<span class="hljs-punctuation">{</span>
<span class="hljs-symbol">			bool:</span> <span class="hljs-punctuation">{</span>
				<span class="hljs-comment">/// Include documents that match at least one of the following rules</span>
<span class="hljs-symbol">				should:</span> [
					<span class="hljs-comment">/// Downloaded from diffusers lib</span>
					<span class="hljs-punctuation">{</span>
<span class="hljs-symbol">						term:</span> <span class="hljs-punctuation">{</span> path: <span class="hljs-string">&quot;model_index.json&quot;</span> <span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">}</span>,
					<span class="hljs-comment">/// Direct downloads (LoRa, Auto1111 and others)</span>
					<span class="hljs-comment">/// Filter out nested safetensors and pickle weights to avoid double counting downloads from the diffusers lib</span>
					<span class="hljs-punctuation">{</span>
<span class="hljs-symbol">						regexp:</span> <span class="hljs-punctuation">{</span> path: <span class="hljs-string">&quot;[^/]*\\\\.safetensors&quot;</span> <span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">{</span>
<span class="hljs-symbol">						regexp:</span> <span class="hljs-punctuation">{</span> path: <span class="hljs-string">&quot;[^/]*\\\\.ckpt&quot;</span> <span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">{</span>
<span class="hljs-symbol">						regexp:</span> <span class="hljs-punctuation">{</span> path: <span class="hljs-string">&quot;[^/]*\\\\.bin&quot;</span> <span class="hljs-punctuation">}</span>,
					<span class="hljs-punctuation">}</span>,
				],
<span class="hljs-symbol">				minimum_should_match:</span> <span class="hljs-number">1</span>,
			<span class="hljs-punctuation">}</span>,
		<span class="hljs-punctuation">}</span>,
	]
<span class="hljs-punctuation">}</span>`,wrap:!1}}),k=new Te({props:{source:"https://github.com/huggingface/hub-docs/blob/main/docs/hub/models-download-stats.md"}}),{c(){o=i("meta"),v=t(),D=i("p"),I=t(),r(m.$$.fragment),x=t(),r(h.$$.fragment),H=t(),J=i("p"),J.textContent=X,S=t(),w=i("p"),w.innerHTML=L,_=t(),r(y.$$.fragment),q=t(),g=i("p"),g.innerHTML=K,R=t(),r(M.$$.fragment),Z=t(),b=i("p"),b.innerHTML=ee,F=t(),r(A.$$.fragment),Q=t(),U=i("p"),U.textContent=se,N=t(),r(j.$$.fragment),V=t(),$=i("p"),$.innerHTML=le,Y=t(),r(B.$$.fragment),W=t(),r(k.$$.fragment),O=t(),E=i("p"),this.h()},l(e){const s=pe("svelte-u9bgzb",document.head);o=d(s,"META",{name:!0,content:!0}),s.forEach(l),v=n(e),D=d(e,"P",{}),ae(D).forEach(l),I=n(e),p(m.$$.fragment,e),x=n(e),p(h.$$.fragment,e),H=n(e),J=d(e,"P",{"data-svelte-h":!0}),G(J)!=="svelte-53xwbi"&&(J.textContent=X),S=n(e),w=d(e,"P",{"data-svelte-h":!0}),G(w)!=="svelte-urmmz5"&&(w.innerHTML=L),_=n(e),p(y.$$.fragment,e),q=n(e),g=d(e,"P",{"data-svelte-h":!0}),G(g)!=="svelte-15ur0vj"&&(g.innerHTML=K),R=n(e),p(M.$$.fragment,e),Z=n(e),b=d(e,"P",{"data-svelte-h":!0}),G(b)!=="svelte-1h86465"&&(b.innerHTML=ee),F=n(e),p(A.$$.fragment,e),Q=n(e),U=d(e,"P",{"data-svelte-h":!0}),G(U)!=="svelte-12waq5"&&(U.textContent=se),N=n(e),p(j.$$.fragment,e),V=n(e),$=d(e,"P",{"data-svelte-h":!0}),G($)!=="svelte-6h020x"&&($.innerHTML=le),Y=n(e),p(B.$$.fragment,e),W=n(e),p(k.$$.fragment,e),O=n(e),E=d(e,"P",{}),ae(E).forEach(l),this.h()},h(){te(o,"name","hf:doc:metadata"),te(o,"content",me)},m(e,s){ue(document.head,o),a(e,v,s),a(e,D,s),a(e,I,s),u(m,e,s),a(e,x,s),u(h,e,s),a(e,H,s),a(e,J,s),a(e,S,s),a(e,w,s),a(e,_,s),u(y,e,s),a(e,q,s),a(e,g,s),a(e,R,s),u(M,e,s),a(e,Z,s),a(e,b,s),a(e,F,s),u(A,e,s),a(e,Q,s),a(e,U,s),a(e,N,s),u(j,e,s),a(e,V,s),a(e,$,s),a(e,Y,s),u(B,e,s),a(e,W,s),u(k,e,s),a(e,O,s),a(e,E,s),P=!0},p:oe,i(e){P||(c(m.$$.fragment,e),c(h.$$.fragment,e),c(y.$$.fragment,e),c(M.$$.fragment,e),c(A.$$.fragment,e),c(j.$$.fragment,e),c(B.$$.fragment,e),c(k.$$.fragment,e),P=!0)},o(e){T(m.$$.fragment,e),T(h.$$.fragment,e),T(y.$$.fragment,e),T(M.$$.fragment,e),T(A.$$.fragment,e),T(j.$$.fragment,e),T(B.$$.fragment,e),T(k.$$.fragment,e),P=!1},d(e){e&&(l(v),l(D),l(I),l(x),l(H),l(J),l(S),l(w),l(_),l(q),l(g),l(R),l(Z),l(b),l(F),l(Q),l(U),l(N),l(V),l($),l(Y),l(W),l(O),l(E)),l(o),f(m,e),f(h,e),f(y,e),f(M,e),f(A,e),f(j,e),f(B,e),f(k,e)}}}const me='{"title":"Models Download Stats","local":"models-download-stats","sections":[{"title":"How are downloads counted for models?","local":"how-are-downloads-counted-for-models","sections":[],"depth":2},{"title":"Which are the query files for different libraries?","local":"which-are-the-query-files-for-different-libraries","sections":[],"depth":2},{"title":"Can I add my query files for my library?","local":"can-i-add-my-query-files-for-my-library","sections":[],"depth":2},{"title":"How are GGUF files handled?","local":"how-are-gguf-files-handled","sections":[],"depth":2},{"title":"How is diffusers handled?","local":"how-is-diffusers-handled","sections":[],"depth":2}],"depth":1}';function he(z){return ie(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Me extends de{constructor(o){super(),re(this,o,he,fe,ne,{})}}export{Me as component};
