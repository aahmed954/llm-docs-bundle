import{s as gi,y as pi,o as fi,n as mi}from"../chunks/scheduler.d6170356.js";import{S as ci,i as di,g as a,s as n,r as u,A as hi,h as o,f as i,c as s,j as xt,u as g,x as r,k as h,y as yi,a as l,v as p,d as f,t as m,w as c}from"../chunks/index.fcd4cc08.js";import{T as wi}from"../chunks/Tip.b09c67cf.js";import{C as be}from"../chunks/CodeBlock.db16bf50.js";import{H as $,E as $i}from"../chunks/index.9f2da87a.js";function vi(ke){let d,U='If you cloned the repository with HTTP, you might be asked to fill your username and password on every push operation. The simplest way to avoid repetition is to <a href="#cloning-repositories">switch to SSH</a>, instead of HTTP. Alternatively, if you have to use HTTP, you might find it helpful to setup a <a href="https://git-scm.com/docs/gitcredentials#_avoiding_repetition" rel="nofollow">git credential helper</a> to autofill your username and password.';return{c(){d=a("p"),d.innerHTML=U},l(w){d=o(w,"P",{"data-svelte-h":!0}),r(d)!=="svelte-19lkcd0"&&(d.innerHTML=U)},m(w,Te){l(w,d,Te)},p:mi,d(w){w&&i(d)}}}function bi(ke){let d,U,w,Te,I,_e,Z,Lt="This beginner-friendly guide will help you get the basic skills you need to create and manage your repository on the Hub. Each section builds on the previous one, so feel free to choose where to start!",He,j,xe,J,Ct="This document shows how to handle repositories through the web interface as well as through the terminal. There are no requirements if working with the UI. If you want to work with the terminal, please follow these installation instructions.",Le,P,Ut='If you do not have <code>git</code> available as a CLI command yet, you will need to <a href="https://git-scm.com/downloads" rel="nofollow">install Git</a> for your platform. You will also need to <a href="https://git-lfs.github.com/" rel="nofollow">install Git LFS</a>, which will be used to handle large files such as images and model weights.',Ce,W,It='To be able to push your code to the Hub, you‚Äôll need to authenticate somehow. The easiest way to do this is by installing the <a href="https://huggingface.co/docs/huggingface_hub/index" rel="nofollow"><code>huggingface_hub</code> CLI</a> and running the login command:',Ue,Y,Ie,S,Zt="<strong>The content in the Getting Started section of this document is also available as a video!</strong>",Ze,y,jt,je,z,Je,G,Jt="Using the Hub‚Äôs web interface you can easily create repositories, add files (even large ones!), explore models, visualize diffs, and much more. There are three kinds of repositories on the Hub, and in this guide you‚Äôll be creating a <strong>model repository</strong> for demonstration purposes. For information on creating and managing models, datasets, and Spaces, refer to their respective documentation.",Pe,F,Pt='<li>To create a new repository, visit <a href="http://huggingface.co/new" rel="nofollow">huggingface.co/new</a>:</li>',We,v,Wt='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/new_repo-dark.png"/>',Ye,b,Yt='<li><p>Specify the owner of the repository: this can be either you or any of the organizations you‚Äôre affiliated with.</p></li> <li><p>Enter your model‚Äôs name. This will also be the name of the repository.</p></li> <li><p>Specify whether you want your model to be public or private.</p></li> <li><p>Specify the license. You can leave the <em>License</em> field blank for now. To learn about licenses, visit the <a href="repositories-licenses"><strong>Licenses</strong></a> documentation.</p></li>',Se,V,St="After creating your model repository, you should see a page like this:",ze,T,zt='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/empty_repo-dark.png"/>',Ge,N,Gt='Note that the Hub prompts you to create a <em>Model Card</em>, which you can learn about in the <a href="./model-cards"><strong>Model Cards documentation</strong></a>. Including a Model Card in your model repo is best practice, but since we‚Äôre only making a test repo at the moment we can skip this.',Fe,q,Ve,R,Ft="To add files to your repository via the web UI, start by selecting the <strong>Files</strong> tab, navigating to the desired directory, and then clicking <strong>Add file</strong>. You‚Äôll be given the option to create a new file or upload a file directly from your computer.",Ne,M,Vt='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-add_file.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-add_file-dark.png"/>',qe,B,Re,X,Nt='Choosing to create a new file will take you to the following editor screen, where you can choose a name for your file, add content, and save your file with a message that summarizes your changes. Instead of directly committing the new file to your repo‚Äôs <code>main</code> branch, you can select <code>Open as a pull request</code> to create a <a href="./repositories-pull-requests-discussions">Pull Request</a>.',Be,k,qt='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-create_file.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-create_file-dark.png"/>',Xe,A,Ae,D,Rt="If you choose <em>Upload file</em> you‚Äôll be able to choose a local file to upload, along with a message summarizing your changes to the repo.",De,_,Bt='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-upload_file.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repositories-upload_file-dark.png"/>',Ee,E,Xt='As with creating new files, you can select <code>Open as a pull request</code> to create a <a href="./repositories-pull-requests-discussions">Pull Request</a> instead of adding your changes directly to the <code>main</code> branch of your repo.',Qe,Q,Oe,O,Ke,K,At="Downloading repositories to your local machine is called <em>cloning</em>. You can use the following commands to load your repo and navigate to it:",et,ee,tt,te,Dt="Or for a dataset repo:",it,ie,lt,le,Et="You can clone over SSH with the following command:",nt,ne,st,se,Qt='You‚Äôll need to add your SSH public key to <a href="https://huggingface.co/settings/keys" rel="nofollow">your user settings</a> to push changes or access private repositories.',at,ae,ot,oe,Ot="Now‚Äôs the time, you can add any files you want to the repository! üî•",rt,re,Kt="Do you have files larger than 10MB? Those files should be tracked with <code>git-lfs</code>, which you can initialize with:",ut,ue,gt,ge,ei="Note that if your files are larger than <strong>5GB</strong> you‚Äôll also need to run:",pt,pe,ft,fe,ti="When you use Hugging Face to create a repository, Hugging Face automatically provides a list of common file extensions for common Machine Learning large files in the <code>.gitattributes</code> file, which <code>git-lfs</code> uses to efficiently track changes to your large files. However, you might need to add new extensions if your file types are not already handled. You can do so with <code>git lfs track &quot;*.your_extension&quot;</code>.",mt,me,ct,ce,ii="You can use Git to save new files and any changes to already existing files as a bundle of changes called a <em>commit</em>, which can be thought of as a ‚Äúrevision‚Äù to your project. To create a commit, you have to <code>add</code> the files to let Git know that we‚Äôre planning on saving the changes and then <code>commit</code> those changes. In order to sync the new commit with the Hugging Face Hub, you then <code>push</code> the commit to the Hub.",dt,de,ht,he,li="And you‚Äôre done! You can check your repository on Hugging Face with all the recently added files. For example, in the screenshot below the user added a number of files. Note that some files in this example have a size of <code>1.04 GB</code>, so the repo uses Git LFS to track it.",yt,H,ni='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_with_files-dark.png"/>',wt,x,$t,ye,vt,we,si="Every time you go through the <code>add</code>-<code>commit</code>-<code>push</code> cycle, the repo will keep track of every change you‚Äôve made to your files. The UI allows you to explore the model files and commits and to see the difference (also known as <em>diff</em>) introduced by each commit. To see the history, you can click on the <strong>History: X commits</strong> link.",bt,L,ai='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history.png"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/repo_history-dark.png"/>',Tt,$e,oi="You can click on an individual commit to see what changes that commit introduced:",Mt,C,ri='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history.gif"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/explore_history-dark.gif"/>',kt,ve,_t,Me,Ht;return I=new $({props:{title:"Getting Started with Repositories",local:"getting-started-with-repositories",headingTag:"h1"}}),j=new $({props:{title:"Requirements",local:"requirements",headingTag:"h2"}}),Y=new be({props:{code:"cHl0aG9uJTIwLW0lMjBwaXAlMjBpbnN0YWxsJTIwaHVnZ2luZ2ZhY2VfaHViJTBBaHVnZ2luZ2ZhY2UtY2xpJTIwbG9naW4=",highlighted:`python -m pip install huggingface_hub
huggingface-cli login`,wrap:!1}}),z=new $({props:{title:"Creating a repository",local:"creating-a-repository",headingTag:"h2"}}),q=new $({props:{title:"Adding files to a repository (Web UI)",local:"adding-files-to-a-repository-web-ui",headingTag:"h2"}}),B=new $({props:{title:"Creating a new file",local:"creating-a-new-file",headingTag:"h3"}}),A=new $({props:{title:"Uploading a file",local:"uploading-a-file",headingTag:"h3"}}),Q=new $({props:{title:"Adding files to a repository (terminal)",local:"terminal",headingTag:"h2"}}),O=new $({props:{title:"Cloning repositories",local:"cloning-repositories",headingTag:"h3"}}),ee=new be({props:{code:"Z2l0JTIwY2xvbmUlMjBodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGJTNDeW91ci11c2VybmFtZSUzRSUyRiUzQ3lvdXItbW9kZWwtbmFtZSUzRSUwQWNkJTIwJTNDeW91ci1tb2RlbC1uYW1lJTNF",highlighted:`git <span class="hljs-built_in">clone</span> https://huggingface.co/&lt;your-username&gt;/&lt;your-model-name&gt;
<span class="hljs-built_in">cd</span> &lt;your-model-name&gt;`,wrap:!1}}),ie=new be({props:{code:"Z2l0JTIwY2xvbmUlMjBodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkYlM0N5b3VyLXVzZXJuYW1lJTNFJTJGJTNDeW91ci1kYXRhc2V0LW5hbWUlM0UlMEFjZCUyMCUzQ3lvdXItZGF0YXNldC1uYW1lJTNF",highlighted:`git <span class="hljs-built_in">clone</span> https://huggingface.co/datasets/&lt;your-username&gt;/&lt;your-dataset-name&gt;
<span class="hljs-built_in">cd</span> &lt;your-dataset-name&gt;`,wrap:!1}}),ne=new be({props:{code:"Z2l0JTIwY2xvbmUlMjBnaXQlNDBoZi5jbyUzQSUzQ3lvdXItdXNlcm5hbWUlM0UlMkYlM0N5b3VyLW1vZGVsLW5hbWUlM0UlMEFjZCUyMCUzQ3lvdXItbW9kZWwtbmFtZSUzRQ==",highlighted:`git <span class="hljs-built_in">clone</span> git@hf.co:&lt;your-username&gt;/&lt;your-model-name&gt;
<span class="hljs-built_in">cd</span> &lt;your-model-name&gt;`,wrap:!1}}),ae=new $({props:{title:"Set up",local:"set-up",headingTag:"h3"}}),ue=new be({props:{code:"Z2l0JTIwbGZzJTIwaW5zdGFsbA==",highlighted:"git lfs install",wrap:!1}}),pe=new be({props:{code:"aHVnZ2luZ2ZhY2UtY2xpJTIwbGZzLWVuYWJsZS1sYXJnZWZpbGVzJTIwLg==",highlighted:"huggingface-cli lfs-enable-largefiles .",wrap:!1}}),me=new $({props:{title:"Pushing files",local:"pushing-files",headingTag:"h3"}}),de=new be({props:{code:"JTIzJTIwQ3JlYXRlJTIwYW55JTIwZmlsZXMlMjB5b3UlMjBsaWtlISUyMFRoZW4uLi4lMEFnaXQlMjBhZGQlMjAuJTBBZ2l0JTIwY29tbWl0JTIwLW0lMjAlMjJGaXJzdCUyMG1vZGVsJTIwdmVyc2lvbiUyMiUyMCUyMCUyMyUyMFlvdSUyMGNhbiUyMGNob29zZSUyMGFueSUyMGRlc2NyaXB0aXZlJTIwbWVzc2FnZSUwQWdpdCUyMHB1c2g=",highlighted:`<span class="hljs-comment"># Create any files you like! Then...</span>
git add .
git commit -m <span class="hljs-string">&quot;First model version&quot;</span>  <span class="hljs-comment"># You can choose any descriptive message</span>
git push`,wrap:!1}}),x=new wi({props:{$$slots:{default:[vi]},$$scope:{ctx:ke}}}),ye=new $({props:{title:"Viewing a repo‚Äôs history",local:"viewing-a-repos-history",headingTag:"h2"}}),ve=new $i({props:{source:"https://github.com/huggingface/hub-docs/blob/main/docs/hub/repositories-getting-started.md"}}),{c(){d=a("meta"),U=n(),w=a("p"),Te=n(),u(I.$$.fragment),_e=n(),Z=a("p"),Z.textContent=Lt,He=n(),u(j.$$.fragment),xe=n(),J=a("p"),J.textContent=Ct,Le=n(),P=a("p"),P.innerHTML=Ut,Ce=n(),W=a("p"),W.innerHTML=It,Ue=n(),u(Y.$$.fragment),Ie=n(),S=a("p"),S.innerHTML=Zt,Ze=n(),y=a("iframe"),je=n(),u(z.$$.fragment),Je=n(),G=a("p"),G.innerHTML=Jt,Pe=n(),F=a("ol"),F.innerHTML=Pt,We=n(),v=a("div"),v.innerHTML=Wt,Ye=n(),b=a("ol"),b.innerHTML=Yt,Se=n(),V=a("p"),V.textContent=St,ze=n(),T=a("div"),T.innerHTML=zt,Ge=n(),N=a("p"),N.innerHTML=Gt,Fe=n(),u(q.$$.fragment),Ve=n(),R=a("p"),R.innerHTML=Ft,Ne=n(),M=a("div"),M.innerHTML=Vt,qe=n(),u(B.$$.fragment),Re=n(),X=a("p"),X.innerHTML=Nt,Be=n(),k=a("div"),k.innerHTML=qt,Xe=n(),u(A.$$.fragment),Ae=n(),D=a("p"),D.innerHTML=Rt,De=n(),_=a("div"),_.innerHTML=Bt,Ee=n(),E=a("p"),E.innerHTML=Xt,Qe=n(),u(Q.$$.fragment),Oe=n(),u(O.$$.fragment),Ke=n(),K=a("p"),K.innerHTML=At,et=n(),u(ee.$$.fragment),tt=n(),te=a("p"),te.textContent=Dt,it=n(),u(ie.$$.fragment),lt=n(),le=a("p"),le.textContent=Et,nt=n(),u(ne.$$.fragment),st=n(),se=a("p"),se.innerHTML=Qt,at=n(),u(ae.$$.fragment),ot=n(),oe=a("p"),oe.textContent=Ot,rt=n(),re=a("p"),re.innerHTML=Kt,ut=n(),u(ue.$$.fragment),gt=n(),ge=a("p"),ge.innerHTML=ei,pt=n(),u(pe.$$.fragment),ft=n(),fe=a("p"),fe.innerHTML=ti,mt=n(),u(me.$$.fragment),ct=n(),ce=a("p"),ce.innerHTML=ii,dt=n(),u(de.$$.fragment),ht=n(),he=a("p"),he.innerHTML=li,yt=n(),H=a("div"),H.innerHTML=ni,wt=n(),u(x.$$.fragment),$t=n(),u(ye.$$.fragment),vt=n(),we=a("p"),we.innerHTML=si,bt=n(),L=a("div"),L.innerHTML=ai,Tt=n(),$e=a("p"),$e.textContent=oi,Mt=n(),C=a("div"),C.innerHTML=ri,kt=n(),u(ve.$$.fragment),_t=n(),Me=a("p"),this.h()},l(e){const t=hi("svelte-u9bgzb",document.head);d=o(t,"META",{name:!0,content:!0}),t.forEach(i),U=s(e),w=o(e,"P",{}),xt(w).forEach(i),Te=s(e),g(I.$$.fragment,e),_e=s(e),Z=o(e,"P",{"data-svelte-h":!0}),r(Z)!=="svelte-18jeh08"&&(Z.textContent=Lt),He=s(e),g(j.$$.fragment,e),xe=s(e),J=o(e,"P",{"data-svelte-h":!0}),r(J)!=="svelte-jplm0f"&&(J.textContent=Ct),Le=s(e),P=o(e,"P",{"data-svelte-h":!0}),r(P)!=="svelte-10onan1"&&(P.innerHTML=Ut),Ce=s(e),W=o(e,"P",{"data-svelte-h":!0}),r(W)!=="svelte-10qq2kp"&&(W.innerHTML=It),Ue=s(e),g(Y.$$.fragment,e),Ie=s(e),S=o(e,"P",{"data-svelte-h":!0}),r(S)!=="svelte-m84aem"&&(S.innerHTML=Zt),Ze=s(e),y=o(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),xt(y).forEach(i),je=s(e),g(z.$$.fragment,e),Je=s(e),G=o(e,"P",{"data-svelte-h":!0}),r(G)!=="svelte-9jw57k"&&(G.innerHTML=Jt),Pe=s(e),F=o(e,"OL",{"data-svelte-h":!0}),r(F)!=="svelte-i0pqxh"&&(F.innerHTML=Pt),We=s(e),v=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(v)!=="svelte-1329z6f"&&(v.innerHTML=Wt),Ye=s(e),b=o(e,"OL",{start:!0,"data-svelte-h":!0}),r(b)!=="svelte-cmgrh3"&&(b.innerHTML=Yt),Se=s(e),V=o(e,"P",{"data-svelte-h":!0}),r(V)!=="svelte-1glo7k3"&&(V.textContent=St),ze=s(e),T=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(T)!=="svelte-fylt99"&&(T.innerHTML=zt),Ge=s(e),N=o(e,"P",{"data-svelte-h":!0}),r(N)!=="svelte-5qfa79"&&(N.innerHTML=Gt),Fe=s(e),g(q.$$.fragment,e),Ve=s(e),R=o(e,"P",{"data-svelte-h":!0}),r(R)!=="svelte-gg40nn"&&(R.innerHTML=Ft),Ne=s(e),M=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(M)!=="svelte-11fhgwf"&&(M.innerHTML=Vt),qe=s(e),g(B.$$.fragment,e),Re=s(e),X=o(e,"P",{"data-svelte-h":!0}),r(X)!=="svelte-klvs3g"&&(X.innerHTML=Nt),Be=s(e),k=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(k)!=="svelte-1odm04p"&&(k.innerHTML=qt),Xe=s(e),g(A.$$.fragment,e),Ae=s(e),D=o(e,"P",{"data-svelte-h":!0}),r(D)!=="svelte-1pm9h7b"&&(D.innerHTML=Rt),De=s(e),_=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(_)!=="svelte-1nct7w7"&&(_.innerHTML=Bt),Ee=s(e),E=o(e,"P",{"data-svelte-h":!0}),r(E)!=="svelte-1m95obm"&&(E.innerHTML=Xt),Qe=s(e),g(Q.$$.fragment,e),Oe=s(e),g(O.$$.fragment,e),Ke=s(e),K=o(e,"P",{"data-svelte-h":!0}),r(K)!=="svelte-1q61s0k"&&(K.innerHTML=At),et=s(e),g(ee.$$.fragment,e),tt=s(e),te=o(e,"P",{"data-svelte-h":!0}),r(te)!=="svelte-9xi7zt"&&(te.textContent=Dt),it=s(e),g(ie.$$.fragment,e),lt=s(e),le=o(e,"P",{"data-svelte-h":!0}),r(le)!=="svelte-16y8plz"&&(le.textContent=Et),nt=s(e),g(ne.$$.fragment,e),st=s(e),se=o(e,"P",{"data-svelte-h":!0}),r(se)!=="svelte-1wkndq8"&&(se.innerHTML=Qt),at=s(e),g(ae.$$.fragment,e),ot=s(e),oe=o(e,"P",{"data-svelte-h":!0}),r(oe)!=="svelte-k823yx"&&(oe.textContent=Ot),rt=s(e),re=o(e,"P",{"data-svelte-h":!0}),r(re)!=="svelte-dwlaxn"&&(re.innerHTML=Kt),ut=s(e),g(ue.$$.fragment,e),gt=s(e),ge=o(e,"P",{"data-svelte-h":!0}),r(ge)!=="svelte-155akwu"&&(ge.innerHTML=ei),pt=s(e),g(pe.$$.fragment,e),ft=s(e),fe=o(e,"P",{"data-svelte-h":!0}),r(fe)!=="svelte-z9ipj4"&&(fe.innerHTML=ti),mt=s(e),g(me.$$.fragment,e),ct=s(e),ce=o(e,"P",{"data-svelte-h":!0}),r(ce)!=="svelte-1xl5niv"&&(ce.innerHTML=ii),dt=s(e),g(de.$$.fragment,e),ht=s(e),he=o(e,"P",{"data-svelte-h":!0}),r(he)!=="svelte-1jhxrbp"&&(he.innerHTML=li),yt=s(e),H=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(H)!=="svelte-1vobd2z"&&(H.innerHTML=ni),wt=s(e),g(x.$$.fragment,e),$t=s(e),g(ye.$$.fragment,e),vt=s(e),we=o(e,"P",{"data-svelte-h":!0}),r(we)!=="svelte-5ygnhh"&&(we.innerHTML=si),bt=s(e),L=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(L)!=="svelte-19wszbb"&&(L.innerHTML=ai),Tt=s(e),$e=o(e,"P",{"data-svelte-h":!0}),r($e)!=="svelte-1ww1ljh"&&($e.textContent=oi),Mt=s(e),C=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(C)!=="svelte-cdui6d"&&(C.innerHTML=ri),kt=s(e),g(ve.$$.fragment,e),_t=s(e),Me=o(e,"P",{}),xt(Me).forEach(i),this.h()},h(){h(d,"name","hf:doc:metadata"),h(d,"content",Ti),h(y,"width","560"),h(y,"height","315"),pi(y.src,jt="https://www.youtube-nocookie.com/embed/rkCly_cbMBk")||h(y,"src",jt),h(y,"title","Managing a repo"),h(y,"frameborder","0"),h(y,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),y.allowFullscreen="",h(v,"class","flex justify-center"),h(b,"start","2"),h(T,"class","flex justify-center"),h(M,"class","flex justify-center"),h(k,"class","flex justify-center"),h(_,"class","flex justify-center"),h(H,"class","flex justify-center"),h(L,"class","flex justify-center"),h(C,"class","flex justify-center")},m(e,t){yi(document.head,d),l(e,U,t),l(e,w,t),l(e,Te,t),p(I,e,t),l(e,_e,t),l(e,Z,t),l(e,He,t),p(j,e,t),l(e,xe,t),l(e,J,t),l(e,Le,t),l(e,P,t),l(e,Ce,t),l(e,W,t),l(e,Ue,t),p(Y,e,t),l(e,Ie,t),l(e,S,t),l(e,Ze,t),l(e,y,t),l(e,je,t),p(z,e,t),l(e,Je,t),l(e,G,t),l(e,Pe,t),l(e,F,t),l(e,We,t),l(e,v,t),l(e,Ye,t),l(e,b,t),l(e,Se,t),l(e,V,t),l(e,ze,t),l(e,T,t),l(e,Ge,t),l(e,N,t),l(e,Fe,t),p(q,e,t),l(e,Ve,t),l(e,R,t),l(e,Ne,t),l(e,M,t),l(e,qe,t),p(B,e,t),l(e,Re,t),l(e,X,t),l(e,Be,t),l(e,k,t),l(e,Xe,t),p(A,e,t),l(e,Ae,t),l(e,D,t),l(e,De,t),l(e,_,t),l(e,Ee,t),l(e,E,t),l(e,Qe,t),p(Q,e,t),l(e,Oe,t),p(O,e,t),l(e,Ke,t),l(e,K,t),l(e,et,t),p(ee,e,t),l(e,tt,t),l(e,te,t),l(e,it,t),p(ie,e,t),l(e,lt,t),l(e,le,t),l(e,nt,t),p(ne,e,t),l(e,st,t),l(e,se,t),l(e,at,t),p(ae,e,t),l(e,ot,t),l(e,oe,t),l(e,rt,t),l(e,re,t),l(e,ut,t),p(ue,e,t),l(e,gt,t),l(e,ge,t),l(e,pt,t),p(pe,e,t),l(e,ft,t),l(e,fe,t),l(e,mt,t),p(me,e,t),l(e,ct,t),l(e,ce,t),l(e,dt,t),p(de,e,t),l(e,ht,t),l(e,he,t),l(e,yt,t),l(e,H,t),l(e,wt,t),p(x,e,t),l(e,$t,t),p(ye,e,t),l(e,vt,t),l(e,we,t),l(e,bt,t),l(e,L,t),l(e,Tt,t),l(e,$e,t),l(e,Mt,t),l(e,C,t),l(e,kt,t),p(ve,e,t),l(e,_t,t),l(e,Me,t),Ht=!0},p(e,[t]){const ui={};t&2&&(ui.$$scope={dirty:t,ctx:e}),x.$set(ui)},i(e){Ht||(f(I.$$.fragment,e),f(j.$$.fragment,e),f(Y.$$.fragment,e),f(z.$$.fragment,e),f(q.$$.fragment,e),f(B.$$.fragment,e),f(A.$$.fragment,e),f(Q.$$.fragment,e),f(O.$$.fragment,e),f(ee.$$.fragment,e),f(ie.$$.fragment,e),f(ne.$$.fragment,e),f(ae.$$.fragment,e),f(ue.$$.fragment,e),f(pe.$$.fragment,e),f(me.$$.fragment,e),f(de.$$.fragment,e),f(x.$$.fragment,e),f(ye.$$.fragment,e),f(ve.$$.fragment,e),Ht=!0)},o(e){m(I.$$.fragment,e),m(j.$$.fragment,e),m(Y.$$.fragment,e),m(z.$$.fragment,e),m(q.$$.fragment,e),m(B.$$.fragment,e),m(A.$$.fragment,e),m(Q.$$.fragment,e),m(O.$$.fragment,e),m(ee.$$.fragment,e),m(ie.$$.fragment,e),m(ne.$$.fragment,e),m(ae.$$.fragment,e),m(ue.$$.fragment,e),m(pe.$$.fragment,e),m(me.$$.fragment,e),m(de.$$.fragment,e),m(x.$$.fragment,e),m(ye.$$.fragment,e),m(ve.$$.fragment,e),Ht=!1},d(e){e&&(i(U),i(w),i(Te),i(_e),i(Z),i(He),i(xe),i(J),i(Le),i(P),i(Ce),i(W),i(Ue),i(Ie),i(S),i(Ze),i(y),i(je),i(Je),i(G),i(Pe),i(F),i(We),i(v),i(Ye),i(b),i(Se),i(V),i(ze),i(T),i(Ge),i(N),i(Fe),i(Ve),i(R),i(Ne),i(M),i(qe),i(Re),i(X),i(Be),i(k),i(Xe),i(Ae),i(D),i(De),i(_),i(Ee),i(E),i(Qe),i(Oe),i(Ke),i(K),i(et),i(tt),i(te),i(it),i(lt),i(le),i(nt),i(st),i(se),i(at),i(ot),i(oe),i(rt),i(re),i(ut),i(gt),i(ge),i(pt),i(ft),i(fe),i(mt),i(ct),i(ce),i(dt),i(ht),i(he),i(yt),i(H),i(wt),i($t),i(vt),i(we),i(bt),i(L),i(Tt),i($e),i(Mt),i(C),i(kt),i(_t),i(Me)),i(d),c(I,e),c(j,e),c(Y,e),c(z,e),c(q,e),c(B,e),c(A,e),c(Q,e),c(O,e),c(ee,e),c(ie,e),c(ne,e),c(ae,e),c(ue,e),c(pe,e),c(me,e),c(de,e),c(x,e),c(ye,e),c(ve,e)}}}const Ti='{"title":"Getting Started with Repositories","local":"getting-started-with-repositories","sections":[{"title":"Requirements","local":"requirements","sections":[],"depth":2},{"title":"Creating a repository","local":"creating-a-repository","sections":[],"depth":2},{"title":"Adding files to a repository (Web UI)","local":"adding-files-to-a-repository-web-ui","sections":[{"title":"Creating a new file","local":"creating-a-new-file","sections":[],"depth":3},{"title":"Uploading a file","local":"uploading-a-file","sections":[],"depth":3}],"depth":2},{"title":"Adding files to a repository (terminal)","local":"terminal","sections":[{"title":"Cloning repositories","local":"cloning-repositories","sections":[],"depth":3},{"title":"Set up","local":"set-up","sections":[],"depth":3},{"title":"Pushing files","local":"pushing-files","sections":[],"depth":3}],"depth":2},{"title":"Viewing a repo‚Äôs history","local":"viewing-a-repos-history","sections":[],"depth":2}],"depth":1}';function Mi(ke){return fi(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ci extends ci{constructor(d){super(),di(this,d,Mi,bi,gi,{})}}export{Ci as component};
