import{s as V,n as B,o as F}from"../chunks/scheduler.94020406.js";import{S as J,i as K,g as d,s as l,r as U,E as N,h as f,f as a,c as r,j as q,x as v,u as z,k as C,y as Q,a as s,v as A,d as G,t as I,w as O}from"../chunks/index.a08c8d92.js";import{H as W,E as X}from"../chunks/index.9fb21c13.js";function Y(P){let i,x,h,w,n,D='<br/> <img src="https://raw.githubusercontent.com/huggingface/diffusers/77aadfee6a891ab9fcfb780f87c693f7a5beeb8e/docs/source/imgs/diffusers_library.jpg" width="400"/> <br/>',y,u,_,p,E='🤗 Diffusers는 이미지, 오디오, 심지어 분자의 3D 구조를 생성하기 위한 최첨단 사전 훈련된 diffusion 모델을 위한 라이브러리입니다. 간단한 추론 솔루션을 찾고 있든, 자체 diffusion 모델을 훈련하고 싶든, 🤗 Diffusers는 두 가지 모두를 지원하는 모듈식 툴박스입니다. 저희 라이브러리는 <a href="conceptual/philosophy#usability-over-performance">성능보다 사용성</a>, <a href="conceptual/philosophy#simple-over-easy">간편함보다 단순함</a>, 그리고 <a href="conceptual/philosophy#tweakable-contributorfriendly-over-abstraction">추상화보다 사용자 지정 가능성</a>에 중점을 두고 설계되었습니다.',$,c,j="이 라이브러리에는 세 가지 주요 구성 요소가 있습니다:",k,m,S='<li>몇 줄의 코드만으로 추론할 수 있는 최첨단 <a href="api/pipelines/overview">diffusion 파이프라인</a>.</li> <li>생성 속도와 품질 간의 균형을 맞추기 위해 상호교환적으로 사용할 수 있는 <a href="api/schedulers/overview">노이즈 스케줄러</a>.</li> <li>빌딩 블록으로 사용할 수 있고 스케줄러와 결합하여 자체적인 end-to-end diffusion 시스템을 만들 수 있는 사전 학습된 <a href="api/models">모델</a>.</li>',H,o,R='<div class="w-full flex flex-col space-y-4 md:space-y-0 md:grid md:grid-cols-2 md:gap-y-4 md:gap-x-5"><a class="!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg" href="./tutorials/tutorial_overview"><div class="w-full text-center bg-gradient-to-br from-blue-400 to-blue-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed">Tutorials</div> <p class="text-gray-700">결과물을 생성하고, 나만의 diffusion 시스템을 구축하고, 확산 모델을 훈련하는 데 필요한 기본 기술을 배워보세요. 🤗 Diffusers를 처음 사용하는 경우 여기에서 시작하는 것이 좋습니다!</p></a> <a class="!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg" href="./using-diffusers/loading_overview"><div class="w-full text-center bg-gradient-to-br from-indigo-400 to-indigo-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed">How-to guides</div> <p class="text-gray-700">파이프라인, 모델, 스케줄러를 로드하는 데 도움이 되는 실용적인 가이드입니다. 또한 특정 작업에 파이프라인을 사용하고, 출력 생성 방식을 제어하고, 추론 속도에 맞게 최적화하고, 다양한 학습 기법을 사용하는 방법도 배울 수 있습니다.</p></a> <a class="!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg" href="./conceptual/philosophy"><div class="w-full text-center bg-gradient-to-br from-pink-400 to-pink-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed">Conceptual guides</div> <p class="text-gray-700">라이브러리가 왜 이런 방식으로 설계되었는지 이해하고, 라이브러리 이용에 대한 윤리적 가이드라인과 안전 구현에 대해 자세히 알아보세요.</p></a> <a class="!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg" href="./api/models"><div class="w-full text-center bg-gradient-to-br from-purple-400 to-purple-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed">Reference</div> <p class="text-gray-700">🤗 Diffusers 클래스 및 메서드의 작동 방식에 대한 기술 설명.</p></a></div>',T,g,L,b,M;return u=new W({props:{title:"Diffusers",local:"diffusers",headingTag:"h1"}}),g=new X({props:{source:"https://github.com/huggingface/diffusers/blob/main/docs/source/ko/index.md"}}),{c(){i=d("meta"),x=l(),h=d("p"),w=l(),n=d("p"),n.innerHTML=D,y=l(),U(u.$$.fragment),_=l(),p=d("p"),p.innerHTML=E,$=l(),c=d("p"),c.textContent=j,k=l(),m=d("ul"),m.innerHTML=S,H=l(),o=d("div"),o.innerHTML=R,T=l(),U(g.$$.fragment),L=l(),b=d("p"),this.h()},l(e){const t=N("svelte-u9bgzb",document.head);i=f(t,"META",{name:!0,content:!0}),t.forEach(a),x=r(e),h=f(e,"P",{}),q(h).forEach(a),w=r(e),n=f(e,"P",{align:!0,"data-svelte-h":!0}),v(n)!=="svelte-aksdn0"&&(n.innerHTML=D),y=r(e),z(u.$$.fragment,e),_=r(e),p=f(e,"P",{"data-svelte-h":!0}),v(p)!=="svelte-8e0vlb"&&(p.innerHTML=E),$=r(e),c=f(e,"P",{"data-svelte-h":!0}),v(c)!=="svelte-1yu1jns"&&(c.textContent=j),k=r(e),m=f(e,"UL",{"data-svelte-h":!0}),v(m)!=="svelte-1yhlkny"&&(m.innerHTML=S),H=r(e),o=f(e,"DIV",{class:!0,"data-svelte-h":!0}),v(o)!=="svelte-1vr6gll"&&(o.innerHTML=R),T=r(e),z(g.$$.fragment,e),L=r(e),b=f(e,"P",{}),q(b).forEach(a),this.h()},h(){C(i,"name","hf:doc:metadata"),C(i,"content",Z),C(n,"align","center"),C(o,"class","mt-10")},m(e,t){Q(document.head,i),s(e,x,t),s(e,h,t),s(e,w,t),s(e,n,t),s(e,y,t),A(u,e,t),s(e,_,t),s(e,p,t),s(e,$,t),s(e,c,t),s(e,k,t),s(e,m,t),s(e,H,t),s(e,o,t),s(e,T,t),A(g,e,t),s(e,L,t),s(e,b,t),M=!0},p:B,i(e){M||(G(u.$$.fragment,e),G(g.$$.fragment,e),M=!0)},o(e){I(u.$$.fragment,e),I(g.$$.fragment,e),M=!1},d(e){e&&(a(x),a(h),a(w),a(n),a(y),a(_),a(p),a($),a(c),a(k),a(m),a(H),a(o),a(T),a(L),a(b)),a(i),O(u,e),O(g,e)}}}const Z='{"title":"Diffusers","local":"diffusers","sections":[],"depth":1}';function ee(P){return F(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ie extends J{constructor(i){super(),K(this,i,ee,Y,V,{})}}export{ie as component};
