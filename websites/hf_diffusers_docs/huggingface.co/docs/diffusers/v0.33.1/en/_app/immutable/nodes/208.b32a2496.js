import{s as Qt,o as Pt,n as qt}from"../chunks/scheduler.8c3d61f6.js";import{S as Ot,i as Kt,g,s as n,r as h,A as te,h as r,f as l,c as a,j as jt,u as f,x as o,k as tt,y as et,a as i,v as c,d as m,t as p,w as u}from"../chunks/index.da70eac4.js";import{T as Lt}from"../chunks/Tip.1d9b8c37.js";import{C as Wt}from"../chunks/CodeBlock.a9c4becf.js";import{H as q,E as ee}from"../chunks/index.5d4ab994.js";function le(Q){let d,M='Model support can be requested <a href="https://github.com/huggingface/diffusers/issues/new?template=remote-vae-pilot-feedback.yml" rel="nofollow">here</a>.';return{c(){d=g("p"),d.innerHTML=M},l(s){d=r(s,"P",{"data-svelte-h":!0}),o(d)!=="svelte-h2eawu"&&(d.innerHTML=M)},m(s,y){i(s,d,y)},p:qt,d(s){s&&l(d)}}}function ie(Q){let d,M="Install <code>diffusers</code> from <code>main</code> to run the code: <code>pip install git+https://github.com/huggingface/diffusers@main</code>";return{c(){d=g("p"),d.innerHTML=M},l(s){d=r(s,"P",{"data-svelte-h":!0}),o(d)!=="svelte-llu1nm"&&(d.innerHTML=M)},m(s,y){i(s,d,y)},p:qt,d(s){s&&l(d)}}}function ne(Q){let d,M,s,y,x,lt,G,Vt="VAE encode is used for training, image-to-image and image-to-video - turning into images or videos into latent representations.",it,Z,nt,j,At="These tables demonstrate the VRAM requirements for VAE encode with SD v1 and SD XL on different GPUs.",at,$,Ft="For the majority of these GPUs the memory usage % dictates other models (text encoders, UNet/Transformer) must be offloaded, or tiled encoding has to be used which increases time taken and impacts quality.",dt,v,Ct='<summary>SD v1.5</summary> <table><thead><tr><th align="left">GPU</th> <th align="left">Resolution</th> <th align="right">Time (seconds)</th> <th align="right">Memory (%)</th> <th align="right">Tiled Time (secs)</th> <th align="right">Tiled Memory (%)</th></tr></thead> <tbody><tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">512x512</td> <td align="right">0.015</td> <td align="right">3.51901</td> <td align="right">0.015</td> <td align="right">3.51901</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">256x256</td> <td align="right">0.004</td> <td align="right">1.3154</td> <td align="right">0.005</td> <td align="right">1.3154</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">2048x2048</td> <td align="right">0.402</td> <td align="right">47.1852</td> <td align="right">0.496</td> <td align="right">3.51901</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">1024x1024</td> <td align="right">0.078</td> <td align="right">12.2658</td> <td align="right">0.094</td> <td align="right">3.51901</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">512x512</td> <td align="right">0.023</td> <td align="right">5.30105</td> <td align="right">0.023</td> <td align="right">5.30105</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">256x256</td> <td align="right">0.006</td> <td align="right">1.98152</td> <td align="right">0.006</td> <td align="right">1.98152</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">2048x2048</td> <td align="right">0.574</td> <td align="right">71.08</td> <td align="right">0.656</td> <td align="right">5.30105</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">1024x1024</td> <td align="right">0.111</td> <td align="right">18.4772</td> <td align="right">0.14</td> <td align="right">5.30105</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">512x512</td> <td align="right">0.032</td> <td align="right">3.52782</td> <td align="right">0.032</td> <td align="right">3.52782</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">256x256</td> <td align="right">0.01</td> <td align="right">1.31869</td> <td align="right">0.009</td> <td align="right">1.31869</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">2048x2048</td> <td align="right">0.742</td> <td align="right">47.3033</td> <td align="right">0.954</td> <td align="right">3.52782</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">1024x1024</td> <td align="right">0.136</td> <td align="right">12.2965</td> <td align="right">0.207</td> <td align="right">3.52782</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">512x512</td> <td align="right">0.036</td> <td align="right">8.51761</td> <td align="right">0.036</td> <td align="right">8.51761</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">256x256</td> <td align="right">0.01</td> <td align="right">3.18387</td> <td align="right">0.01</td> <td align="right">3.18387</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">2048x2048</td> <td align="right">0.863</td> <td align="right">86.7424</td> <td align="right">1.191</td> <td align="right">8.51761</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">1024x1024</td> <td align="right">0.157</td> <td align="right">29.6888</td> <td align="right">0.227</td> <td align="right">8.51761</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">512x512</td> <td align="right">0.051</td> <td align="right">10.6941</td> <td align="right">0.051</td> <td align="right">10.6941</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">256x256</td> <td align="right">0.015</td> <td align="right">3.99743</td> <td align="right">0.015</td> <td align="right">3.99743</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">2048x2048</td> <td align="right">1.217</td> <td align="right">96.054</td> <td align="right">1.482</td> <td align="right">10.6941</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">1024x1024</td> <td align="right">0.223</td> <td align="right">37.2751</td> <td align="right">0.327</td> <td align="right">10.6941</td></tr></tbody></table>',gt,W,Xt='<summary>SDXL</summary> <table><thead><tr><th align="left">GPU</th> <th align="left">Resolution</th> <th align="right">Time (seconds)</th> <th align="right">Memory Consumed (%)</th> <th align="right">Tiled Time (seconds)</th> <th align="right">Tiled Memory (%)</th></tr></thead> <tbody><tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">512x512</td> <td align="right">0.029</td> <td align="right">4.95707</td> <td align="right">0.029</td> <td align="right">4.95707</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">256x256</td> <td align="right">0.007</td> <td align="right">2.29666</td> <td align="right">0.007</td> <td align="right">2.29666</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">2048x2048</td> <td align="right">0.873</td> <td align="right">66.3452</td> <td align="right">0.863</td> <td align="right">15.5649</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4090</td> <td align="left">1024x1024</td> <td align="right">0.142</td> <td align="right">15.5479</td> <td align="right">0.143</td> <td align="right">15.5479</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">512x512</td> <td align="right">0.044</td> <td align="right">7.46735</td> <td align="right">0.044</td> <td align="right">7.46735</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">256x256</td> <td align="right">0.01</td> <td align="right">3.4597</td> <td align="right">0.01</td> <td align="right">3.4597</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">2048x2048</td> <td align="right">1.317</td> <td align="right">87.1615</td> <td align="right">1.291</td> <td align="right">23.447</td></tr> <tr><td align="left">NVIDIA GeForce RTX 4080 SUPER</td> <td align="left">1024x1024</td> <td align="right">0.213</td> <td align="right">23.4215</td> <td align="right">0.214</td> <td align="right">23.4215</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">512x512</td> <td align="right">0.058</td> <td align="right">5.65638</td> <td align="right">0.058</td> <td align="right">5.65638</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">256x256</td> <td align="right">0.016</td> <td align="right">2.45081</td> <td align="right">0.016</td> <td align="right">2.45081</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">2048x2048</td> <td align="right">1.755</td> <td align="right">77.8239</td> <td align="right">1.614</td> <td align="right">18.4193</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3090</td> <td align="left">1024x1024</td> <td align="right">0.265</td> <td align="right">18.4023</td> <td align="right">0.265</td> <td align="right">18.4023</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">512x512</td> <td align="right">0.064</td> <td align="right">13.6568</td> <td align="right">0.064</td> <td align="right">13.6568</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">256x256</td> <td align="right">0.018</td> <td align="right">5.91728</td> <td align="right">0.018</td> <td align="right">5.91728</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">2048x2048</td> <td align="right">OOM</td> <td align="right">OOM</td> <td align="right">1.866</td> <td align="right">44.4717</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3080</td> <td align="left">1024x1024</td> <td align="right">0.302</td> <td align="right">44.4308</td> <td align="right">0.302</td> <td align="right">44.4308</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">512x512</td> <td align="right">0.093</td> <td align="right">17.1465</td> <td align="right">0.093</td> <td align="right">17.1465</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">256x256</td> <td align="right">0.025</td> <td align="right">7.42931</td> <td align="right">0.026</td> <td align="right">7.42931</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">2048x2048</td> <td align="right">OOM</td> <td align="right">OOM</td> <td align="right">2.674</td> <td align="right">55.8355</td></tr> <tr><td align="left">NVIDIA GeForce RTX 3070</td> <td align="left">1024x1024</td> <td align="right">0.443</td> <td align="right">55.7841</td> <td align="right">0.443</td> <td align="right">55.7841</td></tr></tbody></table>',rt,V,st,A,Et='<thead><tr><th align="center"></th> <th align="center"><strong>Endpoint</strong></th> <th align="center"><strong>Model</strong></th></tr></thead> <tbody><tr><td align="center"><strong>Stable Diffusion v1</strong></td> <td align="center"><a href="https://qc6479g0aac6qwy9.us-east-1.aws.endpoints.huggingface.cloud" rel="nofollow">https://qc6479g0aac6qwy9.us-east-1.aws.endpoints.huggingface.cloud</a></td> <td align="center"><a href="https://hf.co/stabilityai/sd-vae-ft-mse" rel="nofollow"><code>stabilityai/sd-vae-ft-mse</code></a></td></tr> <tr><td align="center"><strong>Stable Diffusion XL</strong></td> <td align="center"><a href="https://xjqqhmyn62rog84g.us-east-1.aws.endpoints.huggingface.cloud" rel="nofollow">https://xjqqhmyn62rog84g.us-east-1.aws.endpoints.huggingface.cloud</a></td> <td align="center"><a href="https://hf.co/madebyollin/sdxl-vae-fp16-fix" rel="nofollow"><code>madebyollin/sdxl-vae-fp16-fix</code></a></td></tr> <tr><td align="center"><strong>Flux</strong></td> <td align="center"><a href="https://ptccx55jz97f9zgo.us-east-1.aws.endpoints.huggingface.cloud" rel="nofollow">https://ptccx55jz97f9zgo.us-east-1.aws.endpoints.huggingface.cloud</a></td> <td align="center"><a href="https://hf.co/black-forest-labs/FLUX.1-schnell" rel="nofollow"><code>black-forest-labs/FLUX.1-schnell</code></a></td></tr></tbody>',ot,T,ht,F,ft,I,ct,C,Nt="A helper method simplifies interacting with Hybrid Inference.",mt,X,pt,E,ut,N,kt="Let’s encode an image, then decode it to demonstrate.",Mt,w,Bt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/astronaut.jpg"/>',yt,b,P,_t="Code",$t,k,Tt,J,Dt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/blog/remote_vae/decoded.png"/>',It,B,wt,_,St="Now let’s look at a generation example, we’ll encode the image, generate then remotely decode too!",bt,U,O,zt="Code",vt,D,Jt,R,Yt='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/blog/remote_vae/fantasy_landscape.png"/>',Ut,S,Rt,z,Ht='<li><strong><a href="https://github.com/vladmandic/sdnext" rel="nofollow">SD.Next</a>:</strong> All-in-one UI with direct supports Hybrid Inference.</li> <li><strong><a href="https://github.com/kijai/ComfyUI-HFRemoteVae" rel="nofollow">ComfyUI-HFRemoteVae</a>:</strong> ComfyUI node for Hybrid Inference.</li>',xt,Y,Gt,K,Zt;return x=new q({props:{title:"Getting Started: VAE Encode with Hybrid Inference",local:"getting-started-vae-encode-with-hybrid-inference",headingTag:"h1"}}),Z=new q({props:{title:"Memory",local:"memory",headingTag:"h2"}}),V=new q({props:{title:"Available VAEs",local:"available-vaes",headingTag:"h2"}}),T=new Lt({props:{warning:!1,$$slots:{default:[le]},$$scope:{ctx:Q}}}),F=new q({props:{title:"Code",local:"code",headingTag:"h2"}}),I=new Lt({props:{warning:!1,$$slots:{default:[ie]},$$scope:{ctx:Q}}}),X=new Wt({props:{code:"ZnJvbSUyMGRpZmZ1c2Vycy51dGlscy5yZW1vdGVfdXRpbHMlMjBpbXBvcnQlMjByZW1vdGVfZW5jb2Rl",highlighted:'<span class="hljs-keyword">from</span> diffusers.utils.remote_utils <span class="hljs-keyword">import</span> remote_encode',wrap:!1}}),E=new q({props:{title:"Basic example",local:"basic-example",headingTag:"h3"}}),k=new Wt({props:{code:"ZnJvbSUyMGRpZmZ1c2Vycy51dGlscyUyMGltcG9ydCUyMGxvYWRfaW1hZ2UlMEFmcm9tJTIwZGlmZnVzZXJzLnV0aWxzLnJlbW90ZV91dGlscyUyMGltcG9ydCUyMHJlbW90ZV9kZWNvZGUlMEElMEFpbWFnZSUyMCUzRCUyMGxvYWRfaW1hZ2UoJTIyaHR0cHMlM0ElMkYlMkZodWdnaW5nZmFjZS5jbyUyRmRhdGFzZXRzJTJGaHVnZ2luZ2ZhY2UlMkZkb2N1bWVudGF0aW9uLWltYWdlcyUyRnJlc29sdmUlMkZtYWluJTJGZGlmZnVzZXJzJTJGYXN0cm9uYXV0LmpwZyUzRmRvd25sb2FkJTNEdHJ1ZSUyMiklMEElMEFsYXRlbnQlMjAlM0QlMjByZW1vdGVfZW5jb2RlKCUwQSUyMCUyMCUyMCUyMGVuZHBvaW50JTNEJTIyaHR0cHMlM0ElMkYlMkZwdGNjeDU1ano5N2Y5emdvLnVzLWVhc3QtMS5hd3MuZW5kcG9pbnRzLmh1Z2dpbmdmYWNlLmNsb3VkJTJGJTIyJTJDJTBBJTIwJTIwJTIwJTIwc2NhbGluZ19mYWN0b3IlM0QwLjM2MTElMkMlMEElMjAlMjAlMjAlMjBzaGlmdF9mYWN0b3IlM0QwLjExNTklMkMlMEEpJTBBJTBBZGVjb2RlZCUyMCUzRCUyMHJlbW90ZV9kZWNvZGUoJTBBJTIwJTIwJTIwJTIwZW5kcG9pbnQlM0QlMjJodHRwcyUzQSUyRiUyRndoaHg1MGV4MWFyeXF2dzYudXMtZWFzdC0xLmF3cy5lbmRwb2ludHMuaHVnZ2luZ2ZhY2UuY2xvdWQlMkYlMjIlMkMlMEElMjAlMjAlMjAlMjB0ZW5zb3IlM0RsYXRlbnQlMkMlMEElMjAlMjAlMjAlMjBzY2FsaW5nX2ZhY3RvciUzRDAuMzYxMSUyQyUwQSUyMCUyMCUyMCUyMHNoaWZ0X2ZhY3RvciUzRDAuMTE1OSUyQyUwQSk=",highlighted:`<span class="hljs-keyword">from</span> diffusers.utils <span class="hljs-keyword">import</span> load_image
<span class="hljs-keyword">from</span> diffusers.utils.remote_utils <span class="hljs-keyword">import</span> remote_decode

image = load_image(<span class="hljs-string">&quot;https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/diffusers/astronaut.jpg?download=true&quot;</span>)

latent = remote_encode(
    endpoint=<span class="hljs-string">&quot;https://ptccx55jz97f9zgo.us-east-1.aws.endpoints.huggingface.cloud/&quot;</span>,
    scaling_factor=<span class="hljs-number">0.3611</span>,
    shift_factor=<span class="hljs-number">0.1159</span>,
)

decoded = remote_decode(
    endpoint=<span class="hljs-string">&quot;https://whhx50ex1aryqvw6.us-east-1.aws.endpoints.huggingface.cloud/&quot;</span>,
    tensor=latent,
    scaling_factor=<span class="hljs-number">0.3611</span>,
    shift_factor=<span class="hljs-number">0.1159</span>,
)`,wrap:!1}}),B=new q({props:{title:"Generation",local:"generation",headingTag:"h3"}}),D=new Wt({props:{code:"aW1wb3J0JTIwdG9yY2glMEFmcm9tJTIwZGlmZnVzZXJzJTIwaW1wb3J0JTIwU3RhYmxlRGlmZnVzaW9uSW1nMkltZ1BpcGVsaW5lJTBBZnJvbSUyMGRpZmZ1c2Vycy51dGlscyUyMGltcG9ydCUyMGxvYWRfaW1hZ2UlMEFmcm9tJTIwZGlmZnVzZXJzLnV0aWxzLnJlbW90ZV91dGlscyUyMGltcG9ydCUyMHJlbW90ZV9kZWNvZGUlMkMlMjByZW1vdGVfZW5jb2RlJTBBJTBBcGlwZSUyMCUzRCUyMFN0YWJsZURpZmZ1c2lvbkltZzJJbWdQaXBlbGluZS5mcm9tX3ByZXRyYWluZWQoJTBBJTIwJTIwJTIwJTIwJTIyc3RhYmxlLWRpZmZ1c2lvbi12MS01JTJGc3RhYmxlLWRpZmZ1c2lvbi12MS01JTIyJTJDJTBBJTIwJTIwJTIwJTIwdG9yY2hfZHR5cGUlM0R0b3JjaC5mbG9hdDE2JTJDJTBBJTIwJTIwJTIwJTIwdmFyaWFudCUzRCUyMmZwMTYlMjIlMkMlMEElMjAlMjAlMjAlMjB2YWUlM0ROb25lJTJDJTBBKS50byglMjJjdWRhJTIyKSUwQSUwQWluaXRfaW1hZ2UlMjAlM0QlMjBsb2FkX2ltYWdlKCUwQSUyMCUyMCUyMCUyMCUyMmh0dHBzJTNBJTJGJTJGcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSUyRkNvbXBWaXMlMkZzdGFibGUtZGlmZnVzaW9uJTJGbWFpbiUyRmFzc2V0cyUyRnN0YWJsZS1zYW1wbGVzJTJGaW1nMmltZyUyRnNrZXRjaC1tb3VudGFpbnMtaW5wdXQuanBnJTIyJTBBKSUwQWluaXRfaW1hZ2UlMjAlM0QlMjBpbml0X2ltYWdlLnJlc2l6ZSgoNzY4JTJDJTIwNTEyKSklMEElMEFpbml0X2xhdGVudCUyMCUzRCUyMHJlbW90ZV9lbmNvZGUoJTBBJTIwJTIwJTIwJTIwZW5kcG9pbnQlM0QlMjJodHRwcyUzQSUyRiUyRnFjNjQ3OWcwYWFjNnF3eTkudXMtZWFzdC0xLmF3cy5lbmRwb2ludHMuaHVnZ2luZ2ZhY2UuY2xvdWQlMkYlMjIlMkMlMEElMjAlMjAlMjAlMjBpbWFnZSUzRGluaXRfaW1hZ2UlMkMlMEElMjAlMjAlMjAlMjBzY2FsaW5nX2ZhY3RvciUzRDAuMTgyMTUlMkMlMEEpJTBBJTBBcHJvbXB0JTIwJTNEJTIwJTIyQSUyMGZhbnRhc3klMjBsYW5kc2NhcGUlMkMlMjB0cmVuZGluZyUyMG9uJTIwYXJ0c3RhdGlvbiUyMiUwQWxhdGVudCUyMCUzRCUyMHBpcGUoJTBBJTIwJTIwJTIwJTIwcHJvbXB0JTNEcHJvbXB0JTJDJTBBJTIwJTIwJTIwJTIwaW1hZ2UlM0Rpbml0X2xhdGVudCUyQyUwQSUyMCUyMCUyMCUyMHN0cmVuZ3RoJTNEMC43NSUyQyUwQSUyMCUyMCUyMCUyMG91dHB1dF90eXBlJTNEJTIybGF0ZW50JTIyJTJDJTBBKS5pbWFnZXMlMEElMEFpbWFnZSUyMCUzRCUyMHJlbW90ZV9kZWNvZGUoJTBBJTIwJTIwJTIwJTIwZW5kcG9pbnQlM0QlMjJodHRwcyUzQSUyRiUyRnExYmozYnBxNmt6aWxuc3UudXMtZWFzdC0xLmF3cy5lbmRwb2ludHMuaHVnZ2luZ2ZhY2UuY2xvdWQlMkYlMjIlMkMlMEElMjAlMjAlMjAlMjB0ZW5zb3IlM0RsYXRlbnQlMkMlMEElMjAlMjAlMjAlMjBzY2FsaW5nX2ZhY3RvciUzRDAuMTgyMTUlMkMlMEEpJTBBaW1hZ2Uuc2F2ZSglMjJmYW50YXN5X2xhbmRzY2FwZS5qcGclMjIp",highlighted:`<span class="hljs-keyword">import</span> torch
<span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> StableDiffusionImg2ImgPipeline
<span class="hljs-keyword">from</span> diffusers.utils <span class="hljs-keyword">import</span> load_image
<span class="hljs-keyword">from</span> diffusers.utils.remote_utils <span class="hljs-keyword">import</span> remote_decode, remote_encode

pipe = StableDiffusionImg2ImgPipeline.from_pretrained(
    <span class="hljs-string">&quot;stable-diffusion-v1-5/stable-diffusion-v1-5&quot;</span>,
    torch_dtype=torch.float16,
    variant=<span class="hljs-string">&quot;fp16&quot;</span>,
    vae=<span class="hljs-literal">None</span>,
).to(<span class="hljs-string">&quot;cuda&quot;</span>)

init_image = load_image(
    <span class="hljs-string">&quot;https://raw.githubusercontent.com/CompVis/stable-diffusion/main/assets/stable-samples/img2img/sketch-mountains-input.jpg&quot;</span>
)
init_image = init_image.resize((<span class="hljs-number">768</span>, <span class="hljs-number">512</span>))

init_latent = remote_encode(
    endpoint=<span class="hljs-string">&quot;https://qc6479g0aac6qwy9.us-east-1.aws.endpoints.huggingface.cloud/&quot;</span>,
    image=init_image,
    scaling_factor=<span class="hljs-number">0.18215</span>,
)

prompt = <span class="hljs-string">&quot;A fantasy landscape, trending on artstation&quot;</span>
latent = pipe(
    prompt=prompt,
    image=init_latent,
    strength=<span class="hljs-number">0.75</span>,
    output_type=<span class="hljs-string">&quot;latent&quot;</span>,
).images

image = remote_decode(
    endpoint=<span class="hljs-string">&quot;https://q1bj3bpq6kzilnsu.us-east-1.aws.endpoints.huggingface.cloud/&quot;</span>,
    tensor=latent,
    scaling_factor=<span class="hljs-number">0.18215</span>,
)
image.save(<span class="hljs-string">&quot;fantasy_landscape.jpg&quot;</span>)`,wrap:!1}}),S=new q({props:{title:"Integrations",local:"integrations",headingTag:"h2"}}),Y=new ee({props:{source:"https://github.com/huggingface/diffusers/blob/main/docs/source/en/hybrid_inference/vae_encode.md"}}),{c(){d=g("meta"),M=n(),s=g("p"),y=n(),h(x.$$.fragment),lt=n(),G=g("p"),G.textContent=Vt,it=n(),h(Z.$$.fragment),nt=n(),j=g("p"),j.textContent=At,at=n(),$=g("p"),$.textContent=Ft,dt=n(),v=g("details"),v.innerHTML=Ct,gt=n(),W=g("details"),W.innerHTML=Xt,rt=n(),h(V.$$.fragment),st=n(),A=g("table"),A.innerHTML=Et,ot=n(),h(T.$$.fragment),ht=n(),h(F.$$.fragment),ft=n(),h(I.$$.fragment),ct=n(),C=g("p"),C.textContent=Nt,mt=n(),h(X.$$.fragment),pt=n(),h(E.$$.fragment),ut=n(),N=g("p"),N.textContent=kt,Mt=n(),w=g("figure"),w.innerHTML=Bt,yt=n(),b=g("details"),P=g("summary"),P.textContent=_t,$t=n(),h(k.$$.fragment),Tt=n(),J=g("figure"),J.innerHTML=Dt,It=n(),h(B.$$.fragment),wt=n(),_=g("p"),_.textContent=St,bt=n(),U=g("details"),O=g("summary"),O.textContent=zt,vt=n(),h(D.$$.fragment),Jt=n(),R=g("figure"),R.innerHTML=Yt,Ut=n(),h(S.$$.fragment),Rt=n(),z=g("ul"),z.innerHTML=Ht,xt=n(),h(Y.$$.fragment),Gt=n(),K=g("p"),this.h()},l(t){const e=te("svelte-u9bgzb",document.head);d=r(e,"META",{name:!0,content:!0}),e.forEach(l),M=a(t),s=r(t,"P",{}),jt(s).forEach(l),y=a(t),f(x.$$.fragment,t),lt=a(t),G=r(t,"P",{"data-svelte-h":!0}),o(G)!=="svelte-1cgku8g"&&(G.textContent=Vt),it=a(t),f(Z.$$.fragment,t),nt=a(t),j=r(t,"P",{"data-svelte-h":!0}),o(j)!=="svelte-kw4hxx"&&(j.textContent=At),at=a(t),$=r(t,"P",{"data-svelte-h":!0}),o($)!=="svelte-6lkfqw"&&($.textContent=Ft),dt=a(t),v=r(t,"DETAILS",{"data-svelte-h":!0}),o(v)!=="svelte-1m5p1fk"&&(v.innerHTML=Ct),gt=a(t),W=r(t,"DETAILS",{"data-svelte-h":!0}),o(W)!=="svelte-et2lgj"&&(W.innerHTML=Xt),rt=a(t),f(V.$$.fragment,t),st=a(t),A=r(t,"TABLE",{"data-svelte-h":!0}),o(A)!=="svelte-sqz2ck"&&(A.innerHTML=Et),ot=a(t),f(T.$$.fragment,t),ht=a(t),f(F.$$.fragment,t),ft=a(t),f(I.$$.fragment,t),ct=a(t),C=r(t,"P",{"data-svelte-h":!0}),o(C)!=="svelte-1056iw0"&&(C.textContent=Nt),mt=a(t),f(X.$$.fragment,t),pt=a(t),f(E.$$.fragment,t),ut=a(t),N=r(t,"P",{"data-svelte-h":!0}),o(N)!=="svelte-1vrzv0u"&&(N.textContent=kt),Mt=a(t),w=r(t,"FIGURE",{class:!0,"data-svelte-h":!0}),o(w)!=="svelte-1wy8fyj"&&(w.innerHTML=Bt),yt=a(t),b=r(t,"DETAILS",{});var H=jt(b);P=r(H,"SUMMARY",{"data-svelte-h":!0}),o(P)!=="svelte-14caxiv"&&(P.textContent=_t),$t=a(H),f(k.$$.fragment,H),H.forEach(l),Tt=a(t),J=r(t,"FIGURE",{class:!0,"data-svelte-h":!0}),o(J)!=="svelte-1a59igj"&&(J.innerHTML=Dt),It=a(t),f(B.$$.fragment,t),wt=a(t),_=r(t,"P",{"data-svelte-h":!0}),o(_)!=="svelte-kv2qb1"&&(_.textContent=St),bt=a(t),U=r(t,"DETAILS",{});var L=jt(U);O=r(L,"SUMMARY",{"data-svelte-h":!0}),o(O)!=="svelte-14caxiv"&&(O.textContent=zt),vt=a(L),f(D.$$.fragment,L),L.forEach(l),Jt=a(t),R=r(t,"FIGURE",{class:!0,"data-svelte-h":!0}),o(R)!=="svelte-1kcguop"&&(R.innerHTML=Yt),Ut=a(t),f(S.$$.fragment,t),Rt=a(t),z=r(t,"UL",{"data-svelte-h":!0}),o(z)!=="svelte-1lxpzv1"&&(z.innerHTML=Ht),xt=a(t),f(Y.$$.fragment,t),Gt=a(t),K=r(t,"P",{}),jt(K).forEach(l),this.h()},h(){tt(d,"name","hf:doc:metadata"),tt(d,"content",ae),tt(w,"class","image flex flex-col items-center justify-center text-center m-0 w-full"),tt(J,"class","image flex flex-col items-center justify-center text-center m-0 w-full"),tt(R,"class","image flex flex-col items-center justify-center text-center m-0 w-full")},m(t,e){et(document.head,d),i(t,M,e),i(t,s,e),i(t,y,e),c(x,t,e),i(t,lt,e),i(t,G,e),i(t,it,e),c(Z,t,e),i(t,nt,e),i(t,j,e),i(t,at,e),i(t,$,e),i(t,dt,e),i(t,v,e),i(t,gt,e),i(t,W,e),i(t,rt,e),c(V,t,e),i(t,st,e),i(t,A,e),i(t,ot,e),c(T,t,e),i(t,ht,e),c(F,t,e),i(t,ft,e),c(I,t,e),i(t,ct,e),i(t,C,e),i(t,mt,e),c(X,t,e),i(t,pt,e),c(E,t,e),i(t,ut,e),i(t,N,e),i(t,Mt,e),i(t,w,e),i(t,yt,e),i(t,b,e),et(b,P),et(b,$t),c(k,b,null),i(t,Tt,e),i(t,J,e),i(t,It,e),c(B,t,e),i(t,wt,e),i(t,_,e),i(t,bt,e),i(t,U,e),et(U,O),et(U,vt),c(D,U,null),i(t,Jt,e),i(t,R,e),i(t,Ut,e),c(S,t,e),i(t,Rt,e),i(t,z,e),i(t,xt,e),c(Y,t,e),i(t,Gt,e),i(t,K,e),Zt=!0},p(t,[e]){const H={};e&2&&(H.$$scope={dirty:e,ctx:t}),T.$set(H);const L={};e&2&&(L.$$scope={dirty:e,ctx:t}),I.$set(L)},i(t){Zt||(m(x.$$.fragment,t),m(Z.$$.fragment,t),m(V.$$.fragment,t),m(T.$$.fragment,t),m(F.$$.fragment,t),m(I.$$.fragment,t),m(X.$$.fragment,t),m(E.$$.fragment,t),m(k.$$.fragment,t),m(B.$$.fragment,t),m(D.$$.fragment,t),m(S.$$.fragment,t),m(Y.$$.fragment,t),Zt=!0)},o(t){p(x.$$.fragment,t),p(Z.$$.fragment,t),p(V.$$.fragment,t),p(T.$$.fragment,t),p(F.$$.fragment,t),p(I.$$.fragment,t),p(X.$$.fragment,t),p(E.$$.fragment,t),p(k.$$.fragment,t),p(B.$$.fragment,t),p(D.$$.fragment,t),p(S.$$.fragment,t),p(Y.$$.fragment,t),Zt=!1},d(t){t&&(l(M),l(s),l(y),l(lt),l(G),l(it),l(nt),l(j),l(at),l($),l(dt),l(v),l(gt),l(W),l(rt),l(st),l(A),l(ot),l(ht),l(ft),l(ct),l(C),l(mt),l(pt),l(ut),l(N),l(Mt),l(w),l(yt),l(b),l(Tt),l(J),l(It),l(wt),l(_),l(bt),l(U),l(Jt),l(R),l(Ut),l(Rt),l(z),l(xt),l(Gt),l(K)),l(d),u(x,t),u(Z,t),u(V,t),u(T,t),u(F,t),u(I,t),u(X,t),u(E,t),u(k),u(B,t),u(D),u(S,t),u(Y,t)}}}const ae='{"title":"Getting Started: VAE Encode with Hybrid Inference","local":"getting-started-vae-encode-with-hybrid-inference","sections":[{"title":"Memory","local":"memory","sections":[],"depth":2},{"title":"Available VAEs","local":"available-vaes","sections":[],"depth":2},{"title":"Code","local":"code","sections":[{"title":"Basic example","local":"basic-example","sections":[],"depth":3},{"title":"Generation","local":"generation","sections":[],"depth":3}],"depth":2},{"title":"Integrations","local":"integrations","sections":[],"depth":2}],"depth":1}';function de(Q){return Pt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class fe extends Ot{constructor(d){super(),Kt(this,d,de,ne,Qt,{})}}export{fe as component};
