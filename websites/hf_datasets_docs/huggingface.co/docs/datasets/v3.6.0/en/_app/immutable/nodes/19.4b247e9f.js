import{s as Ia,o as Pa,n as da}from"../chunks/scheduler.bdbef820.js";import{S as La,i as Ya,g as i,s as l,r as c,A as Xa,h as r,f as t,c as n,j as Fa,u as m,x as o,k as va,y as Wa,a as e,v as f,d as h,t as g,w as u}from"../chunks/index.c0aea24a.js";import{T as pa}from"../chunks/Tip.31005f7d.js";import{C as y}from"../chunks/CodeBlock.e814ab8d.js";import{H as fs,E as Ha}from"../chunks/index.89e522f3.js";function qa(M){let p,j="Pdf support is experimental and is subject to change.";return{c(){p=i("p"),p.textContent=j},l(d){p=r(d,"P",{"data-svelte-h":!0}),o(p)!=="svelte-sbwph"&&(p.textContent=j)},m(d,$){e(d,p,$)},p:da,d(d){d&&t(p)}}}function za(M){let p,j='To work with pdf datasets, you need to have the <code>pdfplumber</code> package installed. Check out the <a href="https://github.com/jsvine/pdfplumber#installation" rel="nofollow">installation</a> guide to learn how to install it.';return{c(){p=i("p"),p.innerHTML=j},l(d){p=r(d,"P",{"data-svelte-h":!0}),o(p)!=="svelte-1m4gxpq"&&(p.innerHTML=j)},m(d,$){e(d,p,$)},p:da,d(d){d&&t(p)}}}function Ba(M){let p,j="Index into an pdf dataset using the row index first and then the <code>pdf</code> column - <code>dataset[0][&quot;pdf&quot;]</code> - to avoid creating all the pdf objects in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.";return{c(){p=i("p"),p.innerHTML=j},l(d){p=r(d,"P",{"data-svelte-h":!0}),o(p)!=="svelte-1v54wby"&&(p.innerHTML=j)},m(d,$){e(d,p,$)},p:da,d(d){d&&t(p)}}}function Va(M){let p,j='For more information about creating your own <code>PdfFolder</code> dataset, take a look at the <a href="./document_dataset">Create a pdf dataset</a> guide.';return{c(){p=i("p"),p.innerHTML=j},l(d){p=r(d,"P",{"data-svelte-h":!0}),o(p)!=="svelte-1m2n0ga"&&(p.innerHTML=j)},m(d,$){e(d,p,$)},p:da,d(d){d&&t(p)}}}function Na(M){let p,j,d,$,U,hs,b,gs,J,ia='Pdf datasets have <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Pdf">Pdf</a> type columns, which contain <code>pdfplumber</code> objects.',us,w,js,R,ra="When you load an pdf dataset and call the pdf column, the pdfs are decoded as <code>pdfplumber</code> Pdfs:",ys,_,$s,T,Ms,Z,oa='For a guide on how to load any type of dataset, take a look at the <a class="underline decoration-sky-400 decoration-2 font-semibold" href="./loading">general loading guide</a>.',bs,G,ws,k,ca="Access pages directly from a pdf using the <code>PDF</code> using <code>.pages</code>.",Ts,C,ma="Then you can use the <code>pdfplumber</code> functions to read texts, tables and images, e.g.:",xs,F,Us,v,fa="You can also load each page as a <code>PIL.Image</code>:",Js,I,Rs,P,ha="Note that you can pass <code>resolution=</code> to <code>.to_image()</code> to render the image in higher resolution that the default (72 ppi).",_s,L,Zs,Y,ga='You can load a dataset from the pdf path. Use the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.cast_column">cast_column()</a> function to accept a column of pdf file paths, and decode it into a <code>pdfplumber</code> pdf with the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Pdf">Pdf</a> feature:',Gs,X,ks,W,ua='If you only want to load the underlying path to the pdf dataset without decoding the pdf object, set <code>decode=False</code> in the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Pdf">Pdf</a> feature:',Cs,H,Fs,q,vs,z,ja="You can also load a dataset with an <code>PdfFolder</code> dataset builder which does not require writing a custom dataloader. This makes <code>PdfFolder</code> ideal for quickly creating and loading pdf datasets with several thousand pdfs for different vision tasks. Your pdf dataset structure should look like this:",Is,B,Ps,V,ya='If the dataset follows the <code>PdfFolder</code> structure, then you can load it directly with <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',Ls,N,Ys,E,$a='For local datasets, this is equivalent to passing <code>pdffolder</code> manually in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> and the directory in <code>data_dir</code>:',Xs,Q,Ws,S,Ma="Then you can access the pdfs as <code>pdfplumber.pdf.PDF</code> objects:",Hs,D,qs,K,ba='To ignore the information in the metadata file, set <code>drop_metadata=True</code> in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',zs,A,Bs,O,wa=`If you don’t have a metadata file, <code>PdfFolder</code> automatically infers the label name from the directory name.
If you want to drop automatically created labels, set <code>drop_labels=True</code>.
In this case, your dataset will only contain an pdf column:`,Vs,ss,Ns,as,Ta="Finally the <code>filters</code> argument lets you load only a subset of the dataset, based on a condition on the label or the metadata. This is especially useful if the metadata is in Parquet format, since this format enables fast filtering. It is also recommended to use this argument with <code>streaming=True</code>, because by default the dataset is fully downloaded before filtering.",Es,ts,Qs,x,Ss,es,Ds,ls,xa=`By default, pdfs are decoded sequentially as pdfplumber <code>PDFs</code> when you iterate on a dataset.
It sequentially decodes the metadata of the pdfs, and doesn’t read the pdf pages until you access them.`,Ks,ns,Ua="However it is possible to speed up the dataset significantly using multithreaded decoding:",As,ps,Os,ds,Ja=`You can enable multithreading using <code>num_threads</code>. This is especially useful to speed up remote data streaming.
However it can be slower than <code>num_threads=0</code> for local data on fast disks.`,sa,is,Ra="If you are not interested in the documents decoded as pdfplumber <code>PDFs</code> and would like to access the path/bytes instead, you can disable decoding:",aa,rs,ta,os,_a='Note: <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.decode">IterableDataset.decode()</a> is only available for streaming datasets at the moment.',ea,cs,la,ms,na;return U=new fs({props:{title:"Load pdf data",local:"load-pdf-data",headingTag:"h1"}}),b=new pa({props:{warning:!0,$$slots:{default:[qa]},$$scope:{ctx:M}}}),w=new pa({props:{$$slots:{default:[za]},$$scope:{ctx:M}}}),_=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTJDJTIwUGRmJTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJwYXRoJTJGdG8lMkZwZGYlMkZmb2xkZXIlMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKSUwQWRhdGFzZXQlNUIwJTVEJTVCJTIycGRmJTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Pdf

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;path/to/pdf/folder&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;pdf&quot;</span>]
&lt;pdfplumber.pdf.PDF at <span class="hljs-number">0x1075bc320</span>&gt;`,wrap:!1}}),T=new pa({props:{warning:!0,$$slots:{default:[Ba]},$$scope:{ctx:M}}}),G=new fs({props:{title:"Read pages",local:"read-pages",headingTag:"h2"}}),F=new y({props:{code:"cGRmJTIwJTNEJTIwZGF0YXNldCU1QjAlNUQlNUIlMjJwZGYlMjIlNUQlMEFmaXJzdF9wYWdlJTIwJTNEJTIwcGRmLnBhZ2VzJTVCMCU1RCUwQWZpcnN0X3BhZ2UlMEFmaXJzdF9wYWdlLmV4dHJhY3RfdGV4dCgpJTBBZmlyc3RfcGFnZS5pbWFnZXMlMEFmaXJzdF9wYWdlLmV4dHJhY3RfdGFibGVzKCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pdf = dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;pdf&quot;</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page = pdf.pages[<span class="hljs-number">0</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page
&lt;Page:<span class="hljs-number">1</span>&gt;
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page.extract_text()
Docling Technical Report
Version1<span class="hljs-number">.0</span>
ChristophAuer MaksymLysak AhmedNassar MicheleDolfi NikolaosLivathinos
PanosVagenas CesarBerrospiRamis MatteoOmenetti FabianLindlbauer
KasperDinkla LokeshMishra YusikKim ShubhamGupta RafaelTeixeiradeLima
ValeryWeber LucasMorin IngmarMeijer ViktorKuropiatnyk PeterW.J.Staar
AI4KGroup,IBMResearch
Ru¨schlikon,Switzerland
Abstract
This technical report introduces Docling, an easy to use, self-contained, MIT-
licensed <span class="hljs-built_in">open</span>-source package <span class="hljs-keyword">for</span> PDF document conversion.
...
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page.images
In [<span class="hljs-number">24</span>]: first_page.images
Out[<span class="hljs-number">24</span>]: 
[{<span class="hljs-string">&#x27;x0&#x27;</span>: <span class="hljs-number">256.5</span>,
  <span class="hljs-string">&#x27;y0&#x27;</span>: <span class="hljs-number">621.0</span>,
  <span class="hljs-string">&#x27;x1&#x27;</span>: <span class="hljs-number">355.49519999999995</span>,
  <span class="hljs-string">&#x27;y1&#x27;</span>: <span class="hljs-number">719.9952</span>,
  <span class="hljs-string">&#x27;width&#x27;</span>: <span class="hljs-number">98.99519999999995</span>,
  <span class="hljs-string">&#x27;height&#x27;</span>: <span class="hljs-number">98.99519999999995</span>,
  <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Im1&#x27;</span>,
  <span class="hljs-string">&#x27;stream&#x27;</span>: &lt;PDFStream(<span class="hljs-number">44</span>): raw=<span class="hljs-number">88980</span>, {<span class="hljs-string">&#x27;Type&#x27;</span>: /<span class="hljs-string">&#x27;XObject&#x27;</span>, <span class="hljs-string">&#x27;Subtype&#x27;</span>: /<span class="hljs-string">&#x27;Image&#x27;</span>, <span class="hljs-string">&#x27;BitsPerComponent&#x27;</span>: <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;ColorSpace&#x27;</span>: /<span class="hljs-string">&#x27;DeviceRGB&#x27;</span>, <span class="hljs-string">&#x27;Filter&#x27;</span>: /<span class="hljs-string">&#x27;DCTDecode&#x27;</span>, <span class="hljs-string">&#x27;Height&#x27;</span>: <span class="hljs-number">1024</span>, <span class="hljs-string">&#x27;Length&#x27;</span>: <span class="hljs-number">88980</span>, <span class="hljs-string">&#x27;Width&#x27;</span>: <span class="hljs-number">1024</span>}&gt;,
  <span class="hljs-string">&#x27;srcsize&#x27;</span>: (<span class="hljs-number">1024</span>, <span class="hljs-number">1024</span>),
  <span class="hljs-string">&#x27;imagemask&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;bits&#x27;</span>: <span class="hljs-number">8</span>,
  <span class="hljs-string">&#x27;colorspace&#x27;</span>: [/<span class="hljs-string">&#x27;DeviceRGB&#x27;</span>],
  <span class="hljs-string">&#x27;mcid&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;tag&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;object_type&#x27;</span>: <span class="hljs-string">&#x27;image&#x27;</span>,
  <span class="hljs-string">&#x27;page_number&#x27;</span>: <span class="hljs-number">1</span>,
  <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">72.00480000000005</span>,
  <span class="hljs-string">&#x27;bottom&#x27;</span>: <span class="hljs-number">171.0</span>,
  <span class="hljs-string">&#x27;doctop&#x27;</span>: <span class="hljs-number">72.00480000000005</span>}]
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page.extract_tables()
[]`,wrap:!1}}),I=new y({props:{code:"aW1wb3J0JTIwUElMLkltYWdlJTBBaW1wb3J0JTIwaW8lMEFmaXJzdF9wYWdlLnRvX2ltYWdlKCklMEFidWZmZXIlMjAlM0QlMjBpby5CeXRlc0lPKCklMEFmaXJzdF9wYWdlLnRvX2ltYWdlKCkuc2F2ZShidWZmZXIpJTBBaW1nJTIwJTNEJTIwUElMLkltYWdlLm9wZW4oYnVmZmVyKSUwQWltZw==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> PIL.Image
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> io
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page.to_image()
&lt;pdfplumber.display.PageImage at <span class="hljs-number">0x107d68dd0</span>&gt;
<span class="hljs-meta">&gt;&gt;&gt; </span>buffer = io.BytesIO()
<span class="hljs-meta">&gt;&gt;&gt; </span>first_page.to_image().save(buffer)
<span class="hljs-meta">&gt;&gt;&gt; </span>img = PIL.Image.<span class="hljs-built_in">open</span>(buffer)
<span class="hljs-meta">&gt;&gt;&gt; </span>img
&lt;PIL.PngImagePlugin.PngImageFile image mode=P size=612x792&gt;`,wrap:!1}}),L=new fs({props:{title:"Local files",local:"local-files",headingTag:"h2"}}),X=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUyQyUyMFBkZiUwQSUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fZGljdCglN0IlMjJwZGYlMjIlM0ElMjAlNUIlMjJwYXRoJTJGdG8lMkZwZGZfMSUyMiUyQyUyMCUyMnBhdGglMkZ0byUyRnBkZl8yJTIyJTJDJTIwLi4uJTJDJTIwJTIycGF0aCUyRnRvJTJGcGRmX24lMjIlNUQlN0QpLmNhc3RfY29sdW1uKCUyMnBkZiUyMiUyQyUyMFBkZigpKSUwQWRhdGFzZXQlNUIwJTVEJTVCJTIycGRmJTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset, Pdf

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_dict({<span class="hljs-string">&quot;pdf&quot;</span>: [<span class="hljs-string">&quot;path/to/pdf_1&quot;</span>, <span class="hljs-string">&quot;path/to/pdf_2&quot;</span>, ..., <span class="hljs-string">&quot;path/to/pdf_n&quot;</span>]}).cast_column(<span class="hljs-string">&quot;pdf&quot;</span>, Pdf())
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;pdf&quot;</span>]
&lt;pdfplumber.pdf.PDF at <span class="hljs-number">0x1657d0280</span>&gt;`,wrap:!1}}),H=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuY2FzdF9jb2x1bW4oJTIycGRmJTIyJTJDJTIwUGRmKGRlY29kZSUzREZhbHNlKSklMEFkYXRhc2V0JTVCMCU1RCU1QiUyMnBkZiUyMiU1RA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.cast_column(<span class="hljs-string">&quot;pdf&quot;</span>, Pdf(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;pdf&quot;</span>]
{<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;path/to/pdf/folder/pdf0.pdf&#x27;</span>}`,wrap:!1}}),q=new fs({props:{title:"PdfFolder",local:"pdffolder",headingTag:"h2"}}),B=new y({props:{code:"Zm9sZGVyJTJGdHJhaW4lMkZyZXN1bWUlMkYwMDAxLnBkZiUwQWZvbGRlciUyRnRyYWluJTJGcmVzdW1lJTJGMDAwMi5wZGYlMEFmb2xkZXIlMkZ0cmFpbiUyRnJlc3VtZSUyRjAwMDMucGRmJTBBJTBBZm9sZGVyJTJGdHJhaW4lMkZpbnZvaWNlJTJGMDAwMS5wZGYlMEFmb2xkZXIlMkZ0cmFpbiUyRmludm9pY2UlMkYwMDAyLnBkZiUwQWZvbGRlciUyRnRyYWluJTJGaW52b2ljZSUyRjAwMDMucGRm",highlighted:`folder<span class="hljs-regexp">/train/</span>resume/<span class="hljs-number">0001</span>.pdf
folder<span class="hljs-regexp">/train/</span>resume/<span class="hljs-number">0002</span>.pdf
folder<span class="hljs-regexp">/train/</span>resume/<span class="hljs-number">0003</span>.pdf

folder<span class="hljs-regexp">/train/i</span>nvoice/<span class="hljs-number">0001</span>.pdf
folder<span class="hljs-regexp">/train/i</span>nvoice/<span class="hljs-number">0002</span>.pdf
folder<span class="hljs-regexp">/train/i</span>nvoice/<span class="hljs-number">0003</span>.pdf`,wrap:!1}}),N=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfbmFtZSUyMiklMEElMjMlMjBPUiUyMGxvY2FsbHklM0ElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMiUyRnBhdGglMkZ0byUyRmZvbGRlciUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_name&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># OR locally:</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;/path/to/folder&quot;</span>)`,wrap:!1}}),Q=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJwZGZmb2xkZXIlMjIlMkMlMjBkYXRhX2RpciUzRCUyMiUyRnBhdGglMkZ0byUyRmZvbGRlciUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;pdffolder&quot;</span>, data_dir=<span class="hljs-string">&quot;/path/to/folder&quot;</span>)',wrap:!1}}),D=new y({props:{code:"ZGF0YXNldCU1QiUyMnRyYWluJTIyJTVEJTVCMCU1RCUwQSUwQWRhdGFzZXQlNUIlMjJ0cmFpbiUyMiU1RCU1Qi0xJTVE",highlighted:`&gt;&gt;&gt; dataset<span class="hljs-selector-attr">[<span class="hljs-string">&quot;train&quot;</span>]</span><span class="hljs-selector-attr">[0]</span>
{<span class="hljs-string">&quot;pdf&quot;</span>: &lt;pdfplumber<span class="hljs-selector-class">.pdf</span><span class="hljs-selector-class">.PDF</span> at <span class="hljs-number">0</span>x161715e50&gt;, <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-number">0</span>}

&gt;&gt;&gt; dataset<span class="hljs-selector-attr">[<span class="hljs-string">&quot;train&quot;</span>]</span><span class="hljs-selector-attr">[-1]</span>
{<span class="hljs-string">&quot;pdf&quot;</span>: &lt;pdfplumber<span class="hljs-selector-class">.pdf</span><span class="hljs-selector-class">.PDF</span> at <span class="hljs-number">0</span>x16170bd90&gt;, <span class="hljs-string">&quot;label&quot;</span>: <span class="hljs-number">1</span>}`,wrap:!1}}),A=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfd2l0aF9tZXRhZGF0YSUyMiUyQyUyMGRyb3BfbWV0YWRhdGElM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_with_metadata&quot;</span>, drop_metadata=<span class="hljs-literal">True</span>)`,wrap:!1}}),ss=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfd2l0aG91dF9tZXRhZGF0YSUyMiUyQyUyMGRyb3BfbGFiZWxzJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_without_metadata&quot;</span>, drop_labels=<span class="hljs-literal">True</span>)`,wrap:!1}}),ts=new y({props:{code:"ZmlsdGVycyUyMCUzRCUyMCU1QiglMjJsYWJlbCUyMiUyQyUyMCUyMiUzRCUyMiUyQyUyMDApJTVEJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfbmFtZSUyMiUyQyUyMHN0cmVhbWluZyUzRFRydWUlMkMlMjBmaWx0ZXJzJTNEZmlsdGVycyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>filters = [(<span class="hljs-string">&quot;label&quot;</span>, <span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0</span>)]
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_name&quot;</span>, streaming=<span class="hljs-literal">True</span>, filters=filters)`,wrap:!1}}),x=new pa({props:{$$slots:{default:[Va]},$$scope:{ctx:M}}}),es=new fs({props:{title:"Pdf decoding",local:"pdf-decoding",headingTag:"h2"}}),ps=new y({props:{code:"aW1wb3J0JTIwb3MlMEFudW1fdGhyZWFkcyUyMCUzRCUyMG51bV90aHJlYWRzJTIwJTNEJTIwbWluKDMyJTJDJTIwKG9zLmNwdV9jb3VudCgpJTIwb3IlMjAxKSUyMCUyQiUyMDQpJTBBZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuZGVjb2RlKG51bV90aHJlYWRzJTNEbnVtX3RocmVhZHMpJTBBZm9yJTIwZXhhbXBsZSUyMGluJTIwZGF0YXNldCUzQSUyMCUyMCUyMyUyMHVwJTIwdG8lMjAyMCUyMHRpbWVzJTIwZmFzdGVyJTIwISUwQSUyMCUyMCUyMCUyMC4uLg==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> os
<span class="hljs-meta">&gt;&gt;&gt; </span>num_threads = num_threads = <span class="hljs-built_in">min</span>(<span class="hljs-number">32</span>, (os.cpu_count() <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>) + <span class="hljs-number">4</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.decode(num_threads=num_threads)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> dataset:  <span class="hljs-comment"># up to 20 times faster !</span>
<span class="hljs-meta">... </span>    ...`,wrap:!1}}),rs=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuZGVjb2RlKEZhbHNlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.decode(<span class="hljs-literal">False</span>)',wrap:!1}}),cs=new Ha({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/document_load.mdx"}}),{c(){p=i("meta"),j=l(),d=i("p"),$=l(),c(U.$$.fragment),hs=l(),c(b.$$.fragment),gs=l(),J=i("p"),J.innerHTML=ia,us=l(),c(w.$$.fragment),js=l(),R=i("p"),R.innerHTML=ra,ys=l(),c(_.$$.fragment),$s=l(),c(T.$$.fragment),Ms=l(),Z=i("p"),Z.innerHTML=oa,bs=l(),c(G.$$.fragment),ws=l(),k=i("p"),k.innerHTML=ca,Ts=l(),C=i("p"),C.innerHTML=ma,xs=l(),c(F.$$.fragment),Us=l(),v=i("p"),v.innerHTML=fa,Js=l(),c(I.$$.fragment),Rs=l(),P=i("p"),P.innerHTML=ha,_s=l(),c(L.$$.fragment),Zs=l(),Y=i("p"),Y.innerHTML=ga,Gs=l(),c(X.$$.fragment),ks=l(),W=i("p"),W.innerHTML=ua,Cs=l(),c(H.$$.fragment),Fs=l(),c(q.$$.fragment),vs=l(),z=i("p"),z.innerHTML=ja,Is=l(),c(B.$$.fragment),Ps=l(),V=i("p"),V.innerHTML=ya,Ls=l(),c(N.$$.fragment),Ys=l(),E=i("p"),E.innerHTML=$a,Xs=l(),c(Q.$$.fragment),Ws=l(),S=i("p"),S.innerHTML=Ma,Hs=l(),c(D.$$.fragment),qs=l(),K=i("p"),K.innerHTML=ba,zs=l(),c(A.$$.fragment),Bs=l(),O=i("p"),O.innerHTML=wa,Vs=l(),c(ss.$$.fragment),Ns=l(),as=i("p"),as.innerHTML=Ta,Es=l(),c(ts.$$.fragment),Qs=l(),c(x.$$.fragment),Ss=l(),c(es.$$.fragment),Ds=l(),ls=i("p"),ls.innerHTML=xa,Ks=l(),ns=i("p"),ns.textContent=Ua,As=l(),c(ps.$$.fragment),Os=l(),ds=i("p"),ds.innerHTML=Ja,sa=l(),is=i("p"),is.innerHTML=Ra,aa=l(),c(rs.$$.fragment),ta=l(),os=i("p"),os.innerHTML=_a,ea=l(),c(cs.$$.fragment),la=l(),ms=i("p"),this.h()},l(s){const a=Xa("svelte-u9bgzb",document.head);p=r(a,"META",{name:!0,content:!0}),a.forEach(t),j=n(s),d=r(s,"P",{}),Fa(d).forEach(t),$=n(s),m(U.$$.fragment,s),hs=n(s),m(b.$$.fragment,s),gs=n(s),J=r(s,"P",{"data-svelte-h":!0}),o(J)!=="svelte-xvgrl0"&&(J.innerHTML=ia),us=n(s),m(w.$$.fragment,s),js=n(s),R=r(s,"P",{"data-svelte-h":!0}),o(R)!=="svelte-mkphxd"&&(R.innerHTML=ra),ys=n(s),m(_.$$.fragment,s),$s=n(s),m(T.$$.fragment,s),Ms=n(s),Z=r(s,"P",{"data-svelte-h":!0}),o(Z)!=="svelte-12zk6g2"&&(Z.innerHTML=oa),bs=n(s),m(G.$$.fragment,s),ws=n(s),k=r(s,"P",{"data-svelte-h":!0}),o(k)!=="svelte-7gbnp2"&&(k.innerHTML=ca),Ts=n(s),C=r(s,"P",{"data-svelte-h":!0}),o(C)!=="svelte-ltkjtk"&&(C.innerHTML=ma),xs=n(s),m(F.$$.fragment,s),Us=n(s),v=r(s,"P",{"data-svelte-h":!0}),o(v)!=="svelte-18a6r8m"&&(v.innerHTML=fa),Js=n(s),m(I.$$.fragment,s),Rs=n(s),P=r(s,"P",{"data-svelte-h":!0}),o(P)!=="svelte-wf7yny"&&(P.innerHTML=ha),_s=n(s),m(L.$$.fragment,s),Zs=n(s),Y=r(s,"P",{"data-svelte-h":!0}),o(Y)!=="svelte-1he9i7e"&&(Y.innerHTML=ga),Gs=n(s),m(X.$$.fragment,s),ks=n(s),W=r(s,"P",{"data-svelte-h":!0}),o(W)!=="svelte-16t3mf9"&&(W.innerHTML=ua),Cs=n(s),m(H.$$.fragment,s),Fs=n(s),m(q.$$.fragment,s),vs=n(s),z=r(s,"P",{"data-svelte-h":!0}),o(z)!=="svelte-172l8l0"&&(z.innerHTML=ja),Is=n(s),m(B.$$.fragment,s),Ps=n(s),V=r(s,"P",{"data-svelte-h":!0}),o(V)!=="svelte-10o7suz"&&(V.innerHTML=ya),Ls=n(s),m(N.$$.fragment,s),Ys=n(s),E=r(s,"P",{"data-svelte-h":!0}),o(E)!=="svelte-1c1sabi"&&(E.innerHTML=$a),Xs=n(s),m(Q.$$.fragment,s),Ws=n(s),S=r(s,"P",{"data-svelte-h":!0}),o(S)!=="svelte-fw8xy6"&&(S.innerHTML=Ma),Hs=n(s),m(D.$$.fragment,s),qs=n(s),K=r(s,"P",{"data-svelte-h":!0}),o(K)!=="svelte-1xj8y6m"&&(K.innerHTML=ba),zs=n(s),m(A.$$.fragment,s),Bs=n(s),O=r(s,"P",{"data-svelte-h":!0}),o(O)!=="svelte-1yr2vgw"&&(O.innerHTML=wa),Vs=n(s),m(ss.$$.fragment,s),Ns=n(s),as=r(s,"P",{"data-svelte-h":!0}),o(as)!=="svelte-1jur300"&&(as.innerHTML=Ta),Es=n(s),m(ts.$$.fragment,s),Qs=n(s),m(x.$$.fragment,s),Ss=n(s),m(es.$$.fragment,s),Ds=n(s),ls=r(s,"P",{"data-svelte-h":!0}),o(ls)!=="svelte-1445417"&&(ls.innerHTML=xa),Ks=n(s),ns=r(s,"P",{"data-svelte-h":!0}),o(ns)!=="svelte-fdii9b"&&(ns.textContent=Ua),As=n(s),m(ps.$$.fragment,s),Os=n(s),ds=r(s,"P",{"data-svelte-h":!0}),o(ds)!=="svelte-1hi5tci"&&(ds.innerHTML=Ja),sa=n(s),is=r(s,"P",{"data-svelte-h":!0}),o(is)!=="svelte-v56ibb"&&(is.innerHTML=Ra),aa=n(s),m(rs.$$.fragment,s),ta=n(s),os=r(s,"P",{"data-svelte-h":!0}),o(os)!=="svelte-1unz013"&&(os.innerHTML=_a),ea=n(s),m(cs.$$.fragment,s),la=n(s),ms=r(s,"P",{}),Fa(ms).forEach(t),this.h()},h(){va(p,"name","hf:doc:metadata"),va(p,"content",Ea)},m(s,a){Wa(document.head,p),e(s,j,a),e(s,d,a),e(s,$,a),f(U,s,a),e(s,hs,a),f(b,s,a),e(s,gs,a),e(s,J,a),e(s,us,a),f(w,s,a),e(s,js,a),e(s,R,a),e(s,ys,a),f(_,s,a),e(s,$s,a),f(T,s,a),e(s,Ms,a),e(s,Z,a),e(s,bs,a),f(G,s,a),e(s,ws,a),e(s,k,a),e(s,Ts,a),e(s,C,a),e(s,xs,a),f(F,s,a),e(s,Us,a),e(s,v,a),e(s,Js,a),f(I,s,a),e(s,Rs,a),e(s,P,a),e(s,_s,a),f(L,s,a),e(s,Zs,a),e(s,Y,a),e(s,Gs,a),f(X,s,a),e(s,ks,a),e(s,W,a),e(s,Cs,a),f(H,s,a),e(s,Fs,a),f(q,s,a),e(s,vs,a),e(s,z,a),e(s,Is,a),f(B,s,a),e(s,Ps,a),e(s,V,a),e(s,Ls,a),f(N,s,a),e(s,Ys,a),e(s,E,a),e(s,Xs,a),f(Q,s,a),e(s,Ws,a),e(s,S,a),e(s,Hs,a),f(D,s,a),e(s,qs,a),e(s,K,a),e(s,zs,a),f(A,s,a),e(s,Bs,a),e(s,O,a),e(s,Vs,a),f(ss,s,a),e(s,Ns,a),e(s,as,a),e(s,Es,a),f(ts,s,a),e(s,Qs,a),f(x,s,a),e(s,Ss,a),f(es,s,a),e(s,Ds,a),e(s,ls,a),e(s,Ks,a),e(s,ns,a),e(s,As,a),f(ps,s,a),e(s,Os,a),e(s,ds,a),e(s,sa,a),e(s,is,a),e(s,aa,a),f(rs,s,a),e(s,ta,a),e(s,os,a),e(s,ea,a),f(cs,s,a),e(s,la,a),e(s,ms,a),na=!0},p(s,[a]){const Za={};a&2&&(Za.$$scope={dirty:a,ctx:s}),b.$set(Za);const Ga={};a&2&&(Ga.$$scope={dirty:a,ctx:s}),w.$set(Ga);const ka={};a&2&&(ka.$$scope={dirty:a,ctx:s}),T.$set(ka);const Ca={};a&2&&(Ca.$$scope={dirty:a,ctx:s}),x.$set(Ca)},i(s){na||(h(U.$$.fragment,s),h(b.$$.fragment,s),h(w.$$.fragment,s),h(_.$$.fragment,s),h(T.$$.fragment,s),h(G.$$.fragment,s),h(F.$$.fragment,s),h(I.$$.fragment,s),h(L.$$.fragment,s),h(X.$$.fragment,s),h(H.$$.fragment,s),h(q.$$.fragment,s),h(B.$$.fragment,s),h(N.$$.fragment,s),h(Q.$$.fragment,s),h(D.$$.fragment,s),h(A.$$.fragment,s),h(ss.$$.fragment,s),h(ts.$$.fragment,s),h(x.$$.fragment,s),h(es.$$.fragment,s),h(ps.$$.fragment,s),h(rs.$$.fragment,s),h(cs.$$.fragment,s),na=!0)},o(s){g(U.$$.fragment,s),g(b.$$.fragment,s),g(w.$$.fragment,s),g(_.$$.fragment,s),g(T.$$.fragment,s),g(G.$$.fragment,s),g(F.$$.fragment,s),g(I.$$.fragment,s),g(L.$$.fragment,s),g(X.$$.fragment,s),g(H.$$.fragment,s),g(q.$$.fragment,s),g(B.$$.fragment,s),g(N.$$.fragment,s),g(Q.$$.fragment,s),g(D.$$.fragment,s),g(A.$$.fragment,s),g(ss.$$.fragment,s),g(ts.$$.fragment,s),g(x.$$.fragment,s),g(es.$$.fragment,s),g(ps.$$.fragment,s),g(rs.$$.fragment,s),g(cs.$$.fragment,s),na=!1},d(s){s&&(t(j),t(d),t($),t(hs),t(gs),t(J),t(us),t(js),t(R),t(ys),t($s),t(Ms),t(Z),t(bs),t(ws),t(k),t(Ts),t(C),t(xs),t(Us),t(v),t(Js),t(Rs),t(P),t(_s),t(Zs),t(Y),t(Gs),t(ks),t(W),t(Cs),t(Fs),t(vs),t(z),t(Is),t(Ps),t(V),t(Ls),t(Ys),t(E),t(Xs),t(Ws),t(S),t(Hs),t(qs),t(K),t(zs),t(Bs),t(O),t(Vs),t(Ns),t(as),t(Es),t(Qs),t(Ss),t(Ds),t(ls),t(Ks),t(ns),t(As),t(Os),t(ds),t(sa),t(is),t(aa),t(ta),t(os),t(ea),t(la),t(ms)),t(p),u(U,s),u(b,s),u(w,s),u(_,s),u(T,s),u(G,s),u(F,s),u(I,s),u(L,s),u(X,s),u(H,s),u(q,s),u(B,s),u(N,s),u(Q,s),u(D,s),u(A,s),u(ss,s),u(ts,s),u(x,s),u(es,s),u(ps,s),u(rs,s),u(cs,s)}}}const Ea='{"title":"Load pdf data","local":"load-pdf-data","sections":[{"title":"Read pages","local":"read-pages","sections":[],"depth":2},{"title":"Local files","local":"local-files","sections":[],"depth":2},{"title":"PdfFolder","local":"pdffolder","sections":[],"depth":2},{"title":"Pdf decoding","local":"pdf-decoding","sections":[],"depth":2}],"depth":1}';function Qa(M){return Pa(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class st extends La{constructor(p){super(),Ya(this,p,Qa,Na,Ia,{})}}export{st as component};
