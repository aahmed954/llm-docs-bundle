import{s as ys,o as bs,n as K}from"../chunks/scheduler.bdbef820.js";import{S as $s,i as xs,g as l,s as o,r as c,A as ws,h as p,f as a,c as i,j as w,u as g,x as $,k as N,y as h,a as s,v as m,d as f,t as u,w as _}from"../chunks/index.c0aea24a.js";import{D}from"../chunks/Docstring.a4266085.js";import{C as q}from"../chunks/CodeBlock.e814ab8d.js";import{E as Q}from"../chunks/ExampleCodeBlock.8633afcb.js";import{H as U,E as Ns}from"../chunks/index.89e522f3.js";function ks(O){let r,x="Load a dataset from the Hugging Face Hub:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZHMlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJ2Nvcm5lbGwtbW92aWUtcmV2aWV3LWRhdGElMkZyb3R0ZW5fdG9tYXRvZXMnJTJDJTIwc3BsaXQlM0QndHJhaW4nKSUwQSUwQWZyb20lMjBkYXRhc2V0cyUyMGltcG9ydCUyMGxvYWRfZGF0YXNldCUwQWRzJTIwJTNEJTIwbG9hZF9kYXRhc2V0KCdueXUtbWxsJTJGZ2x1ZSclMkMlMjAnc3N0MiclMkMlMjBzcGxpdCUzRCd0cmFpbicpJTBBJTBBZGF0YV9maWxlcyUyMCUzRCUyMCU3Qid0cmFpbiclM0ElMjAndHJhaW4uY3N2JyUyQyUyMCd0ZXN0JyUzQSUyMCd0ZXN0LmNzdiclN0QlMEFkcyUyMCUzRCUyMGxvYWRfZGF0YXNldCgnbmFtZXNwYWNlJTJGeW91cl9kYXRhc2V0X25hbWUnJTJDJTIwZGF0YV9maWxlcyUzRGRhdGFfZmlsZXMpJTBBJTBBZHMlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJ25hbWVzcGFjZSUyRnlvdXJfZGF0YXNldF9uYW1lJyUyQyUyMGRhdGFfZGlyJTNEJ2ZvbGRlcl9uYW1lJyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;cornell-movie-review-data/rotten_tomatoes&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)

<span class="hljs-comment"># Load a subset or dataset configuration (here &#x27;sst2&#x27;)</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;nyu-mll/glue&#x27;</span>, <span class="hljs-string">&#x27;sst2&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)

<span class="hljs-comment"># Manual mapping of data files to splits</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>data_files = {<span class="hljs-string">&#x27;train&#x27;</span>: <span class="hljs-string">&#x27;train.csv&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>: <span class="hljs-string">&#x27;test.csv&#x27;</span>}
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;namespace/your_dataset_name&#x27;</span>, data_files=data_files)

<span class="hljs-comment"># Manual selection of a directory to load</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;namespace/your_dataset_name&#x27;</span>, data_dir=<span class="hljs-string">&#x27;folder_name&#x27;</span>)`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-cpjyx5"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Ds(O){let r,x="Load a local dataset:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZHMlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJ2NzdiclMkMlMjBkYXRhX2ZpbGVzJTNEJ3BhdGglMkZ0byUyRmxvY2FsJTJGbXlfZGF0YXNldC5jc3YnKSUwQSUwQWZyb20lMjBkYXRhc2V0cyUyMGltcG9ydCUyMGxvYWRfZGF0YXNldCUwQWRzJTIwJTNEJTIwbG9hZF9kYXRhc2V0KCdqc29uJyUyQyUyMGRhdGFfZmlsZXMlM0QncGF0aCUyRnRvJTJGbG9jYWwlMkZteV9kYXRhc2V0Lmpzb24nKSUwQSUwQWZyb20lMjBkYXRhc2V0cyUyMGltcG9ydCUyMGxvYWRfZGF0YXNldCUwQWRzJTIwJTNEJTIwbG9hZF9kYXRhc2V0KCdwYXRoJTJGdG8lMkZsb2NhbCUyRmxvYWRpbmdfc2NyaXB0JTJGbG9hZGluZ19zY3JpcHQucHknJTJDJTIwc3BsaXQlM0QndHJhaW4nKQ==",highlighted:`<span class="hljs-comment"># Load a CSV file</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;csv&#x27;</span>, data_files=<span class="hljs-string">&#x27;path/to/local/my_dataset.csv&#x27;</span>)

<span class="hljs-comment"># Load a JSON file</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;json&#x27;</span>, data_files=<span class="hljs-string">&#x27;path/to/local/my_dataset.json&#x27;</span>)

<span class="hljs-comment"># Load from a local loading script (not recommended)</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;path/to/local/loading_script/loading_script.py&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-18tmtyu"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Cs(O){let r,x='Load an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>:',y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZHMlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJ2Nvcm5lbGwtbW92aWUtcmV2aWV3LWRhdGElMkZyb3R0ZW5fdG9tYXRvZXMnJTJDJTIwc3BsaXQlM0QndHJhaW4nJTJDJTIwc3RyZWFtaW5nJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;cornell-movie-review-data/rotten_tomatoes&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>, streaming=<span class="hljs-literal">True</span>)`,wrap:!1}}),{c(){r=l("p"),r.innerHTML=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-16ujpge"&&(r.innerHTML=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Os(O){let r,x="Load an image dataset with the <code>ImageFolder</code> dataset builder:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZHMlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJ2ltYWdlZm9sZGVyJyUyQyUyMGRhdGFfZGlyJTNEJyUyRnBhdGglMkZ0byUyRmltYWdlcyclMkMlMjBzcGxpdCUzRCd0cmFpbicp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_dataset(<span class="hljs-string">&#x27;imagefolder&#x27;</span>, data_dir=<span class="hljs-string">&#x27;/path/to/images&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)`,wrap:!1}}),{c(){r=l("p"),r.innerHTML=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-9alpt2"&&(r.innerHTML=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Ts(O){let r,x="Example:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9mcm9tX2Rpc2slMEFkcyUyMCUzRCUyMGxvYWRfZnJvbV9kaXNrKCdwYXRoJTJGdG8lMkZkYXRhc2V0JTJGZGlyZWN0b3J5Jyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_from_disk
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = load_from_disk(<span class="hljs-string">&#x27;path/to/dataset/directory&#x27;</span>)`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-11lpom8"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Fs(O){let r,x="Example:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0X2J1aWxkZXIlMEFkc19idWlsZGVyJTIwJTNEJTIwbG9hZF9kYXRhc2V0X2J1aWxkZXIoJ2Nvcm5lbGwtbW92aWUtcmV2aWV3LWRhdGElMkZyb3R0ZW5fdG9tYXRvZXMnKSUwQWRzX2J1aWxkZXIuaW5mby5mZWF0dXJlcw==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset_builder
<span class="hljs-meta">&gt;&gt;&gt; </span>ds_builder = load_dataset_builder(<span class="hljs-string">&#x27;cornell-movie-review-data/rotten_tomatoes&#x27;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds_builder.info.features
{<span class="hljs-string">&#x27;label&#x27;</span>: ClassLabel(names=[<span class="hljs-string">&#x27;neg&#x27;</span>, <span class="hljs-string">&#x27;pos&#x27;</span>], <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
 <span class="hljs-string">&#x27;text&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>)}`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-11lpom8"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Us(O){let r,x="Example:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfY29uZmlnX25hbWVzJTBBZ2V0X2RhdGFzZXRfY29uZmlnX25hbWVzKCUyMm55dS1tbGwlMkZnbHVlJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_config_names
<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_config_names(<span class="hljs-string">&quot;nyu-mll/glue&quot;</span>)
[<span class="hljs-string">&#x27;cola&#x27;</span>,
 <span class="hljs-string">&#x27;sst2&#x27;</span>,
 <span class="hljs-string">&#x27;mrpc&#x27;</span>,
 <span class="hljs-string">&#x27;qqp&#x27;</span>,
 <span class="hljs-string">&#x27;stsb&#x27;</span>,
 <span class="hljs-string">&#x27;mnli&#x27;</span>,
 <span class="hljs-string">&#x27;mnli_mismatched&#x27;</span>,
 <span class="hljs-string">&#x27;mnli_matched&#x27;</span>,
 <span class="hljs-string">&#x27;qnli&#x27;</span>,
 <span class="hljs-string">&#x27;rte&#x27;</span>,
 <span class="hljs-string">&#x27;wnli&#x27;</span>,
 <span class="hljs-string">&#x27;ax&#x27;</span>]`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-11lpom8"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function js(O){let r,x="Example:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfaW5mb3MlMEFnZXRfZGF0YXNldF9pbmZvcygnY29ybmVsbC1tb3ZpZS1yZXZpZXctZGF0YSUyRnJvdHRlbl90b21hdG9lcycp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_infos
<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_infos(<span class="hljs-string">&#x27;cornell-movie-review-data/rotten_tomatoes&#x27;</span>)
{<span class="hljs-string">&#x27;default&#x27;</span>: DatasetInfo(description=<span class="hljs-string">&quot;Movie Review Dataset.
 is a dataset of containing 5,331 positive and 5,331 negative processed
ences from Rotten Tomatoes movie reviews...), ...}</span>`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-11lpom8"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Ms(O){let r,x="Example:",y,d,v;return d=new q({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfc3BsaXRfbmFtZXMlMEFnZXRfZGF0YXNldF9zcGxpdF9uYW1lcygnY29ybmVsbC1tb3ZpZS1yZXZpZXctZGF0YSUyRnJvdHRlbl90b21hdG9lcycp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_split_names
<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_split_names(<span class="hljs-string">&#x27;cornell-movie-review-data/rotten_tomatoes&#x27;</span>)
[<span class="hljs-string">&#x27;train&#x27;</span>, <span class="hljs-string">&#x27;validation&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>]`,wrap:!1}}),{c(){r=l("p"),r.textContent=x,y=o(),c(d.$$.fragment)},l(t){r=p(t,"P",{"data-svelte-h":!0}),$(r)!=="svelte-11lpom8"&&(r.textContent=x),y=i(t),g(d.$$.fragment,t)},m(t,b){s(t,r,b),s(t,y,b),m(d,t,b),v=!0},p:K,i(t){v||(f(d.$$.fragment,t),v=!0)},o(t){u(d.$$.fragment,t),v=!1},d(t){t&&(a(r),a(y)),_(d,t)}}}function Is(O){let r,x,y,d,v,t,b,jn="Methods for listing and loading datasets:",Lt,le,Pt,k,pe,Ba,ht,Mn="Load a dataset from the Hugging Face Hub, or a local dataset.",Ya,vt,In='You can find the list of datasets on the <a href="https://huggingface.co/datasets" rel="nofollow">Hub</a> or with <code>huggingface_hub.list_datasets</code>.',Qa,yt,Jn=`A dataset is a directory that contains some data files in generic formats (JSON, CSV, Parquet, etc.) and possibly
in a generic structure (Webdataset, ImageFolder, AudioFolder, VideoFolder, etc.)`,Ka,bt,qn="This function does the following under the hood:",en,$t,Zn=`<li><p>Load a dataset builder:</p> <ul><li>Find the most common data format in the dataset and pick its associated builder (JSON, CSV, Parquet, Webdataset, ImageFolder, AudioFolder, etc.)</li> <li>Find which file goes into which split (e.g. train/test) based on file and directory names or on the YAML configuration</li> <li>It is also possible to specify <code>data_files</code> manually, and which dataset builder to use (e.g. “parquet”).</li></ul></li> <li><p>Run the dataset builder:</p> <p>In the general case:</p> <ul><li><p>Download the data files from the dataset if they are not already available locally or cached.</p></li> <li><p>Process and cache the dataset in typed Arrow tables for caching.</p> <p>Arrow table are arbitrarily long, typed tables which can store nested objects and be mapped to numpy/pandas/python generic types.
They can be directly accessed from disk, loaded in RAM or even streamed over the web.</p></li></ul> <p>In the streaming case:</p> <ul><li>Don’t download or cache anything. Instead, the dataset is lazily loaded and will be streamed on-the-fly when iterating on it.</li></ul></li> <li><p>Return a dataset built from the requested splits in <code>split</code> (default: all).</p></li>`,tn,xt,Rn=`It can also use a custom dataset builder if the dataset contains a dataset script, but this feature is mostly for backward compatibility.
In this case the dataset script file must be named after the dataset repository or directory and end with “.py”.`,an,wt,Gn="Example:",nn,ee,sn,te,on,ae,rn,ne,Wt,j,ce,dn,Nt,Vn=`Loads a dataset that was previously saved using <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.save_to_disk">save_to_disk()</a> from a dataset directory, or
from a filesystem using any implementation of <code>fsspec.spec.AbstractFileSystem</code>.`,ln,se,Ht,T,ge,pn,kt,Sn="Load a dataset builder which can be used to:",cn,Dt,Xn="<li>Inspect general information that is required to build a dataset (cache directory, config, dataset info, features, data files, etc.)</li> <li>Download and prepare the dataset as Arrow files in the cache</li> <li>Get a streaming dataset without downloading or caching anything</li>",gn,Ct,En='You can find the list of datasets on the <a href="https://huggingface.co/datasets" rel="nofollow">Hub</a> or with <code>huggingface_hub.list_datasets</code>.',mn,Ot,zn=`A dataset is a directory that contains some data files in generic formats (JSON, CSV, Parquet, etc.) and possibly
in a generic structure (Webdataset, ImageFolder, AudioFolder, VideoFolder, etc.)`,fn,oe,At,M,me,un,Tt,Ln="Get the list of available config names for a particular dataset.",_n,ie,Bt,I,fe,hn,Ft,Pn="Get the meta information about a dataset, returned as a dict mapping config name to DatasetInfoDict.",vn,re,Yt,J,ue,yn,Ut,Wn="Get the list of available splits for a particular config and dataset.",bn,de,Qt,_e,Kt,he,Hn=`Configurations used to load data files.
They are used when loading local files or a dataset repository:`,ea,ve,An="<li>local files: <code>load_dataset(&quot;parquet&quot;, data_dir=&quot;path/to/data/dir&quot;)</code></li> <li>dataset repository: <code>load_dataset(&quot;allenai/c4&quot;)</code></li>",ta,ye,Bn=`You can pass arguments to <code>load_dataset</code> to configure data loading.
For example you can specify the <code>sep</code> parameter to define the <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.packaged_modules.csv.CsvConfig">CsvConfig</a> that is used to load the data:`,aa,be,na,$e,sa,Z,xe,$n,jt,Yn="BuilderConfig for text files.",oa,we,Ne,ia,ke,ra,R,De,xn,Mt,Qn="BuilderConfig for CSV.",da,Ce,Oe,la,Te,pa,G,Fe,wn,It,Kn="BuilderConfig for JSON.",ca,Ue,je,ga,Me,ma,V,Ie,Nn,Jt,es="BuilderConfig for xml files.",fa,Je,qe,ua,Ze,_a,S,Re,kn,qt,ts="BuilderConfig for Parquet.",ha,Ge,Ve,va,Se,ya,X,Xe,Dn,Zt,as="BuilderConfig for Arrow.",ba,Ee,ze,$a,Le,xa,E,Pe,Cn,Rt,ns="BuilderConfig for SQL.",wa,We,He,Na,Ae,ka,z,Be,On,Gt,ss="BuilderConfig for ImageFolder.",Da,Ye,Qe,Ca,Ke,Oa,L,et,Tn,Vt,os="Builder Config for AudioFolder.",Ta,tt,at,Fa,nt,Ua,P,st,Fn,St,is="BuilderConfig for ImageFolder.",ja,ot,it,Ma,rt,Ia,W,dt,Un,Xt,rs="BuilderConfig for ImageFolder.",Ja,lt,pt,qa,ct,Za,gt,mt,Ra,ft,Ga,Et,Va;return v=new U({props:{title:"Loading methods",local:"loading-methods",headingTag:"h1"}}),le=new U({props:{title:"Datasets",local:"datasets.load_dataset",headingTag:"h2"}}),pe=new D({props:{name:"datasets.load_dataset",anchor:"datasets.load_dataset",parameters:[{name:"path",val:": str"},{name:"name",val:": typing.Optional[str] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, collections.abc.Sequence[str], collections.abc.Mapping[str, typing.Union[str, collections.abc.Sequence[str]]], NoneType] = None"},{name:"split",val:": typing.Union[str, datasets.splits.Split, NoneType] = None"},{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"download_config",val:": typing.Optional[datasets.download.download_config.DownloadConfig] = None"},{name:"download_mode",val:": typing.Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None"},{name:"verification_mode",val:": typing.Union[datasets.utils.info_utils.VerificationMode, str, NoneType] = None"},{name:"keep_in_memory",val:": typing.Optional[bool] = None"},{name:"save_infos",val:": bool = False"},{name:"revision",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"streaming",val:": bool = False"},{name:"num_proc",val:": typing.Optional[int] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"trust_remote_code",val:": typing.Optional[bool] = None"},{name:"**config_kwargs",val:""}],parametersDescription:[{anchor:"datasets.load_dataset.path",description:`<strong>path</strong> (<code>str</code>) &#x2014;
Path or name of the dataset.</p>
<ul>
<li>
<p>if <code>path</code> is a dataset repository on the HF hub (list all available datasets with <code>huggingface_hub.list_datasets</code>)
-&gt; load the dataset from supported files in the repository (csv, json, parquet, etc.)
e.g. <code>&apos;username/dataset_name&apos;</code>, a dataset repository on the HF hub containing the data files.</p>
</li>
<li>
<p>if <code>path</code> is a local directory
-&gt; load the dataset from supported files in the directory (csv, json, parquet, etc.)
e.g. <code>&apos;./path/to/directory/with/my/csv/data&apos;</code>.</p>
</li>
<li>
<p>if <code>path</code> is the name of a dataset builder and <code>data_files</code> or <code>data_dir</code> is specified
(available builders are &#x201C;json&#x201D;, &#x201C;csv&#x201D;, &#x201C;parquet&#x201D;, &#x201C;arrow&#x201D;, &#x201C;text&#x201D;, &#x201C;xml&#x201D;, &#x201C;webdataset&#x201D;, &#x201C;imagefolder&#x201D;, &#x201C;audiofolder&#x201D;, &#x201C;videofolder&#x201D;)
-&gt; load the dataset from the files in <code>data_files</code> or <code>data_dir</code>
e.g. <code>&apos;parquet&apos;</code>.</p>
</li>
</ul>
<p>It can also point to a local dataset script but this is not recommended.`,name:"path"},{anchor:"datasets.load_dataset.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Defining the name of the dataset configuration.`,name:"name"},{anchor:"datasets.load_dataset.data_dir",description:`<strong>data_dir</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Defining the <code>data_dir</code> of the dataset configuration. If specified for the generic builders (csv, text etc.) or the Hub datasets and <code>data_files</code> is <code>None</code>,
the behavior is equal to passing <code>os.path.join(data_dir, **)</code> as <code>data_files</code> to reference all the files in a directory.`,name:"data_dir"},{anchor:"datasets.load_dataset.data_files",description:`<strong>data_files</strong> (<code>str</code> or <code>Sequence</code> or <code>Mapping</code>, <em>optional</em>) &#x2014;
Path(s) to source data file(s).`,name:"data_files"},{anchor:"datasets.load_dataset.split",description:`<strong>split</strong> (<code>Split</code> or <code>str</code>) &#x2014;
Which split of the data to load.
If <code>None</code>, will return a <code>dict</code> with all splits (typically <code>datasets.Split.TRAIN</code> and <code>datasets.Split.TEST</code>).
If given, will return a single Dataset.
Splits can be combined and specified like in tensorflow-datasets.`,name:"split"},{anchor:"datasets.load_dataset.cache_dir",description:`<strong>cache_dir</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Directory to read/write data. Defaults to <code>&quot;~/.cache/huggingface/datasets&quot;</code>.`,name:"cache_dir"},{anchor:"datasets.load_dataset.features",description:`<strong>features</strong> (<code>Features</code>, <em>optional</em>) &#x2014;
Set the features type to use for this dataset.`,name:"features"},{anchor:"datasets.load_dataset.download_config",description:`<strong>download_config</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a>, <em>optional</em>) &#x2014;
Specific download configuration parameters.`,name:"download_config"},{anchor:"datasets.load_dataset.download_mode",description:`<strong>download_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadMode">DownloadMode</a> or <code>str</code>, defaults to <code>REUSE_DATASET_IF_EXISTS</code>) &#x2014;
Download/generate mode.`,name:"download_mode"},{anchor:"datasets.load_dataset.verification_mode",description:`<strong>verification_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.VerificationMode">VerificationMode</a> or <code>str</code>, defaults to <code>BASIC_CHECKS</code>) &#x2014;
Verification mode determining the checks to run on the downloaded/processed dataset information (checksums/size/splits/&#x2026;).</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.9.1</p>
						
					</div>`,name:"verification_mode"},{anchor:"datasets.load_dataset.keep_in_memory",description:`<strong>keep_in_memory</strong> (<code>bool</code>, defaults to <code>None</code>) &#x2014;
Whether to copy the dataset in-memory. If <code>None</code>, the dataset
will not be copied in-memory unless explicitly enabled by setting <code>datasets.config.IN_MEMORY_MAX_SIZE</code> to
nonzero. See more details in the <a href="../cache#improve-performance">improve performance</a> section.`,name:"keep_in_memory"},{anchor:"datasets.load_dataset.save_infos",description:`<strong>save_infos</strong> (<code>bool</code>, defaults to <code>False</code>) &#x2014;
Save the dataset information (checksums/size/splits/&#x2026;).`,name:"save_infos"},{anchor:"datasets.load_dataset.revision",description:`<strong>revision</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.Version">Version</a> or <code>str</code>, <em>optional</em>) &#x2014;
Version of the dataset script to load.
As datasets have their own git repository on the Datasets Hub, the default version &#x201C;main&#x201D; corresponds to their &#x201C;main&#x201D; branch.
You can specify a different version than the default &#x201C;main&#x201D; by using a commit SHA or a git tag of the dataset repository.`,name:"revision"},{anchor:"datasets.load_dataset.token",description:`<strong>token</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
Optional string or boolean to use as Bearer token for remote files on the Datasets Hub.
If <code>True</code>, or not specified, will get token from <code>&quot;~/.huggingface&quot;</code>.`,name:"token"},{anchor:"datasets.load_dataset.streaming",description:`<strong>streaming</strong> (<code>bool</code>, defaults to <code>False</code>) &#x2014;
If set to <code>True</code>, don&#x2019;t download the data files. Instead, it streams the data progressively while
iterating on the dataset. An <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> or <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDatasetDict">IterableDatasetDict</a> is returned instead in this case.</p>
<p>Note that streaming works for datasets that use data formats that support being iterated over like txt, csv, jsonl for example.
Json files may be downloaded completely. Also streaming from remote zip or gzip files is supported but other compressed formats
like rar and xz are not yet supported. The tgz format doesn&#x2019;t allow streaming.`,name:"streaming"},{anchor:"datasets.load_dataset.num_proc",description:`<strong>num_proc</strong> (<code>int</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
Number of processes when downloading and generating the dataset locally.
Multiprocessing is disabled by default.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.7.0</p>
						
					</div>`,name:"num_proc"},{anchor:"datasets.load_dataset.storage_options",description:`<strong>storage_options</strong> (<code>dict</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
<strong>Experimental</strong>. Key/value pairs to be passed on to the dataset file-system backend, if any.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.11.0</p>
						
					</div>`,name:"storage_options"},{anchor:"datasets.load_dataset.trust_remote_code",description:`<strong>trust_remote_code</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
Whether or not to allow for datasets defined on the Hub using a dataset script. This option
should only be set to <code>True</code> for repositories you trust and in which you have read the code, as it will
execute code present on the Hub on your local machine.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.16.0</p>
						
					</div>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Changed in 2.20.0</p>
						
<p><code>trust_remote_code</code> defaults to <code>False</code> if not specified.</p>

					</div>`,name:"trust_remote_code"},{anchor:"datasets.load_dataset.*config_kwargs",description:`*<strong>*config_kwargs</strong> (additional keyword arguments) &#x2014;
Keyword arguments to be passed to the <code>BuilderConfig</code>
and used in the <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DatasetBuilder">DatasetBuilder</a>.`,name:"*config_kwargs"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/load.py#L1838",returnDescription:`<script context="module">export const metadata = 'undefined';<\/script>


<ul>
<li>if <code>split</code> is not <code>None</code>: the dataset requested,</li>
<li>if <code>split</code> is <code>None</code>, a <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict"
>DatasetDict</a> with each split.</li>
</ul>
<p>or <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset"
>IterableDataset</a> or <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDatasetDict"
>IterableDatasetDict</a>: if <code>streaming=True</code></p>
<ul>
<li>if <code>split</code> is not <code>None</code>, the dataset is requested</li>
<li>if <code>split</code> is <code>None</code>, a <code>~datasets.streaming.IterableDatasetDict</code> with each split.</li>
</ul>
`,returnType:`<script context="module">export const metadata = 'undefined';<\/script>


<p><a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset"
>Dataset</a> or <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict"
>DatasetDict</a></p>
`}}),ee=new Q({props:{anchor:"datasets.load_dataset.example",$$slots:{default:[ks]},$$scope:{ctx:O}}}),te=new Q({props:{anchor:"datasets.load_dataset.example-2",$$slots:{default:[Ds]},$$scope:{ctx:O}}}),ae=new Q({props:{anchor:"datasets.load_dataset.example-3",$$slots:{default:[Cs]},$$scope:{ctx:O}}}),ne=new Q({props:{anchor:"datasets.load_dataset.example-4",$$slots:{default:[Os]},$$scope:{ctx:O}}}),ce=new D({props:{name:"datasets.load_from_disk",anchor:"datasets.load_from_disk",parameters:[{name:"dataset_path",val:": typing.Union[str, bytes, os.PathLike]"},{name:"keep_in_memory",val:": typing.Optional[bool] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"}],parametersDescription:[{anchor:"datasets.load_from_disk.dataset_path",description:`<strong>dataset_path</strong> (<code>path-like</code>) &#x2014;
Path (e.g. <code>&quot;dataset/train&quot;</code>) or remote URI (e.g. <code>&quot;s3://my-bucket/dataset/train&quot;</code>)
of the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> or <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict">DatasetDict</a> directory where the dataset/dataset-dict will be
loaded from.`,name:"dataset_path"},{anchor:"datasets.load_from_disk.keep_in_memory",description:`<strong>keep_in_memory</strong> (<code>bool</code>, defaults to <code>None</code>) &#x2014;
Whether to copy the dataset in-memory. If <code>None</code>, the dataset
will not be copied in-memory unless explicitly enabled by setting <code>datasets.config.IN_MEMORY_MAX_SIZE</code> to
nonzero. See more details in the <a href="../cache#improve-performance">improve performance</a> section.`,name:"keep_in_memory"},{anchor:"datasets.load_from_disk.storage_options",description:`<strong>storage_options</strong> (<code>dict</code>, <em>optional</em>) &#x2014;
Key/value pairs to be passed on to the file-system backend, if any.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.9.0</p>
						
					</div>`,name:"storage_options"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/load.py#L2103",returnDescription:`<script context="module">export const metadata = 'undefined';<\/script>


<ul>
<li>If <code>dataset_path</code> is a path of a dataset directory: the dataset requested.</li>
<li>If <code>dataset_path</code> is a path of a dataset dict directory, a <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict"
>DatasetDict</a> with each split.</li>
</ul>
`,returnType:`<script context="module">export const metadata = 'undefined';<\/script>


<p><a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset"
>Dataset</a> or <a
  href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict"
>DatasetDict</a></p>
`}}),se=new Q({props:{anchor:"datasets.load_from_disk.example",$$slots:{default:[Ts]},$$scope:{ctx:O}}}),ge=new D({props:{name:"datasets.load_dataset_builder",anchor:"datasets.load_dataset_builder",parameters:[{name:"path",val:": str"},{name:"name",val:": typing.Optional[str] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, collections.abc.Sequence[str], collections.abc.Mapping[str, typing.Union[str, collections.abc.Sequence[str]]], NoneType] = None"},{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"download_config",val:": typing.Optional[datasets.download.download_config.DownloadConfig] = None"},{name:"download_mode",val:": typing.Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None"},{name:"revision",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"trust_remote_code",val:": typing.Optional[bool] = None"},{name:"_require_default_config_name",val:" = True"},{name:"**config_kwargs",val:""}],parametersDescription:[{anchor:"datasets.load_dataset_builder.path",description:`<strong>path</strong> (<code>str</code>) &#x2014;
Path or name of the dataset.</p>
<ul>
<li>
<p>if <code>path</code> is a dataset repository on the HF hub (list all available datasets with <code>huggingface_hub.list_datasets</code>)
-&gt; load the dataset builder from supported files in the repository (csv, json, parquet, etc.)
e.g. <code>&apos;username/dataset_name&apos;</code>, a dataset repository on the HF hub containing the data files.</p>
</li>
<li>
<p>if <code>path</code> is a local directory
-&gt; load the dataset builder from supported files in the directory (csv, json, parquet, etc.)
e.g. <code>&apos;./path/to/directory/with/my/csv/data&apos;</code>.</p>
</li>
<li>
<p>if <code>path</code> is the name of a dataset builder and <code>data_files</code> or <code>data_dir</code> is specified
(available builders are &#x201C;json&#x201D;, &#x201C;csv&#x201D;, &#x201C;parquet&#x201D;, &#x201C;arrow&#x201D;, &#x201C;text&#x201D;, &#x201C;xml&#x201D;, &#x201C;webdataset&#x201D;, &#x201C;imagefolder&#x201D;, &#x201C;audiofolder&#x201D;, &#x201C;videofolder&#x201D;)
-&gt; load the dataset builder from the files in <code>data_files</code> or <code>data_dir</code>
e.g. <code>&apos;parquet&apos;</code>.</p>
</li>
</ul>
<p>It can also point to a local dataset script but this is not recommended.`,name:"path"},{anchor:"datasets.load_dataset_builder.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Defining the name of the dataset configuration.`,name:"name"},{anchor:"datasets.load_dataset_builder.data_dir",description:`<strong>data_dir</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Defining the <code>data_dir</code> of the dataset configuration. If specified for the generic builders (csv, text etc.) or the Hub datasets and <code>data_files</code> is <code>None</code>,
the behavior is equal to passing <code>os.path.join(data_dir, **)</code> as <code>data_files</code> to reference all the files in a directory.`,name:"data_dir"},{anchor:"datasets.load_dataset_builder.data_files",description:`<strong>data_files</strong> (<code>str</code> or <code>Sequence</code> or <code>Mapping</code>, <em>optional</em>) &#x2014;
Path(s) to source data file(s).`,name:"data_files"},{anchor:"datasets.load_dataset_builder.cache_dir",description:`<strong>cache_dir</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Directory to read/write data. Defaults to <code>&quot;~/.cache/huggingface/datasets&quot;</code>.`,name:"cache_dir"},{anchor:"datasets.load_dataset_builder.features",description:`<strong>features</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a>, <em>optional</em>) &#x2014;
Set the features type to use for this dataset.`,name:"features"},{anchor:"datasets.load_dataset_builder.download_config",description:`<strong>download_config</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a>, <em>optional</em>) &#x2014;
Specific download configuration parameters.`,name:"download_config"},{anchor:"datasets.load_dataset_builder.download_mode",description:`<strong>download_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadMode">DownloadMode</a> or <code>str</code>, defaults to <code>REUSE_DATASET_IF_EXISTS</code>) &#x2014;
Download/generate mode.`,name:"download_mode"},{anchor:"datasets.load_dataset_builder.revision",description:`<strong>revision</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.Version">Version</a> or <code>str</code>, <em>optional</em>) &#x2014;
Version of the dataset script to load.
As datasets have their own git repository on the Datasets Hub, the default version &#x201C;main&#x201D; corresponds to their &#x201C;main&#x201D; branch.
You can specify a different version than the default &#x201C;main&#x201D; by using a commit SHA or a git tag of the dataset repository.`,name:"revision"},{anchor:"datasets.load_dataset_builder.token",description:`<strong>token</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
Optional string or boolean to use as Bearer token for remote files on the Datasets Hub.
If <code>True</code>, or not specified, will get token from <code>&quot;~/.huggingface&quot;</code>.`,name:"token"},{anchor:"datasets.load_dataset_builder.storage_options",description:`<strong>storage_options</strong> (<code>dict</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
<strong>Experimental</strong>. Key/value pairs to be passed on to the dataset file-system backend, if any.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.11.0</p>
						
					</div>`,name:"storage_options"},{anchor:"datasets.load_dataset_builder.trust_remote_code",description:`<strong>trust_remote_code</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
Whether or not to allow for datasets defined on the Hub using a dataset script. This option
should only be set to <code>True</code> for repositories you trust and in which you have read the code, as it will
execute code present on the Hub on your local machine.</p>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Added in 2.16.0</p>
						
					</div>
<div class="course-tip  bg-gradient-to-br dark:bg-gradient-to-r before:border-green-500 dark:before:border-green-800 from-green-50 dark:from-gray-900 to-white dark:to-gray-950 border border-green-50 text-green-700 dark:text-gray-400">
						<p class="font-medium">Changed in 2.20.0</p>
						
<p><code>trust_remote_code</code> defaults to <code>False</code> if not specified.</p>

					</div>`,name:"trust_remote_code"},{anchor:"datasets.load_dataset_builder.*config_kwargs",description:`*<strong>*config_kwargs</strong> (additional keyword arguments) &#x2014;
Keyword arguments to be passed to the <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.BuilderConfig">BuilderConfig</a>
and used in the <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DatasetBuilder">DatasetBuilder</a>.`,name:"*config_kwargs"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/load.py#L1673",returnDescription:`<script context="module">export const metadata = 'undefined';<\/script>


<p><a
  href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DatasetBuilder"
>DatasetBuilder</a></p>
`}}),oe=new Q({props:{anchor:"datasets.load_dataset_builder.example",$$slots:{default:[Fs]},$$scope:{ctx:O}}}),me=new D({props:{name:"datasets.get_dataset_config_names",anchor:"datasets.get_dataset_config_names",parameters:[{name:"path",val:": str"},{name:"revision",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = None"},{name:"download_config",val:": typing.Optional[datasets.download.download_config.DownloadConfig] = None"},{name:"download_mode",val:": typing.Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None"},{name:"dynamic_modules_path",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, NoneType] = None"},{name:"**download_kwargs",val:""}],parametersDescription:[{anchor:"datasets.get_dataset_config_names.path",description:`<strong>path</strong> (<code>str</code>) &#x2014; path to the dataset processing script with the dataset builder. Can be either:</p>
<ul>
<li>a local path to processing script or the directory containing the script (if the script has the same name as the directory),
e.g. <code>&apos;./dataset/squad&apos;</code> or <code>&apos;./dataset/squad/squad.py&apos;</code></li>
<li>a dataset identifier on the Hugging Face Hub (list all available datasets and ids with <code>huggingface_hub.list_datasets</code>),
e.g. <code>&apos;rajpurkar/squad&apos;</code>, <code>&apos;nyu-mll/glue&apos;</code> or <code>&apos;openai/webtext&apos;</code></li>
</ul>`,name:"path"},{anchor:"datasets.get_dataset_config_names.revision",description:`<strong>revision</strong> (<code>Union[str, datasets.Version]</code>, <em>optional</em>) &#x2014;
If specified, the dataset module will be loaded from the datasets repository at this version.
By default:</p>
<ul>
<li>it is set to the local version of the lib.</li>
<li>it will also try to load it from the main branch if it&#x2019;s not available at the local version of the lib.
Specifying a version that is different from your local version of the lib might cause compatibility issues.</li>
</ul>`,name:"revision"},{anchor:"datasets.get_dataset_config_names.download_config",description:`<strong>download_config</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a>, <em>optional</em>) &#x2014;
Specific download configuration parameters.`,name:"download_config"},{anchor:"datasets.get_dataset_config_names.download_mode",description:`<strong>download_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadMode">DownloadMode</a> or <code>str</code>, defaults to <code>REUSE_DATASET_IF_EXISTS</code>) &#x2014;
Download/generate mode.`,name:"download_mode"},{anchor:"datasets.get_dataset_config_names.dynamic_modules_path",description:`<strong>dynamic_modules_path</strong> (<code>str</code>, defaults to <code>~/.cache/huggingface/modules/datasets_modules</code>) &#x2014;
Optional path to the directory in which the dynamic modules are saved. It must have been initialized with <code>init_dynamic_modules</code>.
By default the datasets are stored inside the <code>datasets_modules</code> module.`,name:"dynamic_modules_path"},{anchor:"datasets.get_dataset_config_names.data_files",description:`<strong>data_files</strong> (<code>Union[Dict, List, str]</code>, <em>optional</em>) &#x2014;
Defining the data_files of the dataset configuration.`,name:"data_files"},{anchor:"datasets.get_dataset_config_names.*download_kwargs",description:`*<strong>*download_kwargs</strong> (additional keyword arguments) &#x2014;
Optional attributes for <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a> which will override the attributes in <code>download_config</code> if supplied,
for example <code>token</code>.`,name:"*download_kwargs"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/inspect.py#L109"}}),ie=new Q({props:{anchor:"datasets.get_dataset_config_names.example",$$slots:{default:[Us]},$$scope:{ctx:O}}}),fe=new D({props:{name:"datasets.get_dataset_infos",anchor:"datasets.get_dataset_infos",parameters:[{name:"path",val:": str"},{name:"data_files",val:": typing.Union[str, list, dict, NoneType] = None"},{name:"download_config",val:": typing.Optional[datasets.download.download_config.DownloadConfig] = None"},{name:"download_mode",val:": typing.Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None"},{name:"revision",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"**config_kwargs",val:""}],parametersDescription:[{anchor:"datasets.get_dataset_infos.path",description:`<strong>path</strong> (<code>str</code>) &#x2014; path to the dataset processing script with the dataset builder. Can be either:</p>
<ul>
<li>a local path to processing script or the directory containing the script (if the script has the same name as the directory),
e.g. <code>&apos;./dataset/squad&apos;</code> or <code>&apos;./dataset/squad/squad.py&apos;</code></li>
<li>a dataset identifier on the Hugging Face Hub (list all available datasets and ids with <code>huggingface_hub.list_datasets</code>),
e.g. <code>&apos;rajpurkar/squad&apos;</code>, <code>&apos;nyu-mll/glue&apos;</code> or\`<code>&apos;openai/webtext&apos;</code></li>
</ul>`,name:"path"},{anchor:"datasets.get_dataset_infos.revision",description:`<strong>revision</strong> (<code>Union[str, datasets.Version]</code>, <em>optional</em>) &#x2014;
If specified, the dataset module will be loaded from the datasets repository at this version.
By default:</p>
<ul>
<li>it is set to the local version of the lib.</li>
<li>it will also try to load it from the main branch if it&#x2019;s not available at the local version of the lib.
Specifying a version that is different from your local version of the lib might cause compatibility issues.</li>
</ul>`,name:"revision"},{anchor:"datasets.get_dataset_infos.download_config",description:`<strong>download_config</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a>, <em>optional</em>) &#x2014;
Specific download configuration parameters.`,name:"download_config"},{anchor:"datasets.get_dataset_infos.download_mode",description:`<strong>download_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadMode">DownloadMode</a> or <code>str</code>, defaults to <code>REUSE_DATASET_IF_EXISTS</code>) &#x2014;
Download/generate mode.`,name:"download_mode"},{anchor:"datasets.get_dataset_infos.data_files",description:`<strong>data_files</strong> (<code>Union[Dict, List, str]</code>, <em>optional</em>) &#x2014;
Defining the data_files of the dataset configuration.`,name:"data_files"},{anchor:"datasets.get_dataset_infos.token",description:`<strong>token</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
Optional string or boolean to use as Bearer token for remote files on the Datasets Hub.
If <code>True</code>, or not specified, will get token from <code>&quot;~/.huggingface&quot;</code>.`,name:"token"},{anchor:"datasets.get_dataset_infos.*config_kwargs",description:`*<strong>*config_kwargs</strong> (additional keyword arguments) &#x2014;
Optional attributes for builder class which will override the attributes if supplied.`,name:"*config_kwargs"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/inspect.py#L42"}}),re=new Q({props:{anchor:"datasets.get_dataset_infos.example",$$slots:{default:[js]},$$scope:{ctx:O}}}),ue=new D({props:{name:"datasets.get_dataset_split_names",anchor:"datasets.get_dataset_split_names",parameters:[{name:"path",val:": str"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, collections.abc.Sequence[str], collections.abc.Mapping[str, typing.Union[str, collections.abc.Sequence[str]]], NoneType] = None"},{name:"download_config",val:": typing.Optional[datasets.download.download_config.DownloadConfig] = None"},{name:"download_mode",val:": typing.Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None"},{name:"revision",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"**config_kwargs",val:""}],parametersDescription:[{anchor:"datasets.get_dataset_split_names.path",description:`<strong>path</strong> (<code>str</code>) &#x2014; path to the dataset processing script with the dataset builder. Can be either:</p>
<ul>
<li>a local path to processing script or the directory containing the script (if the script has the same name as the directory),
e.g. <code>&apos;./dataset/squad&apos;</code> or <code>&apos;./dataset/squad/squad.py&apos;</code></li>
<li>a dataset identifier on the Hugging Face Hub (list all available datasets and ids with <code>huggingface_hub.list_datasets</code>),
e.g. <code>&apos;rajpurkar/squad&apos;</code>, <code>&apos;nyu-mll/glue&apos;</code> or <code>&apos;openai/webtext&apos;</code></li>
</ul>`,name:"path"},{anchor:"datasets.get_dataset_split_names.config_name",description:`<strong>config_name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Defining the name of the dataset configuration.`,name:"config_name"},{anchor:"datasets.get_dataset_split_names.data_files",description:`<strong>data_files</strong> (<code>str</code> or <code>Sequence</code> or <code>Mapping</code>, <em>optional</em>) &#x2014;
Path(s) to source data file(s).`,name:"data_files"},{anchor:"datasets.get_dataset_split_names.download_config",description:`<strong>download_config</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadConfig">DownloadConfig</a>, <em>optional</em>) &#x2014;
Specific download configuration parameters.`,name:"download_config"},{anchor:"datasets.get_dataset_split_names.download_mode",description:`<strong>download_mode</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.DownloadMode">DownloadMode</a> or <code>str</code>, defaults to <code>REUSE_DATASET_IF_EXISTS</code>) &#x2014;
Download/generate mode.`,name:"download_mode"},{anchor:"datasets.get_dataset_split_names.revision",description:`<strong>revision</strong> (<a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.Version">Version</a> or <code>str</code>, <em>optional</em>) &#x2014;
Version of the dataset script to load.
As datasets have their own git repository on the Datasets Hub, the default version &#x201C;main&#x201D; corresponds to their &#x201C;main&#x201D; branch.
You can specify a different version than the default &#x201C;main&#x201D; by using a commit SHA or a git tag of the dataset repository.`,name:"revision"},{anchor:"datasets.get_dataset_split_names.token",description:`<strong>token</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
Optional string or boolean to use as Bearer token for remote files on the Datasets Hub.
If <code>True</code>, or not specified, will get token from <code>&quot;~/.huggingface&quot;</code>.`,name:"token"},{anchor:"datasets.get_dataset_split_names.*config_kwargs",description:`*<strong>*config_kwargs</strong> (additional keyword arguments) &#x2014;
Optional attributes for builder class which will override the attributes if supplied.`,name:"*config_kwargs"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/inspect.py#L308"}}),de=new Q({props:{anchor:"datasets.get_dataset_split_names.example",$$slots:{default:[Ms]},$$scope:{ctx:O}}}),_e=new U({props:{title:"From files",local:"from-files",headingTag:"h2"}}),be=new q({props:{code:"bG9hZF9kYXRhc2V0KCUyMmNzdiUyMiUyQyUyMGRhdGFfZGlyJTNEJTIycGF0aCUyRnRvJTJGZGF0YSUyRmRpciUyMiUyQyUyMHNlcCUzRCUyMiU1Q3QlMjIp",highlighted:'load_dataset(<span class="hljs-string">&quot;csv&quot;</span>, data_dir=<span class="hljs-string">&quot;path/to/data/dir&quot;</span>, sep=<span class="hljs-string">&quot;\\t&quot;</span>)',wrap:!1}}),$e=new U({props:{title:"Text",local:"datasets.packaged_modules.text.TextConfig",headingTag:"h3"}}),xe=new D({props:{name:"class datasets.packaged_modules.text.TextConfig",anchor:"datasets.packaged_modules.text.TextConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"encoding",val:": str = 'utf-8'"},{name:"encoding_errors",val:": typing.Optional[str] = None"},{name:"chunksize",val:": int = 10485760"},{name:"keep_linebreaks",val:": bool = False"},{name:"sample_by",val:": str = 'line'"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/text/text.py#L16"}}),Ne=new D({props:{name:"class datasets.packaged_modules.text.Text",anchor:"datasets.packaged_modules.text.Text",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/text/text.py#L28"}}),ke=new U({props:{title:"CSV",local:"datasets.packaged_modules.csv.CsvConfig",headingTag:"h3"}}),De=new D({props:{name:"class datasets.packaged_modules.csv.CsvConfig",anchor:"datasets.packaged_modules.csv.CsvConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"sep",val:": str = ','"},{name:"delimiter",val:": typing.Optional[str] = None"},{name:"header",val:": typing.Union[int, list[int], str, NoneType] = 'infer'"},{name:"names",val:": typing.Optional[list[str]] = None"},{name:"column_names",val:": typing.Optional[list[str]] = None"},{name:"index_col",val:": typing.Union[int, str, list[int], list[str], NoneType] = None"},{name:"usecols",val:": typing.Union[list[int], list[str], NoneType] = None"},{name:"prefix",val:": typing.Optional[str] = None"},{name:"mangle_dupe_cols",val:": bool = True"},{name:"engine",val:": typing.Optional[typing.Literal['c', 'python', 'pyarrow']] = None"},{name:"converters",val:": dict = None"},{name:"true_values",val:": typing.Optional[list] = None"},{name:"false_values",val:": typing.Optional[list] = None"},{name:"skipinitialspace",val:": bool = False"},{name:"skiprows",val:": typing.Union[int, list[int], NoneType] = None"},{name:"nrows",val:": typing.Optional[int] = None"},{name:"na_values",val:": typing.Union[str, list[str], NoneType] = None"},{name:"keep_default_na",val:": bool = True"},{name:"na_filter",val:": bool = True"},{name:"verbose",val:": bool = False"},{name:"skip_blank_lines",val:": bool = True"},{name:"thousands",val:": typing.Optional[str] = None"},{name:"decimal",val:": str = '.'"},{name:"lineterminator",val:": typing.Optional[str] = None"},{name:"quotechar",val:`: str = '"'`},{name:"quoting",val:": int = 0"},{name:"escapechar",val:": typing.Optional[str] = None"},{name:"comment",val:": typing.Optional[str] = None"},{name:"encoding",val:": typing.Optional[str] = None"},{name:"dialect",val:": typing.Optional[str] = None"},{name:"error_bad_lines",val:": bool = True"},{name:"warn_bad_lines",val:": bool = True"},{name:"skipfooter",val:": int = 0"},{name:"doublequote",val:": bool = True"},{name:"memory_map",val:": bool = False"},{name:"float_precision",val:": typing.Optional[str] = None"},{name:"chunksize",val:": int = 10000"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"encoding_errors",val:": typing.Optional[str] = 'strict'"},{name:"on_bad_lines",val:": typing.Literal['error', 'warn', 'skip'] = 'error'"},{name:"date_format",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/csv/csv.py#L24"}}),Oe=new D({props:{name:"class datasets.packaged_modules.csv.Csv",anchor:"datasets.packaged_modules.csv.Csv",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/csv/csv.py#L145"}}),Te=new U({props:{title:"JSON",local:"datasets.packaged_modules.json.JsonConfig",headingTag:"h3"}}),Fe=new D({props:{name:"class datasets.packaged_modules.json.JsonConfig",anchor:"datasets.packaged_modules.json.JsonConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"encoding",val:": str = 'utf-8'"},{name:"encoding_errors",val:": typing.Optional[str] = None"},{name:"field",val:": typing.Optional[str] = None"},{name:"use_threads",val:": bool = True"},{name:"block_size",val:": typing.Optional[int] = None"},{name:"chunksize",val:": int = 10485760"},{name:"newlines_in_values",val:": typing.Optional[bool] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/json/json.py#L41"}}),je=new D({props:{name:"class datasets.packaged_modules.json.Json",anchor:"datasets.packaged_modules.json.Json",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/json/json.py#L58"}}),Me=new U({props:{title:"XML",local:"datasets.packaged_modules.xml.XmlConfig",headingTag:"h3"}}),Ie=new D({props:{name:"class datasets.packaged_modules.xml.XmlConfig",anchor:"datasets.packaged_modules.xml.XmlConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"encoding",val:": str = 'utf-8'"},{name:"encoding_errors",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/xml/xml.py#L15"}}),qe=new D({props:{name:"class datasets.packaged_modules.xml.Xml",anchor:"datasets.packaged_modules.xml.Xml",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/xml/xml.py#L24"}}),Ze=new U({props:{title:"Parquet",local:"datasets.packaged_modules.parquet.ParquetConfig",headingTag:"h3"}}),Re=new D({props:{name:"class datasets.packaged_modules.parquet.ParquetConfig",anchor:"datasets.packaged_modules.parquet.ParquetConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"batch_size",val:": typing.Optional[int] = None"},{name:"columns",val:": typing.Optional[list[str]] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"filters",val:": typing.Union[pyarrow._compute.Expression, list[tuple], list[list[tuple]], NoneType] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/parquet/parquet.py#L16"}}),Ve=new D({props:{name:"class datasets.packaged_modules.parquet.Parquet",anchor:"datasets.packaged_modules.parquet.Parquet",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/parquet/parquet.py#L29"}}),Se=new U({props:{title:"Arrow",local:"datasets.packaged_modules.arrow.ArrowConfig",headingTag:"h3"}}),Xe=new D({props:{name:"class datasets.packaged_modules.arrow.ArrowConfig",anchor:"datasets.packaged_modules.arrow.ArrowConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/arrow/arrow.py#L14"}}),ze=new D({props:{name:"class datasets.packaged_modules.arrow.Arrow",anchor:"datasets.packaged_modules.arrow.Arrow",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/arrow/arrow.py#L24"}}),Le=new U({props:{title:"SQL",local:"datasets.packaged_modules.sql.SqlConfig",headingTag:"h3"}}),Pe=new D({props:{name:"class datasets.packaged_modules.sql.SqlConfig",anchor:"datasets.packaged_modules.sql.SqlConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"sql",val:": typing.Union[str, ForwardRef('sqlalchemy.sql.Selectable')] = None"},{name:"con",val:": typing.Union[str, ForwardRef('sqlalchemy.engine.Connection'), ForwardRef('sqlalchemy.engine.Engine'), ForwardRef('sqlite3.Connection')] = None"},{name:"index_col",val:": typing.Union[str, list[str], NoneType] = None"},{name:"coerce_float",val:": bool = True"},{name:"params",val:": typing.Union[list, tuple, dict, NoneType] = None"},{name:"parse_dates",val:": typing.Union[list, dict, NoneType] = None"},{name:"columns",val:": typing.Optional[list[str]] = None"},{name:"chunksize",val:": typing.Optional[int] = 10000"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/sql/sql.py#L23"}}),He=new D({props:{name:"class datasets.packaged_modules.sql.Sql",anchor:"datasets.packaged_modules.sql.Sql",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/sql/sql.py#L91"}}),Ae=new U({props:{title:"Images",local:"datasets.packaged_modules.imagefolder.ImageFolderConfig",headingTag:"h3"}}),Be=new D({props:{name:"class datasets.packaged_modules.imagefolder.ImageFolderConfig",anchor:"datasets.packaged_modules.imagefolder.ImageFolderConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"drop_labels",val:": bool = None"},{name:"drop_metadata",val:": bool = None"},{name:"filters",val:": typing.Union[pyarrow._compute.Expression, list[tuple], list[list[tuple]], NoneType] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/imagefolder/imagefolder.py#L9"}}),Qe=new D({props:{name:"class datasets.packaged_modules.imagefolder.ImageFolder",anchor:"datasets.packaged_modules.imagefolder.ImageFolder",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/imagefolder/imagefolder.py#L19"}}),Ke=new U({props:{title:"Audio",local:"datasets.packaged_modules.audiofolder.AudioFolderConfig",headingTag:"h3"}}),et=new D({props:{name:"class datasets.packaged_modules.audiofolder.AudioFolderConfig",anchor:"datasets.packaged_modules.audiofolder.AudioFolderConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"drop_labels",val:": bool = None"},{name:"drop_metadata",val:": bool = None"},{name:"filters",val:": typing.Union[pyarrow._compute.Expression, list[tuple], list[list[tuple]], NoneType] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/audiofolder/audiofolder.py#L9"}}),at=new D({props:{name:"class datasets.packaged_modules.audiofolder.AudioFolder",anchor:"datasets.packaged_modules.audiofolder.AudioFolder",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/audiofolder/audiofolder.py#L19"}}),nt=new U({props:{title:"Videos",local:"datasets.packaged_modules.videofolder.VideoFolderConfig",headingTag:"h3"}}),st=new D({props:{name:"class datasets.packaged_modules.videofolder.VideoFolderConfig",anchor:"datasets.packaged_modules.videofolder.VideoFolderConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"drop_labels",val:": bool = None"},{name:"drop_metadata",val:": bool = None"},{name:"filters",val:": typing.Union[pyarrow._compute.Expression, list[tuple], list[list[tuple]], NoneType] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/videofolder/videofolder.py#L9"}}),it=new D({props:{name:"class datasets.packaged_modules.videofolder.VideoFolder",anchor:"datasets.packaged_modules.videofolder.VideoFolder",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/videofolder/videofolder.py#L19"}}),rt=new U({props:{title:"Pdf",local:"datasets.packaged_modules.pdffolder.PdfFolderConfig",headingTag:"h3"}}),dt=new D({props:{name:"class datasets.packaged_modules.pdffolder.PdfFolderConfig",anchor:"datasets.packaged_modules.pdffolder.PdfFolderConfig",parameters:[{name:"name",val:": str = 'default'"},{name:"version",val:": typing.Union[str, datasets.utils.version.Version, NoneType] = 0.0.0"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[datasets.data_files.DataFilesDict, datasets.data_files.DataFilesPatternsDict, NoneType] = None"},{name:"description",val:": typing.Optional[str] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"drop_labels",val:": bool = None"},{name:"drop_metadata",val:": bool = None"},{name:"filters",val:": typing.Union[pyarrow._compute.Expression, list[tuple], list[list[tuple]], NoneType] = None"}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/pdffolder/pdffolder.py#L9"}}),pt=new D({props:{name:"class datasets.packaged_modules.pdffolder.PdfFolder",anchor:"datasets.packaged_modules.pdffolder.PdfFolder",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/pdffolder/pdffolder.py#L19"}}),ct=new U({props:{title:"WebDataset",local:"datasets.packaged_modules.webdataset.WebDataset",headingTag:"h3"}}),mt=new D({props:{name:"class datasets.packaged_modules.webdataset.WebDataset",anchor:"datasets.packaged_modules.webdataset.WebDataset",parameters:[{name:"cache_dir",val:": typing.Optional[str] = None"},{name:"dataset_name",val:": typing.Optional[str] = None"},{name:"config_name",val:": typing.Optional[str] = None"},{name:"hash",val:": typing.Optional[str] = None"},{name:"base_path",val:": typing.Optional[str] = None"},{name:"info",val:": typing.Optional[datasets.info.DatasetInfo] = None"},{name:"features",val:": typing.Optional[datasets.features.features.Features] = None"},{name:"token",val:": typing.Union[bool, str, NoneType] = None"},{name:"repo_id",val:": typing.Optional[str] = None"},{name:"data_files",val:": typing.Union[str, list, dict, datasets.data_files.DataFilesDict, NoneType] = None"},{name:"data_dir",val:": typing.Optional[str] = None"},{name:"storage_options",val:": typing.Optional[dict] = None"},{name:"writer_batch_size",val:": typing.Optional[int] = None"},{name:"**config_kwargs",val:""}],source:"https://github.com/huggingface/datasets/blob/3.6.0/src/datasets/packaged_modules/webdataset/webdataset.py#L19"}}),ft=new Ns({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/package_reference/loading_methods.mdx"}}),{c(){r=l("meta"),x=o(),y=l("p"),d=o(),c(v.$$.fragment),t=o(),b=l("p"),b.textContent=jn,Lt=o(),c(le.$$.fragment),Pt=o(),k=l("div"),c(pe.$$.fragment),Ba=o(),ht=l("p"),ht.textContent=Mn,Ya=o(),vt=l("p"),vt.innerHTML=In,Qa=o(),yt=l("p"),yt.textContent=Jn,Ka=o(),bt=l("p"),bt.textContent=qn,en=o(),$t=l("ol"),$t.innerHTML=Zn,tn=o(),xt=l("p"),xt.textContent=Rn,an=o(),wt=l("p"),wt.textContent=Gn,nn=o(),c(ee.$$.fragment),sn=o(),c(te.$$.fragment),on=o(),c(ae.$$.fragment),rn=o(),c(ne.$$.fragment),Wt=o(),j=l("div"),c(ce.$$.fragment),dn=o(),Nt=l("p"),Nt.innerHTML=Vn,ln=o(),c(se.$$.fragment),Ht=o(),T=l("div"),c(ge.$$.fragment),pn=o(),kt=l("p"),kt.textContent=Sn,cn=o(),Dt=l("ul"),Dt.innerHTML=Xn,gn=o(),Ct=l("p"),Ct.innerHTML=En,mn=o(),Ot=l("p"),Ot.textContent=zn,fn=o(),c(oe.$$.fragment),At=o(),M=l("div"),c(me.$$.fragment),un=o(),Tt=l("p"),Tt.textContent=Ln,_n=o(),c(ie.$$.fragment),Bt=o(),I=l("div"),c(fe.$$.fragment),hn=o(),Ft=l("p"),Ft.textContent=Pn,vn=o(),c(re.$$.fragment),Yt=o(),J=l("div"),c(ue.$$.fragment),yn=o(),Ut=l("p"),Ut.textContent=Wn,bn=o(),c(de.$$.fragment),Qt=o(),c(_e.$$.fragment),Kt=o(),he=l("p"),he.textContent=Hn,ea=o(),ve=l("ul"),ve.innerHTML=An,ta=o(),ye=l("p"),ye.innerHTML=Bn,aa=o(),c(be.$$.fragment),na=o(),c($e.$$.fragment),sa=o(),Z=l("div"),c(xe.$$.fragment),$n=o(),jt=l("p"),jt.textContent=Yn,oa=o(),we=l("div"),c(Ne.$$.fragment),ia=o(),c(ke.$$.fragment),ra=o(),R=l("div"),c(De.$$.fragment),xn=o(),Mt=l("p"),Mt.textContent=Qn,da=o(),Ce=l("div"),c(Oe.$$.fragment),la=o(),c(Te.$$.fragment),pa=o(),G=l("div"),c(Fe.$$.fragment),wn=o(),It=l("p"),It.textContent=Kn,ca=o(),Ue=l("div"),c(je.$$.fragment),ga=o(),c(Me.$$.fragment),ma=o(),V=l("div"),c(Ie.$$.fragment),Nn=o(),Jt=l("p"),Jt.textContent=es,fa=o(),Je=l("div"),c(qe.$$.fragment),ua=o(),c(Ze.$$.fragment),_a=o(),S=l("div"),c(Re.$$.fragment),kn=o(),qt=l("p"),qt.textContent=ts,ha=o(),Ge=l("div"),c(Ve.$$.fragment),va=o(),c(Se.$$.fragment),ya=o(),X=l("div"),c(Xe.$$.fragment),Dn=o(),Zt=l("p"),Zt.textContent=as,ba=o(),Ee=l("div"),c(ze.$$.fragment),$a=o(),c(Le.$$.fragment),xa=o(),E=l("div"),c(Pe.$$.fragment),Cn=o(),Rt=l("p"),Rt.textContent=ns,wa=o(),We=l("div"),c(He.$$.fragment),Na=o(),c(Ae.$$.fragment),ka=o(),z=l("div"),c(Be.$$.fragment),On=o(),Gt=l("p"),Gt.textContent=ss,Da=o(),Ye=l("div"),c(Qe.$$.fragment),Ca=o(),c(Ke.$$.fragment),Oa=o(),L=l("div"),c(et.$$.fragment),Tn=o(),Vt=l("p"),Vt.textContent=os,Ta=o(),tt=l("div"),c(at.$$.fragment),Fa=o(),c(nt.$$.fragment),Ua=o(),P=l("div"),c(st.$$.fragment),Fn=o(),St=l("p"),St.textContent=is,ja=o(),ot=l("div"),c(it.$$.fragment),Ma=o(),c(rt.$$.fragment),Ia=o(),W=l("div"),c(dt.$$.fragment),Un=o(),Xt=l("p"),Xt.textContent=rs,Ja=o(),lt=l("div"),c(pt.$$.fragment),qa=o(),c(ct.$$.fragment),Za=o(),gt=l("div"),c(mt.$$.fragment),Ra=o(),c(ft.$$.fragment),Ga=o(),Et=l("p"),this.h()},l(e){const n=ws("svelte-u9bgzb",document.head);r=p(n,"META",{name:!0,content:!0}),n.forEach(a),x=i(e),y=p(e,"P",{}),w(y).forEach(a),d=i(e),g(v.$$.fragment,e),t=i(e),b=p(e,"P",{"data-svelte-h":!0}),$(b)!=="svelte-spmsxp"&&(b.textContent=jn),Lt=i(e),g(le.$$.fragment,e),Pt=i(e),k=p(e,"DIV",{class:!0});var C=w(k);g(pe.$$.fragment,C),Ba=i(C),ht=p(C,"P",{"data-svelte-h":!0}),$(ht)!=="svelte-x6t4fm"&&(ht.textContent=Mn),Ya=i(C),vt=p(C,"P",{"data-svelte-h":!0}),$(vt)!=="svelte-1j3dvna"&&(vt.innerHTML=In),Qa=i(C),yt=p(C,"P",{"data-svelte-h":!0}),$(yt)!=="svelte-scev7w"&&(yt.textContent=Jn),Ka=i(C),bt=p(C,"P",{"data-svelte-h":!0}),$(bt)!=="svelte-1osovlg"&&(bt.textContent=qn),en=i(C),$t=p(C,"OL",{"data-svelte-h":!0}),$($t)!=="svelte-i4spcm"&&($t.innerHTML=Zn),tn=i(C),xt=p(C,"P",{"data-svelte-h":!0}),$(xt)!=="svelte-awf8ez"&&(xt.textContent=Rn),an=i(C),wt=p(C,"P",{"data-svelte-h":!0}),$(wt)!=="svelte-11lpom8"&&(wt.textContent=Gn),nn=i(C),g(ee.$$.fragment,C),sn=i(C),g(te.$$.fragment,C),on=i(C),g(ae.$$.fragment,C),rn=i(C),g(ne.$$.fragment,C),C.forEach(a),Wt=i(e),j=p(e,"DIV",{class:!0});var H=w(j);g(ce.$$.fragment,H),dn=i(H),Nt=p(H,"P",{"data-svelte-h":!0}),$(Nt)!=="svelte-19zt9lm"&&(Nt.innerHTML=Vn),ln=i(H),g(se.$$.fragment,H),H.forEach(a),Ht=i(e),T=p(e,"DIV",{class:!0});var F=w(T);g(ge.$$.fragment,F),pn=i(F),kt=p(F,"P",{"data-svelte-h":!0}),$(kt)!=="svelte-dbq44g"&&(kt.textContent=Sn),cn=i(F),Dt=p(F,"UL",{"data-svelte-h":!0}),$(Dt)!=="svelte-82dds3"&&(Dt.innerHTML=Xn),gn=i(F),Ct=p(F,"P",{"data-svelte-h":!0}),$(Ct)!=="svelte-1j3dvna"&&(Ct.innerHTML=En),mn=i(F),Ot=p(F,"P",{"data-svelte-h":!0}),$(Ot)!=="svelte-scev7w"&&(Ot.textContent=zn),fn=i(F),g(oe.$$.fragment,F),F.forEach(a),At=i(e),M=p(e,"DIV",{class:!0});var A=w(M);g(me.$$.fragment,A),un=i(A),Tt=p(A,"P",{"data-svelte-h":!0}),$(Tt)!=="svelte-2twqqm"&&(Tt.textContent=Ln),_n=i(A),g(ie.$$.fragment,A),A.forEach(a),Bt=i(e),I=p(e,"DIV",{class:!0});var B=w(I);g(fe.$$.fragment,B),hn=i(B),Ft=p(B,"P",{"data-svelte-h":!0}),$(Ft)!=="svelte-vg9yfc"&&(Ft.textContent=Pn),vn=i(B),g(re.$$.fragment,B),B.forEach(a),Yt=i(e),J=p(e,"DIV",{class:!0});var Y=w(J);g(ue.$$.fragment,Y),yn=i(Y),Ut=p(Y,"P",{"data-svelte-h":!0}),$(Ut)!=="svelte-hrdkoe"&&(Ut.textContent=Wn),bn=i(Y),g(de.$$.fragment,Y),Y.forEach(a),Qt=i(e),g(_e.$$.fragment,e),Kt=i(e),he=p(e,"P",{"data-svelte-h":!0}),$(he)!=="svelte-psk543"&&(he.textContent=Hn),ea=i(e),ve=p(e,"UL",{"data-svelte-h":!0}),$(ve)!=="svelte-mua0wr"&&(ve.innerHTML=An),ta=i(e),ye=p(e,"P",{"data-svelte-h":!0}),$(ye)!=="svelte-8y038n"&&(ye.innerHTML=Bn),aa=i(e),g(be.$$.fragment,e),na=i(e),g($e.$$.fragment,e),sa=i(e),Z=p(e,"DIV",{class:!0});var ut=w(Z);g(xe.$$.fragment,ut),$n=i(ut),jt=p(ut,"P",{"data-svelte-h":!0}),$(jt)!=="svelte-jpahu0"&&(jt.textContent=Yn),ut.forEach(a),oa=i(e),we=p(e,"DIV",{class:!0});var zt=w(we);g(Ne.$$.fragment,zt),zt.forEach(a),ia=i(e),g(ke.$$.fragment,e),ra=i(e),R=p(e,"DIV",{class:!0});var _t=w(R);g(De.$$.fragment,_t),xn=i(_t),Mt=p(_t,"P",{"data-svelte-h":!0}),$(Mt)!=="svelte-993wsc"&&(Mt.textContent=Qn),_t.forEach(a),da=i(e),Ce=p(e,"DIV",{class:!0});var ds=w(Ce);g(Oe.$$.fragment,ds),ds.forEach(a),la=i(e),g(Te.$$.fragment,e),pa=i(e),G=p(e,"DIV",{class:!0});var Sa=w(G);g(Fe.$$.fragment,Sa),wn=i(Sa),It=p(Sa,"P",{"data-svelte-h":!0}),$(It)!=="svelte-12lz3xe"&&(It.textContent=Kn),Sa.forEach(a),ca=i(e),Ue=p(e,"DIV",{class:!0});var ls=w(Ue);g(je.$$.fragment,ls),ls.forEach(a),ga=i(e),g(Me.$$.fragment,e),ma=i(e),V=p(e,"DIV",{class:!0});var Xa=w(V);g(Ie.$$.fragment,Xa),Nn=i(Xa),Jt=p(Xa,"P",{"data-svelte-h":!0}),$(Jt)!=="svelte-1kpjrrq"&&(Jt.textContent=es),Xa.forEach(a),fa=i(e),Je=p(e,"DIV",{class:!0});var ps=w(Je);g(qe.$$.fragment,ps),ps.forEach(a),ua=i(e),g(Ze.$$.fragment,e),_a=i(e),S=p(e,"DIV",{class:!0});var Ea=w(S);g(Re.$$.fragment,Ea),kn=i(Ea),qt=p(Ea,"P",{"data-svelte-h":!0}),$(qt)!=="svelte-1kivgjw"&&(qt.textContent=ts),Ea.forEach(a),ha=i(e),Ge=p(e,"DIV",{class:!0});var cs=w(Ge);g(Ve.$$.fragment,cs),cs.forEach(a),va=i(e),g(Se.$$.fragment,e),ya=i(e),X=p(e,"DIV",{class:!0});var za=w(X);g(Xe.$$.fragment,za),Dn=i(za),Zt=p(za,"P",{"data-svelte-h":!0}),$(Zt)!=="svelte-1ah41nl"&&(Zt.textContent=as),za.forEach(a),ba=i(e),Ee=p(e,"DIV",{class:!0});var gs=w(Ee);g(ze.$$.fragment,gs),gs.forEach(a),$a=i(e),g(Le.$$.fragment,e),xa=i(e),E=p(e,"DIV",{class:!0});var La=w(E);g(Pe.$$.fragment,La),Cn=i(La),Rt=p(La,"P",{"data-svelte-h":!0}),$(Rt)!=="svelte-18rutfs"&&(Rt.textContent=ns),La.forEach(a),wa=i(e),We=p(e,"DIV",{class:!0});var ms=w(We);g(He.$$.fragment,ms),ms.forEach(a),Na=i(e),g(Ae.$$.fragment,e),ka=i(e),z=p(e,"DIV",{class:!0});var Pa=w(z);g(Be.$$.fragment,Pa),On=i(Pa),Gt=p(Pa,"P",{"data-svelte-h":!0}),$(Gt)!=="svelte-myiztp"&&(Gt.textContent=ss),Pa.forEach(a),Da=i(e),Ye=p(e,"DIV",{class:!0});var fs=w(Ye);g(Qe.$$.fragment,fs),fs.forEach(a),Ca=i(e),g(Ke.$$.fragment,e),Oa=i(e),L=p(e,"DIV",{class:!0});var Wa=w(L);g(et.$$.fragment,Wa),Tn=i(Wa),Vt=p(Wa,"P",{"data-svelte-h":!0}),$(Vt)!=="svelte-obgmtg"&&(Vt.textContent=os),Wa.forEach(a),Ta=i(e),tt=p(e,"DIV",{class:!0});var us=w(tt);g(at.$$.fragment,us),us.forEach(a),Fa=i(e),g(nt.$$.fragment,e),Ua=i(e),P=p(e,"DIV",{class:!0});var Ha=w(P);g(st.$$.fragment,Ha),Fn=i(Ha),St=p(Ha,"P",{"data-svelte-h":!0}),$(St)!=="svelte-myiztp"&&(St.textContent=is),Ha.forEach(a),ja=i(e),ot=p(e,"DIV",{class:!0});var _s=w(ot);g(it.$$.fragment,_s),_s.forEach(a),Ma=i(e),g(rt.$$.fragment,e),Ia=i(e),W=p(e,"DIV",{class:!0});var Aa=w(W);g(dt.$$.fragment,Aa),Un=i(Aa),Xt=p(Aa,"P",{"data-svelte-h":!0}),$(Xt)!=="svelte-myiztp"&&(Xt.textContent=rs),Aa.forEach(a),Ja=i(e),lt=p(e,"DIV",{class:!0});var hs=w(lt);g(pt.$$.fragment,hs),hs.forEach(a),qa=i(e),g(ct.$$.fragment,e),Za=i(e),gt=p(e,"DIV",{class:!0});var vs=w(gt);g(mt.$$.fragment,vs),vs.forEach(a),Ra=i(e),g(ft.$$.fragment,e),Ga=i(e),Et=p(e,"P",{}),w(Et).forEach(a),this.h()},h(){N(r,"name","hf:doc:metadata"),N(r,"content",Js),N(k,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(T,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(M,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(I,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(we,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(G,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(V,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(S,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(E,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(We,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(Ye,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(tt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(P,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(ot,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(lt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),N(gt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,n){h(document.head,r),s(e,x,n),s(e,y,n),s(e,d,n),m(v,e,n),s(e,t,n),s(e,b,n),s(e,Lt,n),m(le,e,n),s(e,Pt,n),s(e,k,n),m(pe,k,null),h(k,Ba),h(k,ht),h(k,Ya),h(k,vt),h(k,Qa),h(k,yt),h(k,Ka),h(k,bt),h(k,en),h(k,$t),h(k,tn),h(k,xt),h(k,an),h(k,wt),h(k,nn),m(ee,k,null),h(k,sn),m(te,k,null),h(k,on),m(ae,k,null),h(k,rn),m(ne,k,null),s(e,Wt,n),s(e,j,n),m(ce,j,null),h(j,dn),h(j,Nt),h(j,ln),m(se,j,null),s(e,Ht,n),s(e,T,n),m(ge,T,null),h(T,pn),h(T,kt),h(T,cn),h(T,Dt),h(T,gn),h(T,Ct),h(T,mn),h(T,Ot),h(T,fn),m(oe,T,null),s(e,At,n),s(e,M,n),m(me,M,null),h(M,un),h(M,Tt),h(M,_n),m(ie,M,null),s(e,Bt,n),s(e,I,n),m(fe,I,null),h(I,hn),h(I,Ft),h(I,vn),m(re,I,null),s(e,Yt,n),s(e,J,n),m(ue,J,null),h(J,yn),h(J,Ut),h(J,bn),m(de,J,null),s(e,Qt,n),m(_e,e,n),s(e,Kt,n),s(e,he,n),s(e,ea,n),s(e,ve,n),s(e,ta,n),s(e,ye,n),s(e,aa,n),m(be,e,n),s(e,na,n),m($e,e,n),s(e,sa,n),s(e,Z,n),m(xe,Z,null),h(Z,$n),h(Z,jt),s(e,oa,n),s(e,we,n),m(Ne,we,null),s(e,ia,n),m(ke,e,n),s(e,ra,n),s(e,R,n),m(De,R,null),h(R,xn),h(R,Mt),s(e,da,n),s(e,Ce,n),m(Oe,Ce,null),s(e,la,n),m(Te,e,n),s(e,pa,n),s(e,G,n),m(Fe,G,null),h(G,wn),h(G,It),s(e,ca,n),s(e,Ue,n),m(je,Ue,null),s(e,ga,n),m(Me,e,n),s(e,ma,n),s(e,V,n),m(Ie,V,null),h(V,Nn),h(V,Jt),s(e,fa,n),s(e,Je,n),m(qe,Je,null),s(e,ua,n),m(Ze,e,n),s(e,_a,n),s(e,S,n),m(Re,S,null),h(S,kn),h(S,qt),s(e,ha,n),s(e,Ge,n),m(Ve,Ge,null),s(e,va,n),m(Se,e,n),s(e,ya,n),s(e,X,n),m(Xe,X,null),h(X,Dn),h(X,Zt),s(e,ba,n),s(e,Ee,n),m(ze,Ee,null),s(e,$a,n),m(Le,e,n),s(e,xa,n),s(e,E,n),m(Pe,E,null),h(E,Cn),h(E,Rt),s(e,wa,n),s(e,We,n),m(He,We,null),s(e,Na,n),m(Ae,e,n),s(e,ka,n),s(e,z,n),m(Be,z,null),h(z,On),h(z,Gt),s(e,Da,n),s(e,Ye,n),m(Qe,Ye,null),s(e,Ca,n),m(Ke,e,n),s(e,Oa,n),s(e,L,n),m(et,L,null),h(L,Tn),h(L,Vt),s(e,Ta,n),s(e,tt,n),m(at,tt,null),s(e,Fa,n),m(nt,e,n),s(e,Ua,n),s(e,P,n),m(st,P,null),h(P,Fn),h(P,St),s(e,ja,n),s(e,ot,n),m(it,ot,null),s(e,Ma,n),m(rt,e,n),s(e,Ia,n),s(e,W,n),m(dt,W,null),h(W,Un),h(W,Xt),s(e,Ja,n),s(e,lt,n),m(pt,lt,null),s(e,qa,n),m(ct,e,n),s(e,Za,n),s(e,gt,n),m(mt,gt,null),s(e,Ra,n),m(ft,e,n),s(e,Ga,n),s(e,Et,n),Va=!0},p(e,[n]){const C={};n&2&&(C.$$scope={dirty:n,ctx:e}),ee.$set(C);const H={};n&2&&(H.$$scope={dirty:n,ctx:e}),te.$set(H);const F={};n&2&&(F.$$scope={dirty:n,ctx:e}),ae.$set(F);const A={};n&2&&(A.$$scope={dirty:n,ctx:e}),ne.$set(A);const B={};n&2&&(B.$$scope={dirty:n,ctx:e}),se.$set(B);const Y={};n&2&&(Y.$$scope={dirty:n,ctx:e}),oe.$set(Y);const ut={};n&2&&(ut.$$scope={dirty:n,ctx:e}),ie.$set(ut);const zt={};n&2&&(zt.$$scope={dirty:n,ctx:e}),re.$set(zt);const _t={};n&2&&(_t.$$scope={dirty:n,ctx:e}),de.$set(_t)},i(e){Va||(f(v.$$.fragment,e),f(le.$$.fragment,e),f(pe.$$.fragment,e),f(ee.$$.fragment,e),f(te.$$.fragment,e),f(ae.$$.fragment,e),f(ne.$$.fragment,e),f(ce.$$.fragment,e),f(se.$$.fragment,e),f(ge.$$.fragment,e),f(oe.$$.fragment,e),f(me.$$.fragment,e),f(ie.$$.fragment,e),f(fe.$$.fragment,e),f(re.$$.fragment,e),f(ue.$$.fragment,e),f(de.$$.fragment,e),f(_e.$$.fragment,e),f(be.$$.fragment,e),f($e.$$.fragment,e),f(xe.$$.fragment,e),f(Ne.$$.fragment,e),f(ke.$$.fragment,e),f(De.$$.fragment,e),f(Oe.$$.fragment,e),f(Te.$$.fragment,e),f(Fe.$$.fragment,e),f(je.$$.fragment,e),f(Me.$$.fragment,e),f(Ie.$$.fragment,e),f(qe.$$.fragment,e),f(Ze.$$.fragment,e),f(Re.$$.fragment,e),f(Ve.$$.fragment,e),f(Se.$$.fragment,e),f(Xe.$$.fragment,e),f(ze.$$.fragment,e),f(Le.$$.fragment,e),f(Pe.$$.fragment,e),f(He.$$.fragment,e),f(Ae.$$.fragment,e),f(Be.$$.fragment,e),f(Qe.$$.fragment,e),f(Ke.$$.fragment,e),f(et.$$.fragment,e),f(at.$$.fragment,e),f(nt.$$.fragment,e),f(st.$$.fragment,e),f(it.$$.fragment,e),f(rt.$$.fragment,e),f(dt.$$.fragment,e),f(pt.$$.fragment,e),f(ct.$$.fragment,e),f(mt.$$.fragment,e),f(ft.$$.fragment,e),Va=!0)},o(e){u(v.$$.fragment,e),u(le.$$.fragment,e),u(pe.$$.fragment,e),u(ee.$$.fragment,e),u(te.$$.fragment,e),u(ae.$$.fragment,e),u(ne.$$.fragment,e),u(ce.$$.fragment,e),u(se.$$.fragment,e),u(ge.$$.fragment,e),u(oe.$$.fragment,e),u(me.$$.fragment,e),u(ie.$$.fragment,e),u(fe.$$.fragment,e),u(re.$$.fragment,e),u(ue.$$.fragment,e),u(de.$$.fragment,e),u(_e.$$.fragment,e),u(be.$$.fragment,e),u($e.$$.fragment,e),u(xe.$$.fragment,e),u(Ne.$$.fragment,e),u(ke.$$.fragment,e),u(De.$$.fragment,e),u(Oe.$$.fragment,e),u(Te.$$.fragment,e),u(Fe.$$.fragment,e),u(je.$$.fragment,e),u(Me.$$.fragment,e),u(Ie.$$.fragment,e),u(qe.$$.fragment,e),u(Ze.$$.fragment,e),u(Re.$$.fragment,e),u(Ve.$$.fragment,e),u(Se.$$.fragment,e),u(Xe.$$.fragment,e),u(ze.$$.fragment,e),u(Le.$$.fragment,e),u(Pe.$$.fragment,e),u(He.$$.fragment,e),u(Ae.$$.fragment,e),u(Be.$$.fragment,e),u(Qe.$$.fragment,e),u(Ke.$$.fragment,e),u(et.$$.fragment,e),u(at.$$.fragment,e),u(nt.$$.fragment,e),u(st.$$.fragment,e),u(it.$$.fragment,e),u(rt.$$.fragment,e),u(dt.$$.fragment,e),u(pt.$$.fragment,e),u(ct.$$.fragment,e),u(mt.$$.fragment,e),u(ft.$$.fragment,e),Va=!1},d(e){e&&(a(x),a(y),a(d),a(t),a(b),a(Lt),a(Pt),a(k),a(Wt),a(j),a(Ht),a(T),a(At),a(M),a(Bt),a(I),a(Yt),a(J),a(Qt),a(Kt),a(he),a(ea),a(ve),a(ta),a(ye),a(aa),a(na),a(sa),a(Z),a(oa),a(we),a(ia),a(ra),a(R),a(da),a(Ce),a(la),a(pa),a(G),a(ca),a(Ue),a(ga),a(ma),a(V),a(fa),a(Je),a(ua),a(_a),a(S),a(ha),a(Ge),a(va),a(ya),a(X),a(ba),a(Ee),a($a),a(xa),a(E),a(wa),a(We),a(Na),a(ka),a(z),a(Da),a(Ye),a(Ca),a(Oa),a(L),a(Ta),a(tt),a(Fa),a(Ua),a(P),a(ja),a(ot),a(Ma),a(Ia),a(W),a(Ja),a(lt),a(qa),a(Za),a(gt),a(Ra),a(Ga),a(Et)),a(r),_(v,e),_(le,e),_(pe),_(ee),_(te),_(ae),_(ne),_(ce),_(se),_(ge),_(oe),_(me),_(ie),_(fe),_(re),_(ue),_(de),_(_e,e),_(be,e),_($e,e),_(xe),_(Ne),_(ke,e),_(De),_(Oe),_(Te,e),_(Fe),_(je),_(Me,e),_(Ie),_(qe),_(Ze,e),_(Re),_(Ve),_(Se,e),_(Xe),_(ze),_(Le,e),_(Pe),_(He),_(Ae,e),_(Be),_(Qe),_(Ke,e),_(et),_(at),_(nt,e),_(st),_(it),_(rt,e),_(dt),_(pt),_(ct,e),_(mt),_(ft,e)}}}const Js='{"title":"Loading methods","local":"loading-methods","sections":[{"title":"Datasets","local":"datasets.load_dataset","sections":[],"depth":2},{"title":"From files","local":"from-files","sections":[{"title":"Text","local":"datasets.packaged_modules.text.TextConfig","sections":[],"depth":3},{"title":"CSV","local":"datasets.packaged_modules.csv.CsvConfig","sections":[],"depth":3},{"title":"JSON","local":"datasets.packaged_modules.json.JsonConfig","sections":[],"depth":3},{"title":"XML","local":"datasets.packaged_modules.xml.XmlConfig","sections":[],"depth":3},{"title":"Parquet","local":"datasets.packaged_modules.parquet.ParquetConfig","sections":[],"depth":3},{"title":"Arrow","local":"datasets.packaged_modules.arrow.ArrowConfig","sections":[],"depth":3},{"title":"SQL","local":"datasets.packaged_modules.sql.SqlConfig","sections":[],"depth":3},{"title":"Images","local":"datasets.packaged_modules.imagefolder.ImageFolderConfig","sections":[],"depth":3},{"title":"Audio","local":"datasets.packaged_modules.audiofolder.AudioFolderConfig","sections":[],"depth":3},{"title":"Videos","local":"datasets.packaged_modules.videofolder.VideoFolderConfig","sections":[],"depth":3},{"title":"Pdf","local":"datasets.packaged_modules.pdffolder.PdfFolderConfig","sections":[],"depth":3},{"title":"WebDataset","local":"datasets.packaged_modules.webdataset.WebDataset","sections":[],"depth":3}],"depth":2}],"depth":1}';function qs(O){return bs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Es extends $s{constructor(r){super(),xs(this,r,qs,Is,ys,{})}}export{Es as component};
