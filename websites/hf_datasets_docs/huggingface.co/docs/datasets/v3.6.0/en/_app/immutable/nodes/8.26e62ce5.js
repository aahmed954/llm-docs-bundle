import{s as rs,n as os,o as ms}from"../chunks/scheduler.bdbef820.js";import{S as cs,i as ds,g as i,s as n,r,A as hs,h as p,f as t,c as l,j as is,u as o,x as m,k as ps,y as gs,a,v as c,d,t as h,w as g}from"../chunks/index.c0aea24a.js";import{C as f}from"../chunks/CodeBlock.e814ab8d.js";import{H as O,E as fs}from"../chunks/index.89e522f3.js";function us(Le){let u,te,ee,ae,b,ne,j,Ye='There are two types of dataset objects, a regular <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> and then an ✨ <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> ✨. A <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> provides fast random access to the rows, and memory-mapping so that loading even large datasets only uses a relatively small amount of device memory. But for really, really big datasets that won’t even fit on disk or in memory, an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> allows you to access and use the dataset without waiting for it to download completely!',le,x,ze='This tutorial will show you how to load and access a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> and an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>.',ie,w,pe,$,Qe='When you load a dataset split, you’ll get a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> object. You can do many things with a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> object, which is why it’s important to learn how to manipulate and interact with the data stored inside.',re,y,We='This tutorial uses the <a href="https://huggingface.co/datasets/rotten_tomatoes" rel="nofollow">rotten_tomatoes</a> dataset, but feel free to load any dataset you’d like and follow along!',oe,v,me,M,ce,_,Pe='A <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> contains columns of data, and each column can be a different type of data. The <em>index</em>, or axis label, is used to access examples from the dataset. For example, indexing by the row returns a dictionary of an example from the dataset:',de,k,he,J,Ee="Use the <code>-</code> operator to start from the end of the dataset:",ge,T,fe,U,Ve="Indexing by the column name returns a list of all the values in the column:",ue,I,be,C,Ne="You can combine row and column name indexing to return a specific value at a position:",je,G,xe,R,Se="But it is important to remember that indexing order matters, especially when working with large audio and image datasets. Indexing by the column name returns all the values in the column first, then loads the value at that position. For large datasets, it may be slower to index by the column name first.",we,D,$e,Z,ye,F,Ae="Slicing returns a slice - or subset - of the dataset, which is useful for viewing several rows at once. To slice a dataset, use the <code>:</code> operator to specify a range of positions.",ve,X,Me,B,_e,H,Ke='An <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> is loaded when you set the <code>streaming</code> parameter to <code>True</code> in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',ke,q,Je,L,Oe='You can also create an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> from an <em>existing</em> <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a>, but it is faster than streaming mode because the dataset is streamed from local files:',Te,Y,Ue,z,es='An <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a> progressively iterates over a dataset one example at a time, so you don’t have to wait for the whole dataset to download before you can use it. As you can imagine, this is quite useful for large datasets you want to use immediately!',Ie,Q,ss='However, this means an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>’s behavior is different from a regular <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a>. You don’t get random access to examples in an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>. Instead, you should iterate over its elements, for example, by calling <code>next(iter())</code> or with a <code>for</code> loop to return the next item from the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>:',Ce,W,Ge,P,ts='You can return a subset of the dataset with a specific number of examples in it with <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.take">IterableDataset.take()</a>:',Re,E,De,V,as='But unlike <a href="access/#slicing">slicing</a>, <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.take">IterableDataset.take()</a> creates a new <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>.',Ze,N,Fe,S,ns='Interested in learning more about the differences between these two types of datasets? Learn more about them in the <a href="about_mapstyle_vs_iterable">Differences between <code>Dataset</code> and <code>IterableDataset</code></a> conceptual guide.',Xe,A,ls='To get more hands-on with these datasets types, check out the <a href="process">Process</a> guide to learn how to preprocess a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> or the <a href="stream">Stream</a> guide to learn how to preprocess an <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset">IterableDataset</a>.',Be,K,He,se,qe;return b=new O({props:{title:"Know your dataset",local:"know-your-dataset",headingTag:"h1"}}),w=new O({props:{title:"Dataset",local:"dataset",headingTag:"h2"}}),v=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),M=new O({props:{title:"Indexing",local:"indexing",headingTag:"h3"}}),k=new f({props:{code:"ZGF0YXNldCU1QjAlNUQ=",highlighted:`<span class="hljs-comment"># Get the first row in the dataset</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">1</span>,
 <span class="hljs-string">&#x27;text&#x27;</span>: <span class="hljs-string">&#x27;the rock is destined to be the 21st century\\&#x27;s new &quot; conan &quot; and that he\\&#x27;s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .&#x27;</span>}`,wrap:!1}}),T=new f({props:{code:"ZGF0YXNldCU1Qi0xJTVE",highlighted:`<span class="hljs-comment"># Get the last row in the dataset</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[-<span class="hljs-number">1</span>]
{<span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">0</span>,
 <span class="hljs-string">&#x27;text&#x27;</span>: <span class="hljs-string">&#x27;things really get weird , though not particularly scary : the movie is all portent and no content .&#x27;</span>}`,wrap:!1}}),I=new f({props:{code:"ZGF0YXNldCU1QiUyMnRleHQlMjIlNUQ=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-string">&quot;text&quot;</span>]
[<span class="hljs-string">&#x27;the rock is destined to be the 21st century\\&#x27;s new &quot; conan &quot; and that he\\&#x27;s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .&#x27;</span>,
 <span class="hljs-string">&#x27;the gorgeously elaborate continuation of &quot; the lord of the rings &quot; trilogy is so huge that a column of words cannot adequately describe co-writer/director peter jackson\\&#x27;s expanded vision of j . r . r . tolkien\\&#x27;s middle-earth .&#x27;</span>,
 <span class="hljs-string">&#x27;effective but too-tepid biopic&#x27;</span>,
 ...,
 <span class="hljs-string">&#x27;things really get weird , though not particularly scary : the movie is all portent and no content .&#x27;</span>]`,wrap:!1}}),G=new f({props:{code:"ZGF0YXNldCU1QjAlNUQlNUIlMjJ0ZXh0JTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;text&quot;</span>]
<span class="hljs-string">&#x27;the rock is destined to be the 21st century\\&#x27;s new &quot; conan &quot; and that he\\&#x27;s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .&#x27;</span>`,wrap:!1}}),D=new f({props:{code:"aW1wb3J0JTIwdGltZSUwQSUwQXN0YXJ0X3RpbWUlMjAlM0QlMjB0aW1lLnRpbWUoKSUwQXRleHQlMjAlM0QlMjBkYXRhc2V0JTVCMCU1RCU1QiUyMnRleHQlMjIlNUQlMEFlbmRfdGltZSUyMCUzRCUyMHRpbWUudGltZSgpJTBBcHJpbnQoZiUyMkVsYXBzZWQlMjB0aW1lJTNBJTIwJTdCZW5kX3RpbWUlMjAtJTIwc3RhcnRfdGltZSUzQS40ZiU3RCUyMHNlY29uZHMlMjIpJTBBJTBBc3RhcnRfdGltZSUyMCUzRCUyMHRpbWUudGltZSgpJTBBdGV4dCUyMCUzRCUyMGRhdGFzZXQlNUIlMjJ0ZXh0JTIyJTVEJTVCMCU1RCUwQWVuZF90aW1lJTIwJTNEJTIwdGltZS50aW1lKCklMEFwcmludChmJTIyRWxhcHNlZCUyMHRpbWUlM0ElMjAlN0JlbmRfdGltZSUyMC0lMjBzdGFydF90aW1lJTNBLjRmJTdEJTIwc2Vjb25kcyUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> time

<span class="hljs-meta">&gt;&gt;&gt; </span>start_time = time.time()
<span class="hljs-meta">&gt;&gt;&gt; </span>text = dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;text&quot;</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>end_time = time.time()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Elapsed time: <span class="hljs-subst">{end_time - start_time:<span class="hljs-number">.4</span>f}</span> seconds&quot;</span>)
Elapsed time: <span class="hljs-number">0.0031</span> seconds

<span class="hljs-meta">&gt;&gt;&gt; </span>start_time = time.time()
<span class="hljs-meta">&gt;&gt;&gt; </span>text = dataset[<span class="hljs-string">&quot;text&quot;</span>][<span class="hljs-number">0</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>end_time = time.time()
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Elapsed time: <span class="hljs-subst">{end_time - start_time:<span class="hljs-number">.4</span>f}</span> seconds&quot;</span>)
Elapsed time: <span class="hljs-number">0.0094</span> seconds`,wrap:!1}}),Z=new O({props:{title:"Slicing",local:"slicing",headingTag:"h3"}}),X=new f({props:{code:"ZGF0YXNldCU1QiUzQTMlNUQlMEElMEFkYXRhc2V0JTVCMyUzQTYlNUQ=",highlighted:`<span class="hljs-comment"># Get the first three rows</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[:<span class="hljs-number">3</span>]
{<span class="hljs-string">&#x27;label&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],
 <span class="hljs-string">&#x27;text&#x27;</span>: [<span class="hljs-string">&#x27;the rock is destined to be the 21st century\\&#x27;s new &quot; conan &quot; and that he\\&#x27;s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .&#x27;</span>,
  <span class="hljs-string">&#x27;the gorgeously elaborate continuation of &quot; the lord of the rings &quot; trilogy is so huge that a column of words cannot adequately describe co-writer/director peter jackson\\&#x27;s expanded vision of j . r . r . tolkien\\&#x27;s middle-earth .&#x27;</span>,
  <span class="hljs-string">&#x27;effective but too-tepid biopic&#x27;</span>]}

<span class="hljs-comment"># Get rows between three and six</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">3</span>:<span class="hljs-number">6</span>]
{<span class="hljs-string">&#x27;label&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],
 <span class="hljs-string">&#x27;text&#x27;</span>: [<span class="hljs-string">&#x27;if you sometimes like to go to the movies to have fun , wasabi is a good place to start .&#x27;</span>,
  <span class="hljs-string">&quot;emerges as something rare , an issue movie that&#x27;s so honest and keenly observed that it doesn&#x27;t feel like one .&quot;</span>,
  <span class="hljs-string">&#x27;the film provides some great insight into the neurotic mindset of all comics -- even those who have reached the absolute top of the game .&#x27;</span>]}`,wrap:!1}}),B=new O({props:{title:"IterableDataset",local:"iterabledataset",headingTag:"h2"}}),q=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBaXRlcmFibGVfZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJldGh6JTJGZm9vZDEwMSUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMjIlMkMlMjBzdHJlYW1pbmclM0RUcnVlKSUwQWZvciUyMGV4YW1wbGUlMjBpbiUyMGl0ZXJhYmxlX2RhdGFzZXQlM0ElMEElMjAlMjAlMjAlMjBwcmludChleGFtcGxlKSUwQSUyMCUyMCUyMCUyMGJyZWFr",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>iterable_dataset = load_dataset(<span class="hljs-string">&quot;ethz/food101&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>, streaming=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> iterable_dataset:
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(example)
<span class="hljs-meta">... </span>    <span class="hljs-keyword">break</span>
{<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at <span class="hljs-number">0x7F0681F5C520</span>&gt;, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>}`,wrap:!1}}),Y=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiklMEFpdGVyYWJsZV9kYXRhc2V0JTIwJTNEJTIwZGF0YXNldC50b19pdGVyYWJsZV9kYXRhc2V0KCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>iterable_dataset = dataset.to_iterable_dataset()`,wrap:!1}}),W=new f({props:{code:"bmV4dChpdGVyKGl0ZXJhYmxlX2RhdGFzZXQpKSUwQSUwQWZvciUyMGV4YW1wbGUlMjBpbiUyMGl0ZXJhYmxlX2RhdGFzZXQlM0ElMEElMjAlMjAlMjAlMjBwcmludChleGFtcGxlKSUwQSUyMCUyMCUyMCUyMGJyZWFr",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(iterable_dataset))
{<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at <span class="hljs-number">0x7F0681F59B50</span>&gt;,
 <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>}

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> iterable_dataset:
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(example)
<span class="hljs-meta">... </span>    <span class="hljs-keyword">break</span>
{<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at <span class="hljs-number">0x7F7479DE82B0</span>&gt;, <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>}`,wrap:!1}}),E=new f({props:{code:"bGlzdChpdGVyYWJsZV9kYXRhc2V0LnRha2UoMykp",highlighted:`<span class="hljs-comment"># Get first three examples</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">list</span>(iterable_dataset.take(<span class="hljs-number">3</span>))
[{<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at <span class="hljs-number">0x7F7479DEE9D0</span>&gt;,
  <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>},
 {<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=512x512 at <span class="hljs-number">0x7F7479DE8190</span>&gt;,
  <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>},
 {<span class="hljs-string">&#x27;image&#x27;</span>: &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=512x383 at <span class="hljs-number">0x7F7479DE8310</span>&gt;,
  <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">6</span>}]`,wrap:!1}}),N=new O({props:{title:"Next steps",local:"next-steps",headingTag:"h2"}}),K=new fs({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/access.mdx"}}),{c(){u=i("meta"),te=n(),ee=i("p"),ae=n(),r(b.$$.fragment),ne=n(),j=i("p"),j.innerHTML=Ye,le=n(),x=i("p"),x.innerHTML=ze,ie=n(),r(w.$$.fragment),pe=n(),$=i("p"),$.innerHTML=Qe,re=n(),y=i("p"),y.innerHTML=We,oe=n(),r(v.$$.fragment),me=n(),r(M.$$.fragment),ce=n(),_=i("p"),_.innerHTML=Pe,de=n(),r(k.$$.fragment),he=n(),J=i("p"),J.innerHTML=Ee,ge=n(),r(T.$$.fragment),fe=n(),U=i("p"),U.textContent=Ve,ue=n(),r(I.$$.fragment),be=n(),C=i("p"),C.textContent=Ne,je=n(),r(G.$$.fragment),xe=n(),R=i("p"),R.textContent=Se,we=n(),r(D.$$.fragment),$e=n(),r(Z.$$.fragment),ye=n(),F=i("p"),F.innerHTML=Ae,ve=n(),r(X.$$.fragment),Me=n(),r(B.$$.fragment),_e=n(),H=i("p"),H.innerHTML=Ke,ke=n(),r(q.$$.fragment),Je=n(),L=i("p"),L.innerHTML=Oe,Te=n(),r(Y.$$.fragment),Ue=n(),z=i("p"),z.innerHTML=es,Ie=n(),Q=i("p"),Q.innerHTML=ss,Ce=n(),r(W.$$.fragment),Ge=n(),P=i("p"),P.innerHTML=ts,Re=n(),r(E.$$.fragment),De=n(),V=i("p"),V.innerHTML=as,Ze=n(),r(N.$$.fragment),Fe=n(),S=i("p"),S.innerHTML=ns,Xe=n(),A=i("p"),A.innerHTML=ls,Be=n(),r(K.$$.fragment),He=n(),se=i("p"),this.h()},l(e){const s=hs("svelte-u9bgzb",document.head);u=p(s,"META",{name:!0,content:!0}),s.forEach(t),te=l(e),ee=p(e,"P",{}),is(ee).forEach(t),ae=l(e),o(b.$$.fragment,e),ne=l(e),j=p(e,"P",{"data-svelte-h":!0}),m(j)!=="svelte-ial69w"&&(j.innerHTML=Ye),le=l(e),x=p(e,"P",{"data-svelte-h":!0}),m(x)!=="svelte-1i1kxj7"&&(x.innerHTML=ze),ie=l(e),o(w.$$.fragment,e),pe=l(e),$=p(e,"P",{"data-svelte-h":!0}),m($)!=="svelte-1scv3s5"&&($.innerHTML=Qe),re=l(e),y=p(e,"P",{"data-svelte-h":!0}),m(y)!=="svelte-jz751l"&&(y.innerHTML=We),oe=l(e),o(v.$$.fragment,e),me=l(e),o(M.$$.fragment,e),ce=l(e),_=p(e,"P",{"data-svelte-h":!0}),m(_)!=="svelte-3dv9gd"&&(_.innerHTML=Pe),de=l(e),o(k.$$.fragment,e),he=l(e),J=p(e,"P",{"data-svelte-h":!0}),m(J)!=="svelte-18jqw8v"&&(J.innerHTML=Ee),ge=l(e),o(T.$$.fragment,e),fe=l(e),U=p(e,"P",{"data-svelte-h":!0}),m(U)!=="svelte-18othzs"&&(U.textContent=Ve),ue=l(e),o(I.$$.fragment,e),be=l(e),C=p(e,"P",{"data-svelte-h":!0}),m(C)!=="svelte-1gzsqvo"&&(C.textContent=Ne),je=l(e),o(G.$$.fragment,e),xe=l(e),R=p(e,"P",{"data-svelte-h":!0}),m(R)!=="svelte-158alym"&&(R.textContent=Se),we=l(e),o(D.$$.fragment,e),$e=l(e),o(Z.$$.fragment,e),ye=l(e),F=p(e,"P",{"data-svelte-h":!0}),m(F)!=="svelte-1gt5d64"&&(F.innerHTML=Ae),ve=l(e),o(X.$$.fragment,e),Me=l(e),o(B.$$.fragment,e),_e=l(e),H=p(e,"P",{"data-svelte-h":!0}),m(H)!=="svelte-1gx0ma1"&&(H.innerHTML=Ke),ke=l(e),o(q.$$.fragment,e),Je=l(e),L=p(e,"P",{"data-svelte-h":!0}),m(L)!=="svelte-1kf7uhl"&&(L.innerHTML=Oe),Te=l(e),o(Y.$$.fragment,e),Ue=l(e),z=p(e,"P",{"data-svelte-h":!0}),m(z)!=="svelte-1v1bhly"&&(z.innerHTML=es),Ie=l(e),Q=p(e,"P",{"data-svelte-h":!0}),m(Q)!=="svelte-xpps87"&&(Q.innerHTML=ss),Ce=l(e),o(W.$$.fragment,e),Ge=l(e),P=p(e,"P",{"data-svelte-h":!0}),m(P)!=="svelte-12n7bws"&&(P.innerHTML=ts),Re=l(e),o(E.$$.fragment,e),De=l(e),V=p(e,"P",{"data-svelte-h":!0}),m(V)!=="svelte-1mszhjh"&&(V.innerHTML=as),Ze=l(e),o(N.$$.fragment,e),Fe=l(e),S=p(e,"P",{"data-svelte-h":!0}),m(S)!=="svelte-51y7bk"&&(S.innerHTML=ns),Xe=l(e),A=p(e,"P",{"data-svelte-h":!0}),m(A)!=="svelte-z25qao"&&(A.innerHTML=ls),Be=l(e),o(K.$$.fragment,e),He=l(e),se=p(e,"P",{}),is(se).forEach(t),this.h()},h(){ps(u,"name","hf:doc:metadata"),ps(u,"content",bs)},m(e,s){gs(document.head,u),a(e,te,s),a(e,ee,s),a(e,ae,s),c(b,e,s),a(e,ne,s),a(e,j,s),a(e,le,s),a(e,x,s),a(e,ie,s),c(w,e,s),a(e,pe,s),a(e,$,s),a(e,re,s),a(e,y,s),a(e,oe,s),c(v,e,s),a(e,me,s),c(M,e,s),a(e,ce,s),a(e,_,s),a(e,de,s),c(k,e,s),a(e,he,s),a(e,J,s),a(e,ge,s),c(T,e,s),a(e,fe,s),a(e,U,s),a(e,ue,s),c(I,e,s),a(e,be,s),a(e,C,s),a(e,je,s),c(G,e,s),a(e,xe,s),a(e,R,s),a(e,we,s),c(D,e,s),a(e,$e,s),c(Z,e,s),a(e,ye,s),a(e,F,s),a(e,ve,s),c(X,e,s),a(e,Me,s),c(B,e,s),a(e,_e,s),a(e,H,s),a(e,ke,s),c(q,e,s),a(e,Je,s),a(e,L,s),a(e,Te,s),c(Y,e,s),a(e,Ue,s),a(e,z,s),a(e,Ie,s),a(e,Q,s),a(e,Ce,s),c(W,e,s),a(e,Ge,s),a(e,P,s),a(e,Re,s),c(E,e,s),a(e,De,s),a(e,V,s),a(e,Ze,s),c(N,e,s),a(e,Fe,s),a(e,S,s),a(e,Xe,s),a(e,A,s),a(e,Be,s),c(K,e,s),a(e,He,s),a(e,se,s),qe=!0},p:os,i(e){qe||(d(b.$$.fragment,e),d(w.$$.fragment,e),d(v.$$.fragment,e),d(M.$$.fragment,e),d(k.$$.fragment,e),d(T.$$.fragment,e),d(I.$$.fragment,e),d(G.$$.fragment,e),d(D.$$.fragment,e),d(Z.$$.fragment,e),d(X.$$.fragment,e),d(B.$$.fragment,e),d(q.$$.fragment,e),d(Y.$$.fragment,e),d(W.$$.fragment,e),d(E.$$.fragment,e),d(N.$$.fragment,e),d(K.$$.fragment,e),qe=!0)},o(e){h(b.$$.fragment,e),h(w.$$.fragment,e),h(v.$$.fragment,e),h(M.$$.fragment,e),h(k.$$.fragment,e),h(T.$$.fragment,e),h(I.$$.fragment,e),h(G.$$.fragment,e),h(D.$$.fragment,e),h(Z.$$.fragment,e),h(X.$$.fragment,e),h(B.$$.fragment,e),h(q.$$.fragment,e),h(Y.$$.fragment,e),h(W.$$.fragment,e),h(E.$$.fragment,e),h(N.$$.fragment,e),h(K.$$.fragment,e),qe=!1},d(e){e&&(t(te),t(ee),t(ae),t(ne),t(j),t(le),t(x),t(ie),t(pe),t($),t(re),t(y),t(oe),t(me),t(ce),t(_),t(de),t(he),t(J),t(ge),t(fe),t(U),t(ue),t(be),t(C),t(je),t(xe),t(R),t(we),t($e),t(ye),t(F),t(ve),t(Me),t(_e),t(H),t(ke),t(Je),t(L),t(Te),t(Ue),t(z),t(Ie),t(Q),t(Ce),t(Ge),t(P),t(Re),t(De),t(V),t(Ze),t(Fe),t(S),t(Xe),t(A),t(Be),t(He),t(se)),t(u),g(b,e),g(w,e),g(v,e),g(M,e),g(k,e),g(T,e),g(I,e),g(G,e),g(D,e),g(Z,e),g(X,e),g(B,e),g(q,e),g(Y,e),g(W,e),g(E,e),g(N,e),g(K,e)}}}const bs='{"title":"Know your dataset","local":"know-your-dataset","sections":[{"title":"Dataset","local":"dataset","sections":[{"title":"Indexing","local":"indexing","sections":[],"depth":3},{"title":"Slicing","local":"slicing","sections":[],"depth":3}],"depth":2},{"title":"IterableDataset","local":"iterabledataset","sections":[],"depth":2},{"title":"Next steps","local":"next-steps","sections":[],"depth":2}],"depth":1}';function js(Le){return ms(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class vs extends cs{constructor(u){super(),ds(this,u,js,us,rs,{})}}export{vs as component};
