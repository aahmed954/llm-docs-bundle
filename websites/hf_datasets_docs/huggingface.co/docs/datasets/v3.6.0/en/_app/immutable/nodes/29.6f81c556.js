import{s as Ws,o as Hs,n as qs}from"../chunks/scheduler.bdbef820.js";import{S as Ys,i as Vs,g as p,s as n,r,A as Bs,h as o,f as a,c as l,j as zs,u as d,x as f,k as Ls,y as Es,a as e,v as c,d as m,t as h,w as g}from"../chunks/index.c0aea24a.js";import{T as Ps}from"../chunks/Tip.31005f7d.js";import{C as y}from"../chunks/CodeBlock.e814ab8d.js";import{H as N,E as Ds}from"../chunks/index.89e522f3.js";function Ns(S){let i,b="For security reasons, ðŸ¤— Datasets do not allow running dataset loading scripts by default, and you have to pass <code>trust_remote_code=True</code> to load datasets that require running a dataset script.";return{c(){i=p("p"),i.innerHTML=b},l(u){i=o(u,"P",{"data-svelte-h":!0}),f(i)!=="svelte-1adalis"&&(i.innerHTML=b)},m(u,P){e(u,i,P)},p:qs,d(u){u&&a(i)}}}function Ss(S){let i,b,u,P,w,Q,_,Js='Finding high-quality datasets that are reproducible and accessible can be difficult. One of ðŸ¤— Datasets main goals is to provide a simple way to load a dataset of any format or type. The easiest way to get started is to discover an existing dataset on the <a href="https://huggingface.co/datasets" rel="nofollow">Hugging Face Hub</a> - a community-driven collection of datasets for tasks in NLP, computer vision, and audio - and use ðŸ¤— Datasets to download and generate the dataset.',A,$,Ms='This tutorial uses the <a href="https://huggingface.co/datasets/rotten_tomatoes" rel="nofollow">rotten_tomatoes</a> and <a href="https://huggingface.co/datasets/PolyAI/minds14" rel="nofollow">MInDS-14</a> datasets, but feel free to load any dataset you want and follow along. Head over to the Hub now and find a dataset for your task!',K,x,O,J,Ts='Before you take the time to download a dataset, itâ€™s often helpful to quickly get some general information about a dataset. A datasetâ€™s information is stored inside <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetInfo">DatasetInfo</a> and can include information such as the dataset description, features, and dataset size.',ss,M,vs='Use the <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset_builder">load_dataset_builder()</a> function to load a dataset builder and inspect a datasetâ€™s attributes without committing to downloading it:',ts,T,as,v,Zs='If youâ€™re happy with the dataset, then load it with <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',es,Z,ns,k,ls,R,ks='A split is a specific subset of a dataset like <code>train</code> and <code>test</code>. List a datasetâ€™s split names with the <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.get_dataset_split_names">get_dataset_split_names()</a> function:',is,X,ps,G,Rs='Then you can load a specific split with the <code>split</code> parameter. Loading a dataset <code>split</code> returns a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> object:',os,F,rs,I,Xs='If you donâ€™t specify a <code>split</code>, ðŸ¤— Datasets returns a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.DatasetDict">DatasetDict</a> object instead:',ds,U,cs,C,ms,z,Gs='Some datasets contain several sub-datasets. For example, the <a href="https://huggingface.co/datasets/PolyAI/minds14" rel="nofollow">MInDS-14</a> dataset has several sub-datasets, each one containing audio data in a different language. These sub-datasets are known as <em>configurations</em> or <em>subsets</em>, and you must explicitly select one when loading the dataset. If you donâ€™t provide a configuration name, ðŸ¤— Datasets will raise a <code>ValueError</code> and remind you to choose a configuration.',hs,L,Fs='Use the <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.get_dataset_config_names">get_dataset_config_names()</a> function to retrieve a list of all the possible configurations available to your dataset:',gs,W,fs,H,Is="Then load the configuration you want:",us,q,js,Y,ys,V,Us="Certain datasets repositories contain a loading script with the Python code used to generate the dataset. All files and code uploaded to the Hub are scanned for malware (refer to the Hub security documentation for more information), but you should still review the dataset loading scripts and authors to avoid executing malicious code on your machine. You should set <code>trust_remote_code=True</code> to use a dataset with a loading script, or you will get an error:",bs,B,ws,j,_s,E,$s,D,xs;return w=new N({props:{title:"Load a dataset from the Hub",local:"load-a-dataset-from-the-hub",headingTag:"h1"}}),x=new N({props:{title:"Load a dataset",local:"load-a-dataset",headingTag:"h2"}}),T=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0X2J1aWxkZXIlMEFkc19idWlsZGVyJTIwJTNEJTIwbG9hZF9kYXRhc2V0X2J1aWxkZXIoJTIyY29ybmVsbC1tb3ZpZS1yZXZpZXctZGF0YSUyRnJvdHRlbl90b21hdG9lcyUyMiklMEElMEFkc19idWlsZGVyLmluZm8uZGVzY3JpcHRpb24lMEElMEFkc19idWlsZGVyLmluZm8uZmVhdHVyZXM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset_builder
<span class="hljs-meta">&gt;&gt;&gt; </span>ds_builder = load_dataset_builder(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>)

<span class="hljs-comment"># Inspect dataset description</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds_builder.info.description
Movie Review Dataset. This <span class="hljs-keyword">is</span> a dataset of containing <span class="hljs-number">5</span>,<span class="hljs-number">331</span> positive <span class="hljs-keyword">and</span> <span class="hljs-number">5</span>,<span class="hljs-number">331</span> negative processed sentences <span class="hljs-keyword">from</span> Rotten Tomatoes movie reviews. This data was first used <span class="hljs-keyword">in</span> Bo Pang <span class="hljs-keyword">and</span> Lillian Lee, \`\`Seeing stars: Exploiting <span class="hljs-keyword">class</span> <span class="hljs-title class_">relationships</span> <span class="hljs-keyword">for</span> sentiment categorization <span class="hljs-keyword">with</span> respect to rating scales.<span class="hljs-string">&#x27;&#x27;</span>, Proceedings of the ACL, <span class="hljs-number">2005.</span>

<span class="hljs-comment"># Inspect dataset features</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds_builder.info.features
{<span class="hljs-string">&#x27;label&#x27;</span>: ClassLabel(names=[<span class="hljs-string">&#x27;neg&#x27;</span>, <span class="hljs-string">&#x27;pos&#x27;</span>], <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
 <span class="hljs-string">&#x27;text&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>)}`,wrap:!1}}),Z=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),k=new N({props:{title:"Splits",local:"splits",headingTag:"h2"}}),X=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfc3BsaXRfbmFtZXMlMEElMEFnZXRfZGF0YXNldF9zcGxpdF9uYW1lcyglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_split_names

<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_split_names(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>)
[<span class="hljs-string">&#x27;train&#x27;</span>, <span class="hljs-string">&#x27;validation&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>]`,wrap:!1}}),F=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiklMEFkYXRhc2V0",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset
Dataset({
    features: [<span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-string">&#x27;label&#x27;</span>],
    num_rows: <span class="hljs-number">8530</span>
})`,wrap:!1}}),U=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjb3JuZWxsLW1vdmllLXJldmlldy1kYXRhJTJGcm90dGVuX3RvbWF0b2VzJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;cornell-movie-review-data/rotten_tomatoes&quot;</span>)
DatasetDict({
    train: Dataset({
        features: [<span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-string">&#x27;label&#x27;</span>],
        num_rows: <span class="hljs-number">8530</span>
    })
    validation: Dataset({
        features: [<span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-string">&#x27;label&#x27;</span>],
        num_rows: <span class="hljs-number">1066</span>
    })
    test: Dataset({
        features: [<span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-string">&#x27;label&#x27;</span>],
        num_rows: <span class="hljs-number">1066</span>
    })
})`,wrap:!1}}),C=new N({props:{title:"Configurations",local:"configurations",headingTag:"h2"}}),W=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfY29uZmlnX25hbWVzJTBBJTBBY29uZmlncyUyMCUzRCUyMGdldF9kYXRhc2V0X2NvbmZpZ19uYW1lcyglMjJQb2x5QUklMkZtaW5kczE0JTIyKSUwQXByaW50KGNvbmZpZ3Mp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_config_names

<span class="hljs-meta">&gt;&gt;&gt; </span>configs = get_dataset_config_names(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(configs)
[<span class="hljs-string">&#x27;cs-CZ&#x27;</span>, <span class="hljs-string">&#x27;de-DE&#x27;</span>, <span class="hljs-string">&#x27;en-AU&#x27;</span>, <span class="hljs-string">&#x27;en-GB&#x27;</span>, <span class="hljs-string">&#x27;en-US&#x27;</span>, <span class="hljs-string">&#x27;es-ES&#x27;</span>, <span class="hljs-string">&#x27;fr-FR&#x27;</span>, <span class="hljs-string">&#x27;it-IT&#x27;</span>, <span class="hljs-string">&#x27;ko-KR&#x27;</span>, <span class="hljs-string">&#x27;nl-NL&#x27;</span>, <span class="hljs-string">&#x27;pl-PL&#x27;</span>, <span class="hljs-string">&#x27;pt-PT&#x27;</span>, <span class="hljs-string">&#x27;ru-RU&#x27;</span>, <span class="hljs-string">&#x27;zh-CN&#x27;</span>, <span class="hljs-string">&#x27;all&#x27;</span>]`,wrap:!1}}),q=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBbWluZHNGUiUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJQb2x5QUklMkZtaW5kczE0JTIyJTJDJTIwJTIyZnItRlIlMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>mindsFR = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;fr-FR&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),Y=new N({props:{title:"Remote code",local:"remote-code",headingTag:"h2"}}),B=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwZ2V0X2RhdGFzZXRfY29uZmlnX25hbWVzJTJDJTIwZ2V0X2RhdGFzZXRfc3BsaXRfbmFtZXMlMkMlMjBsb2FkX2RhdGFzZXQlMEElMEFjNCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjNCUyMiUyQyUyMCUyMmVuJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiUyQyUyMHRydXN0X3JlbW90ZV9jb2RlJTNEVHJ1ZSklMEFnZXRfZGF0YXNldF9jb25maWdfbmFtZXMoJTIyYzQlMjIlMkMlMjB0cnVzdF9yZW1vdGVfY29kZSUzRFRydWUpJTBBZ2V0X2RhdGFzZXRfc3BsaXRfbmFtZXMoJTIyYzQlMjIlMkMlMjAlMjJlbiUyMiUyQyUyMHRydXN0X3JlbW90ZV9jb2RlJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> get_dataset_config_names, get_dataset_split_names, load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>c4 = load_dataset(<span class="hljs-string">&quot;c4&quot;</span>, <span class="hljs-string">&quot;en&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>, trust_remote_code=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_config_names(<span class="hljs-string">&quot;c4&quot;</span>, trust_remote_code=<span class="hljs-literal">True</span>)
[<span class="hljs-string">&#x27;en&#x27;</span>, <span class="hljs-string">&#x27;realnewslike&#x27;</span>, <span class="hljs-string">&#x27;en.noblocklist&#x27;</span>, <span class="hljs-string">&#x27;en.noclean&#x27;</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>get_dataset_split_names(<span class="hljs-string">&quot;c4&quot;</span>, <span class="hljs-string">&quot;en&quot;</span>, trust_remote_code=<span class="hljs-literal">True</span>)
[<span class="hljs-string">&#x27;train&#x27;</span>, <span class="hljs-string">&#x27;validation&#x27;</span>]`,wrap:!1}}),j=new Ps({props:{warning:"true",$$slots:{default:[Ns]},$$scope:{ctx:S}}}),E=new Ds({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/load_hub.mdx"}}),{c(){i=p("meta"),b=n(),u=p("p"),P=n(),r(w.$$.fragment),Q=n(),_=p("p"),_.innerHTML=Js,A=n(),$=p("p"),$.innerHTML=Ms,K=n(),r(x.$$.fragment),O=n(),J=p("p"),J.innerHTML=Ts,ss=n(),M=p("p"),M.innerHTML=vs,ts=n(),r(T.$$.fragment),as=n(),v=p("p"),v.innerHTML=Zs,es=n(),r(Z.$$.fragment),ns=n(),r(k.$$.fragment),ls=n(),R=p("p"),R.innerHTML=ks,is=n(),r(X.$$.fragment),ps=n(),G=p("p"),G.innerHTML=Rs,os=n(),r(F.$$.fragment),rs=n(),I=p("p"),I.innerHTML=Xs,ds=n(),r(U.$$.fragment),cs=n(),r(C.$$.fragment),ms=n(),z=p("p"),z.innerHTML=Gs,hs=n(),L=p("p"),L.innerHTML=Fs,gs=n(),r(W.$$.fragment),fs=n(),H=p("p"),H.textContent=Is,us=n(),r(q.$$.fragment),js=n(),r(Y.$$.fragment),ys=n(),V=p("p"),V.innerHTML=Us,bs=n(),r(B.$$.fragment),ws=n(),r(j.$$.fragment),_s=n(),r(E.$$.fragment),$s=n(),D=p("p"),this.h()},l(s){const t=Bs("svelte-u9bgzb",document.head);i=o(t,"META",{name:!0,content:!0}),t.forEach(a),b=l(s),u=o(s,"P",{}),zs(u).forEach(a),P=l(s),d(w.$$.fragment,s),Q=l(s),_=o(s,"P",{"data-svelte-h":!0}),f(_)!=="svelte-9qr6ee"&&(_.innerHTML=Js),A=l(s),$=o(s,"P",{"data-svelte-h":!0}),f($)!=="svelte-1nd3fhb"&&($.innerHTML=Ms),K=l(s),d(x.$$.fragment,s),O=l(s),J=o(s,"P",{"data-svelte-h":!0}),f(J)!=="svelte-181z9ms"&&(J.innerHTML=Ts),ss=l(s),M=o(s,"P",{"data-svelte-h":!0}),f(M)!=="svelte-6848go"&&(M.innerHTML=vs),ts=l(s),d(T.$$.fragment,s),as=l(s),v=o(s,"P",{"data-svelte-h":!0}),f(v)!=="svelte-hrcq1u"&&(v.innerHTML=Zs),es=l(s),d(Z.$$.fragment,s),ns=l(s),d(k.$$.fragment,s),ls=l(s),R=o(s,"P",{"data-svelte-h":!0}),f(R)!=="svelte-sfmwnz"&&(R.innerHTML=ks),is=l(s),d(X.$$.fragment,s),ps=l(s),G=o(s,"P",{"data-svelte-h":!0}),f(G)!=="svelte-8nujn6"&&(G.innerHTML=Rs),os=l(s),d(F.$$.fragment,s),rs=l(s),I=o(s,"P",{"data-svelte-h":!0}),f(I)!=="svelte-ypdmil"&&(I.innerHTML=Xs),ds=l(s),d(U.$$.fragment,s),cs=l(s),d(C.$$.fragment,s),ms=l(s),z=o(s,"P",{"data-svelte-h":!0}),f(z)!=="svelte-2wgw8k"&&(z.innerHTML=Gs),hs=l(s),L=o(s,"P",{"data-svelte-h":!0}),f(L)!=="svelte-95e5s5"&&(L.innerHTML=Fs),gs=l(s),d(W.$$.fragment,s),fs=l(s),H=o(s,"P",{"data-svelte-h":!0}),f(H)!=="svelte-avfjb"&&(H.textContent=Is),us=l(s),d(q.$$.fragment,s),js=l(s),d(Y.$$.fragment,s),ys=l(s),V=o(s,"P",{"data-svelte-h":!0}),f(V)!=="svelte-ffeuwm"&&(V.innerHTML=Us),bs=l(s),d(B.$$.fragment,s),ws=l(s),d(j.$$.fragment,s),_s=l(s),d(E.$$.fragment,s),$s=l(s),D=o(s,"P",{}),zs(D).forEach(a),this.h()},h(){Ls(i,"name","hf:doc:metadata"),Ls(i,"content",Qs)},m(s,t){Es(document.head,i),e(s,b,t),e(s,u,t),e(s,P,t),c(w,s,t),e(s,Q,t),e(s,_,t),e(s,A,t),e(s,$,t),e(s,K,t),c(x,s,t),e(s,O,t),e(s,J,t),e(s,ss,t),e(s,M,t),e(s,ts,t),c(T,s,t),e(s,as,t),e(s,v,t),e(s,es,t),c(Z,s,t),e(s,ns,t),c(k,s,t),e(s,ls,t),e(s,R,t),e(s,is,t),c(X,s,t),e(s,ps,t),e(s,G,t),e(s,os,t),c(F,s,t),e(s,rs,t),e(s,I,t),e(s,ds,t),c(U,s,t),e(s,cs,t),c(C,s,t),e(s,ms,t),e(s,z,t),e(s,hs,t),e(s,L,t),e(s,gs,t),c(W,s,t),e(s,fs,t),e(s,H,t),e(s,us,t),c(q,s,t),e(s,js,t),c(Y,s,t),e(s,ys,t),e(s,V,t),e(s,bs,t),c(B,s,t),e(s,ws,t),c(j,s,t),e(s,_s,t),c(E,s,t),e(s,$s,t),e(s,D,t),xs=!0},p(s,[t]){const Cs={};t&2&&(Cs.$$scope={dirty:t,ctx:s}),j.$set(Cs)},i(s){xs||(m(w.$$.fragment,s),m(x.$$.fragment,s),m(T.$$.fragment,s),m(Z.$$.fragment,s),m(k.$$.fragment,s),m(X.$$.fragment,s),m(F.$$.fragment,s),m(U.$$.fragment,s),m(C.$$.fragment,s),m(W.$$.fragment,s),m(q.$$.fragment,s),m(Y.$$.fragment,s),m(B.$$.fragment,s),m(j.$$.fragment,s),m(E.$$.fragment,s),xs=!0)},o(s){h(w.$$.fragment,s),h(x.$$.fragment,s),h(T.$$.fragment,s),h(Z.$$.fragment,s),h(k.$$.fragment,s),h(X.$$.fragment,s),h(F.$$.fragment,s),h(U.$$.fragment,s),h(C.$$.fragment,s),h(W.$$.fragment,s),h(q.$$.fragment,s),h(Y.$$.fragment,s),h(B.$$.fragment,s),h(j.$$.fragment,s),h(E.$$.fragment,s),xs=!1},d(s){s&&(a(b),a(u),a(P),a(Q),a(_),a(A),a($),a(K),a(O),a(J),a(ss),a(M),a(ts),a(as),a(v),a(es),a(ns),a(ls),a(R),a(is),a(ps),a(G),a(os),a(rs),a(I),a(ds),a(cs),a(ms),a(z),a(hs),a(L),a(gs),a(fs),a(H),a(us),a(js),a(ys),a(V),a(bs),a(ws),a(_s),a($s),a(D)),a(i),g(w,s),g(x,s),g(T,s),g(Z,s),g(k,s),g(X,s),g(F,s),g(U,s),g(C,s),g(W,s),g(q,s),g(Y,s),g(B,s),g(j,s),g(E,s)}}}const Qs='{"title":"Load a dataset from the Hub","local":"load-a-dataset-from-the-hub","sections":[{"title":"Load a dataset","local":"load-a-dataset","sections":[],"depth":2},{"title":"Splits","local":"splits","sections":[],"depth":2},{"title":"Configurations","local":"configurations","sections":[],"depth":2},{"title":"Remote code","local":"remote-code","sections":[],"depth":2}],"depth":1}';function As(S){return Hs(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class et extends Ys{constructor(i){super(),Vs(this,i,As,Ss,Ws,{})}}export{et as component};
