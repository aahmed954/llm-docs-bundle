import{s as ws,n as Js,o as Us}from"../chunks/scheduler.bdbef820.js";import{S as _s,i as $s,g as p,s as n,r as o,A as Is,h as r,f as t,c as l,j as bs,u as c,x as i,k as Ts,y as Cs,a as e,v as m,d,t as h,w as u}from"../chunks/index.c0aea24a.js";import{C as x}from"../chunks/CodeBlock.e814ab8d.js";import{H as os,E as ks}from"../chunks/index.89e522f3.js";function Qs(cs){let f,z,D,H,M,Y,j,is=`This document is a quick introduction to using <code>datasets</code> with Pandas, with a particular focus on how to process
datasets using Pandas functions, and how to convert a dataset to Pandas or from Pandas.`,B,g,ms="This is particularly useful as it allows fast operations, since <code>datasets</code> uses PyArrow under the hood and PyArrow is well integrated with Pandas.",E,y,L,b,ds="By default, datasets return regular Python objects: integers, floats, strings, lists, etc.",A,T,hs='To get Pandas DataFrames or Series instead, you can set the format of the dataset to <code>pandas</code> using <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.with_format">Dataset.with_format()</a>:',F,w,S,J,us="This also works for <code>IterableDataset</code> objects obtained e.g. using <code>load_dataset(..., streaming=True)</code>:",N,U,W,_,X,$,fs='Pandas functions are generally faster than regular hand-written python functions, and therefore they are a good option to optimize data processing. You can use Pandas functions to process a dataset in <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.map">Dataset.map()</a> or <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.filter">Dataset.filter()</a>:',V,I,K,C,Ms="We use <code>batched=True</code> because it is faster to process batches of data in Pandas rather than row by row. Itâ€™s also possible to use <code>batch_size=</code> in <code>map()</code> to set the size of each <code>df</code>.",O,k,js='This also works for <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.map">IterableDataset.map()</a> and <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.filter">IterableDataset.filter()</a>.',ss,Q,as,R,gs='To import data from Pandas, you can use <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_pandas">Dataset.from_pandas()</a>:',ts,v,es,G,ys='And you can use <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.to_pandas">Dataset.to_pandas()</a> to export a Dataset to a Pandas DataFrame:',ns,q,ls,Z,ps,P,rs;return M=new os({props:{title:"Use with Pandas",local:"use-with-pandas",headingTag:"h1"}}),y=new os({props:{title:"Dataset format",local:"dataset-format",headingTag:"h2"}}),w=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWRhdGElMjAlM0QlMjAlN0IlMjJjb2xfMCUyMiUzQSUyMCU1QiUyMmElMjIlMkMlMjAlMjJiJTIyJTJDJTIwJTIyYyUyMiUyQyUyMCUyMmQlMjIlNUQlMkMlMjAlMjJjb2xfMSUyMiUzQSUyMCU1QjAuJTJDJTIwMC4lMkMlMjAxLiUyQyUyMDEuJTVEJTdEJTBBZHMlMjAlM0QlMjBEYXRhc2V0LmZyb21fZGljdChkYXRhKSUwQWRzJTIwJTNEJTIwZHMud2l0aF9mb3JtYXQoJTIycGFuZGFzJTIyKSUwQWRzJTVCMCU1RCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMyUyMHBkLkRhdGFGcmFtZSUwQWRzJTVCJTNBMiU1RCUyMCUyMCUyMCUyMCUyMCUyMCUyMyUyMHBkLkRhdGFGcmFtZSUwQWRzJTVCJTIyZGF0YSUyMiU1RCUyMCUyMCUyMyUyMHBkLlNlcmllcw==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>data = {<span class="hljs-string">&quot;col_0&quot;</span>: [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>], <span class="hljs-string">&quot;col_1&quot;</span>: [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>]}
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = Dataset.from_dict(data)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.with_format(<span class="hljs-string">&quot;pandas&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds[<span class="hljs-number">0</span>]       <span class="hljs-comment"># pd.DataFrame</span>
  col_0  col_1
<span class="hljs-number">0</span>     a    <span class="hljs-number">0.0</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds[:<span class="hljs-number">2</span>]      <span class="hljs-comment"># pd.DataFrame</span>
  col_0  col_1
<span class="hljs-number">0</span>     a    <span class="hljs-number">0.0</span>
<span class="hljs-number">1</span>     b    <span class="hljs-number">0.0</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds[<span class="hljs-string">&quot;data&quot;</span>]  <span class="hljs-comment"># pd.Series</span>
<span class="hljs-number">0</span>    a
<span class="hljs-number">1</span>    b
<span class="hljs-number">2</span>    c
<span class="hljs-number">3</span>    d
Name: col_0, dtype: <span class="hljs-built_in">object</span>`,wrap:!1}}),U=new x({props:{code:"ZHMlMjAlM0QlMjBkcy53aXRoX2Zvcm1hdCglMjJwYW5kYXMlMjIpJTBBZm9yJTIwZGYlMjBpbiUyMGRzLml0ZXIoYmF0Y2hfc2l6ZSUzRDIpJTNBJTBBJTIwJTIwJTIwJTIwcHJpbnQoZGYpJTBBJTIwJTIwJTIwJTIwYnJlYWs=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.with_format(<span class="hljs-string">&quot;pandas&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> df <span class="hljs-keyword">in</span> ds.<span class="hljs-built_in">iter</span>(batch_size=<span class="hljs-number">2</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(df)
<span class="hljs-meta">... </span>    <span class="hljs-keyword">break</span>
  col_0  col_1
<span class="hljs-number">0</span>     a    <span class="hljs-number">0.0</span>
<span class="hljs-number">1</span>     b    <span class="hljs-number">0.0</span>`,wrap:!1}}),_=new os({props:{title:"Process data",local:"process-data",headingTag:"h2"}}),I=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWRhdGElMjAlM0QlMjAlN0IlMjJjb2xfMCUyMiUzQSUyMCU1QiUyMmElMjIlMkMlMjAlMjJiJTIyJTJDJTIwJTIyYyUyMiUyQyUyMCUyMmQlMjIlNUQlMkMlMjAlMjJjb2xfMSUyMiUzQSUyMCU1QjAuJTJDJTIwMC4lMkMlMjAxLiUyQyUyMDEuJTVEJTdEJTBBZHMlMjAlM0QlMjBEYXRhc2V0LmZyb21fZGljdChkYXRhKSUwQWRzJTIwJTNEJTIwZHMud2l0aF9mb3JtYXQoJTIycGFuZGFzJTIyKSUwQWRzJTIwJTNEJTIwZHMubWFwKGxhbWJkYSUyMGRmJTNBJTIwZGYuYXNzaWduKGNvbF8yJTNEZGYuY29sXzElMjAlMkIlMjAxKSUyQyUyMGJhdGNoZWQlM0RUcnVlKSUwQWRzJTVCJTNBMiU1RCUwQWRzJTIwJTNEJTIwZHMuZmlsdGVyKGxhbWJkYSUyMGRmJTNBJTIwZGYuY29sXzAlMjAlM0QlM0QlMjAlMjJiJTIyJTJDJTIwYmF0Y2hlZCUzRFRydWUpJTBBZHMlNUIwJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>data = {<span class="hljs-string">&quot;col_0&quot;</span>: [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>], <span class="hljs-string">&quot;col_1&quot;</span>: [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>]}
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = Dataset.from_dict(data)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.with_format(<span class="hljs-string">&quot;pandas&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> df: df.assign(col_2=df.col_1 + <span class="hljs-number">1</span>), batched=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds[:<span class="hljs-number">2</span>]
  col_0  col_1  col_2
<span class="hljs-number">0</span>     a    <span class="hljs-number">0.0</span>    <span class="hljs-number">1.0</span>
<span class="hljs-number">1</span>     b    <span class="hljs-number">0.0</span>    <span class="hljs-number">1.0</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.<span class="hljs-built_in">filter</span>(<span class="hljs-keyword">lambda</span> df: df.col_0 == <span class="hljs-string">&quot;b&quot;</span>, batched=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>ds[<span class="hljs-number">0</span>]
  col_0  col_1  col_2
<span class="hljs-number">0</span>     b    <span class="hljs-number">0.0</span>    <span class="hljs-number">1.0</span>`,wrap:!1}}),Q=new os({props:{title:"Import or Export from Pandas",local:"import-or-export-from-pandas",headingTag:"h2"}}),v=new x({props:{code:"ZHMlMjAlM0QlMjBEYXRhc2V0LmZyb21fcGFuZGFzKGRmKQ==",highlighted:"ds = Dataset.from_pandas(df)",wrap:!1}}),q=new x({props:{code:"ZGYlMjAlM0QlMjBEYXRhc2V0LnRvX3BhbmRhcygp",highlighted:"df = Dataset.to_pandas()",wrap:!1}}),Z=new ks({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/use_with_pandas.mdx"}}),{c(){f=p("meta"),z=n(),D=p("p"),H=n(),o(M.$$.fragment),Y=n(),j=p("p"),j.innerHTML=is,B=n(),g=p("p"),g.innerHTML=ms,E=n(),o(y.$$.fragment),L=n(),b=p("p"),b.textContent=ds,A=n(),T=p("p"),T.innerHTML=hs,F=n(),o(w.$$.fragment),S=n(),J=p("p"),J.innerHTML=us,N=n(),o(U.$$.fragment),W=n(),o(_.$$.fragment),X=n(),$=p("p"),$.innerHTML=fs,V=n(),o(I.$$.fragment),K=n(),C=p("p"),C.innerHTML=Ms,O=n(),k=p("p"),k.innerHTML=js,ss=n(),o(Q.$$.fragment),as=n(),R=p("p"),R.innerHTML=gs,ts=n(),o(v.$$.fragment),es=n(),G=p("p"),G.innerHTML=ys,ns=n(),o(q.$$.fragment),ls=n(),o(Z.$$.fragment),ps=n(),P=p("p"),this.h()},l(s){const a=Is("svelte-u9bgzb",document.head);f=r(a,"META",{name:!0,content:!0}),a.forEach(t),z=l(s),D=r(s,"P",{}),bs(D).forEach(t),H=l(s),c(M.$$.fragment,s),Y=l(s),j=r(s,"P",{"data-svelte-h":!0}),i(j)!=="svelte-rghtkp"&&(j.innerHTML=is),B=l(s),g=r(s,"P",{"data-svelte-h":!0}),i(g)!=="svelte-rzzdyf"&&(g.innerHTML=ms),E=l(s),c(y.$$.fragment,s),L=l(s),b=r(s,"P",{"data-svelte-h":!0}),i(b)!=="svelte-ej8pz8"&&(b.textContent=ds),A=l(s),T=r(s,"P",{"data-svelte-h":!0}),i(T)!=="svelte-ynucpm"&&(T.innerHTML=hs),F=l(s),c(w.$$.fragment,s),S=l(s),J=r(s,"P",{"data-svelte-h":!0}),i(J)!=="svelte-2qljfh"&&(J.innerHTML=us),N=l(s),c(U.$$.fragment,s),W=l(s),c(_.$$.fragment,s),X=l(s),$=r(s,"P",{"data-svelte-h":!0}),i($)!=="svelte-d9nvs7"&&($.innerHTML=fs),V=l(s),c(I.$$.fragment,s),K=l(s),C=r(s,"P",{"data-svelte-h":!0}),i(C)!=="svelte-1iws501"&&(C.innerHTML=Ms),O=l(s),k=r(s,"P",{"data-svelte-h":!0}),i(k)!=="svelte-5bmcft"&&(k.innerHTML=js),ss=l(s),c(Q.$$.fragment,s),as=l(s),R=r(s,"P",{"data-svelte-h":!0}),i(R)!=="svelte-164af4x"&&(R.innerHTML=gs),ts=l(s),c(v.$$.fragment,s),es=l(s),G=r(s,"P",{"data-svelte-h":!0}),i(G)!=="svelte-1cx2o75"&&(G.innerHTML=ys),ns=l(s),c(q.$$.fragment,s),ls=l(s),c(Z.$$.fragment,s),ps=l(s),P=r(s,"P",{}),bs(P).forEach(t),this.h()},h(){Ts(f,"name","hf:doc:metadata"),Ts(f,"content",Rs)},m(s,a){Cs(document.head,f),e(s,z,a),e(s,D,a),e(s,H,a),m(M,s,a),e(s,Y,a),e(s,j,a),e(s,B,a),e(s,g,a),e(s,E,a),m(y,s,a),e(s,L,a),e(s,b,a),e(s,A,a),e(s,T,a),e(s,F,a),m(w,s,a),e(s,S,a),e(s,J,a),e(s,N,a),m(U,s,a),e(s,W,a),m(_,s,a),e(s,X,a),e(s,$,a),e(s,V,a),m(I,s,a),e(s,K,a),e(s,C,a),e(s,O,a),e(s,k,a),e(s,ss,a),m(Q,s,a),e(s,as,a),e(s,R,a),e(s,ts,a),m(v,s,a),e(s,es,a),e(s,G,a),e(s,ns,a),m(q,s,a),e(s,ls,a),m(Z,s,a),e(s,ps,a),e(s,P,a),rs=!0},p:Js,i(s){rs||(d(M.$$.fragment,s),d(y.$$.fragment,s),d(w.$$.fragment,s),d(U.$$.fragment,s),d(_.$$.fragment,s),d(I.$$.fragment,s),d(Q.$$.fragment,s),d(v.$$.fragment,s),d(q.$$.fragment,s),d(Z.$$.fragment,s),rs=!0)},o(s){h(M.$$.fragment,s),h(y.$$.fragment,s),h(w.$$.fragment,s),h(U.$$.fragment,s),h(_.$$.fragment,s),h(I.$$.fragment,s),h(Q.$$.fragment,s),h(v.$$.fragment,s),h(q.$$.fragment,s),h(Z.$$.fragment,s),rs=!1},d(s){s&&(t(z),t(D),t(H),t(Y),t(j),t(B),t(g),t(E),t(L),t(b),t(A),t(T),t(F),t(S),t(J),t(N),t(W),t(X),t($),t(V),t(K),t(C),t(O),t(k),t(ss),t(as),t(R),t(ts),t(es),t(G),t(ns),t(ls),t(ps),t(P)),t(f),u(M,s),u(y,s),u(w,s),u(U,s),u(_,s),u(I,s),u(Q,s),u(v,s),u(q,s),u(Z,s)}}}const Rs='{"title":"Use with Pandas","local":"use-with-pandas","sections":[{"title":"Dataset format","local":"dataset-format","sections":[],"depth":2},{"title":"Process data","local":"process-data","sections":[],"depth":2},{"title":"Import or Export from Pandas","local":"import-or-export-from-pandas","sections":[],"depth":2}],"depth":1}';function vs(cs){return Us(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ps extends _s{constructor(f){super(),$s(this,f,vs,Qs,ws,{})}}export{Ps as component};
