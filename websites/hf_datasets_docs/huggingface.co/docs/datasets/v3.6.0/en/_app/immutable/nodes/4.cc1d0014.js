import{s as ws,o as _s,n as Qe}from"../chunks/scheduler.bdbef820.js";import{S as vs,i as Js,g as r,s as l,r as o,A as Cs,h as c,f as a,c as i,j as Ms,u as h,x as d,k as Ts,y as ks,a as t,v as u,d as f,t as m,w as g}from"../chunks/index.c0aea24a.js";import{T as Se}from"../chunks/Tip.31005f7d.js";import{C as x}from"../chunks/CodeBlock.e814ab8d.js";import{H as ze,E as Us}from"../chunks/index.89e522f3.js";function Is($){let n,j='Refer to <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Value">Value</a> for a full list of supported data types.';return{c(){n=r("p"),n.innerHTML=j},l(p){n=c(p,"P",{"data-svelte-h":!0}),d(n)!=="svelte-1s8fmav"&&(n.innerHTML=j)},m(p,y){t(p,n,y)},p:Qe,d(p){p&&a(n)}}}function Ls($){let n,j='See the <a href="./process#flatten">flatten</a> section to learn how you can extract the nested subfields as their own independent columns.';return{c(){n=r("p"),n.innerHTML=j},l(p){n=c(p,"P",{"data-svelte-h":!0}),d(n)!=="svelte-w166wo"&&(n.innerHTML=j)},m(p,y){t(p,n,y)},p:Qe,d(p){p&&a(n)}}}function Hs($){let n,j="Index into an audio dataset using the row index first and then the <code>audio</code> column - <code>dataset[0][&quot;audio&quot;]</code> - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.";return{c(){n=r("p"),n.innerHTML=j},l(p){n=c(p,"P",{"data-svelte-h":!0}),d(n)!=="svelte-beeqb0"&&(n.innerHTML=j)},m(p,y){t(p,n,y)},p:Qe,d(p){p&&a(n)}}}function Fs($){let n,j="Index into an image dataset using the row index first and then the <code>image</code> column - <code>dataset[0][&quot;image&quot;]</code> - to avoid decoding all the image files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.";return{c(){n=r("p"),n.innerHTML=j},l(p){n=c(p,"P",{"data-svelte-h":!0}),d(n)!=="svelte-y5zqmr"&&(n.innerHTML=j)},m(p,y){t(p,n,y)},p:Qe,d(p){p&&a(n)}}}function Ns($){let n,j,p,y,_,pe,v,Be='<a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> defines the internal structure of a dataset. It is used to specify the underlying serialization format. Whatâ€™s more interesting to you though is that <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> contains high-level information about everything from the column names and types, to the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.ClassLabel">ClassLabel</a>. You can think of <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> as the backbone of a dataset.',re,J,De='The <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> format is simple: <code>dict[column_name, column_type]</code>. It is a dictionary of column name and column type pairs. The column type provides a wide range of options for describing the type of data you have.',ce,C,Ke="Letâ€™s have a look at the features of the MRPC dataset from the GLUE benchmark:",de,k,oe,U,Oe='The <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Value">Value</a> feature tells ðŸ¤— Datasets:',he,I,es="<li>The <code>idx</code> data type is <code>int32</code>.</li> <li>The <code>sentence1</code> and <code>sentence2</code> data types are <code>string</code>.</li>",ue,L,ss="ðŸ¤— Datasets supports many other data types such as <code>bool</code>, <code>float32</code> and <code>binary</code> to name just a few.",fe,b,me,H,as='The <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.ClassLabel">ClassLabel</a> feature informs ðŸ¤— Datasets the <code>label</code> column contains two classes. The classes are labeled <code>not_equivalent</code> and <code>equivalent</code>. Labels are stored as integers in the dataset. When you retrieve the labels, <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.ClassLabel.int2str">ClassLabel.int2str()</a> and <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.ClassLabel.str2int">ClassLabel.str2int()</a> carries out the conversion from integer value to label name, and vice versa.',ge,F,ts='If your data type contains a list of objects, then you want to use the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Sequence">Sequence</a> feature. Remember the SQuAD dataset?',je,N,ye,R,ns='The <code>answers</code> field is constructed using the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Sequence">Sequence</a> feature because it contains two subfields, <code>text</code> and <code>answer_start</code>, which are lists of <code>string</code> and <code>int32</code>, respectively.',$e,M,xe,Z,ls='The array feature type is useful for creating arrays of various sizes. You can create arrays with two dimensions using <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Array2D">Array2D</a>, and even arrays with five dimensions using <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Array5D">Array5D</a>.',be,q,Me,G,is="The array type also allows the first dimension of the array to be dynamic. This is useful for handling sequences with variable lengths such as sentences, without having to pad or truncate the input to a uniform shape.",Te,V,we,W,_e,X,ps='Audio datasets have a column with type <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Audio">Audio</a>, which contains three important fields:',ve,Y,rs="<li><code>array</code>: the decoded audio data represented as a 1-dimensional array.</li> <li><code>path</code>: the path to the downloaded audio file.</li> <li><code>sampling_rate</code>: the sampling rate of the audio data.</li>",Je,A,cs='When you load an audio dataset and call the audio column, the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Audio">Audio</a> feature automatically decodes and resamples the audio file:',Ce,E,ke,T,Ue,P,ds='With <code>decode=False</code>, the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Audio">Audio</a> type simply gives you the path or the bytes of the audio file, without decoding it into an <code>array</code>,',Ie,S,Le,Q,He,z,os='Image datasets have a column with type <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a>, which loads <code>PIL.Image</code> objects from images stored as bytes:',Fe,B,hs='When you load an image dataset and call the image column, the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a> feature automatically decodes the image file:',Ne,D,Re,w,Ze,K,us='With <code>decode=False</code>, the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a> type simply gives you the path or the bytes of the image file, without decoding it into an <code>PIL.Image</code>,',qe,O,Ge,ee,fs="Depending on the dataset, you may get the path to the local downloaded image, or the content of the image as bytes if the dataset is not made of individual files.",Ve,se,ms="You can also define a dataset of images from numpy arrays:",We,ae,Xe,te,gs="And in this case the numpy arrays are encoded into PNG (or TIFF if the pixels values precision is important).",Ye,ne,js=`For multi-channels arrays like RGB or RGBA, only uint8 is supported. If you use a larger precision, you get a warning and the array is downcasted to uint8.
For gray-scale images you can use the integer or float precision you want as long as it is compatible with <code>Pillow</code>. A warning is shown if your image integer or float precision is too high, and in this case the array is downcated: an int64 array is downcasted to int32, and a float64 array is downcasted to float32.`,Ae,le,Ee,ie,Pe;return _=new ze({props:{title:"Dataset features",local:"dataset-features",headingTag:"h1"}}),k=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCgnbnl1LW1sbCUyRmdsdWUnJTJDJTIwJ21ycGMnJTJDJTIwc3BsaXQlM0QndHJhaW4nKSUwQWRhdGFzZXQuZmVhdHVyZXM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&#x27;nyu-mll/glue&#x27;</span>, <span class="hljs-string">&#x27;mrpc&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset.features
{<span class="hljs-string">&#x27;idx&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;int32&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
 <span class="hljs-string">&#x27;label&#x27;</span>: ClassLabel(names=[<span class="hljs-string">&#x27;not_equivalent&#x27;</span>, <span class="hljs-string">&#x27;equivalent&#x27;</span>], <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
 <span class="hljs-string">&#x27;sentence1&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
 <span class="hljs-string">&#x27;sentence2&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
}`,wrap:!1}}),b=new Se({props:{$$slots:{default:[Is]},$$scope:{ctx:$}}}),N=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCgncmFqcHVya2FyJTJGc3F1YWQnJTJDJTIwc3BsaXQlM0QndHJhaW4nKSUwQWRhdGFzZXQuZmVhdHVyZXM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&#x27;rajpurkar/squad&#x27;</span>, split=<span class="hljs-string">&#x27;train&#x27;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset.features
{<span class="hljs-string">&#x27;answers&#x27;</span>: <span class="hljs-type">Sequence</span>(feature={<span class="hljs-string">&#x27;text&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>), <span class="hljs-string">&#x27;answer_start&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;int32&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>)}, length=-<span class="hljs-number">1</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
<span class="hljs-string">&#x27;context&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
<span class="hljs-string">&#x27;id&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
<span class="hljs-string">&#x27;question&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
<span class="hljs-string">&#x27;title&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>)}`,wrap:!1}}),M=new Se({props:{$$slots:{default:[Ls]},$$scope:{ctx:$}}}),q=new x({props:{code:"ZmVhdHVyZXMlMjAlM0QlMjBGZWF0dXJlcyglN0InYSclM0ElMjBBcnJheTJEKHNoYXBlJTNEKDElMkMlMjAzKSUyQyUyMGR0eXBlJTNEJ2ludDMyJyklN0Qp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>features = Features({<span class="hljs-string">&#x27;a&#x27;</span>: Array2D(shape=(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>), dtype=<span class="hljs-string">&#x27;int32&#x27;</span>)})',wrap:!1}}),V=new x({props:{code:"ZmVhdHVyZXMlMjAlM0QlMjBGZWF0dXJlcyglN0InYSclM0ElMjBBcnJheTNEKHNoYXBlJTNEKE5vbmUlMkMlMjA1JTJDJTIwMiklMkMlMjBkdHlwZSUzRCdpbnQzMicpJTdEKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>features = Features({<span class="hljs-string">&#x27;a&#x27;</span>: Array3D(shape=(<span class="hljs-literal">None</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>), dtype=<span class="hljs-string">&#x27;int32&#x27;</span>)})',wrap:!1}}),W=new ze({props:{title:"Audio feature",local:"audio-feature",headingTag:"h2"}}),E=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTJDJTIwQXVkaW8lMEElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMlBvbHlBSSUyRm1pbmRzMTQlMjIlMkMlMjAlMjJlbi1VUyUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMjIpJTBBZGF0YXNldCU1QjAlNUQlNUIlMjJhdWRpbyUyMiU1RA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;audio&quot;</span>]
{<span class="hljs-string">&#x27;array&#x27;</span>: array([ <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.00024414</span>, -<span class="hljs-number">0.00024414</span>, ..., -<span class="hljs-number">0.00024414</span>,
         <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.</span>        ], dtype=float32),
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">8000</span>}`,wrap:!1}}),T=new Se({props:{warning:!0,$$slots:{default:[Hs]},$$scope:{ctx:$}}}),S=new x({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJQb2x5QUklMkZtaW5kczE0JTIyJTJDJTIwJTIyZW4tVVMlMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKS5jYXN0X2NvbHVtbiglMjJhdWRpbyUyMiUyQyUyMEF1ZGlvKGRlY29kZSUzREZhbHNlKSklMEFkYXRhc2V0JTVCMCU1RA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>: {<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>},
 <span class="hljs-string">&#x27;english_transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>,
 <span class="hljs-string">&#x27;intent_class&#x27;</span>: <span class="hljs-number">11</span>,
 <span class="hljs-string">&#x27;lang_id&#x27;</span>: <span class="hljs-number">4</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>}`,wrap:!1}}),Q=new ze({props:{title:"Image feature",local:"image-feature",headingTag:"h2"}}),D=new x({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTJDJTIwSW1hZ2UlMEElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMkFJLUxhYi1NYWtlcmVyZSUyRmJlYW5zJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiklMEFkYXRhc2V0JTVCMCU1RCU1QiUyMmltYWdlJTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Image

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;AI-Lab-Makerere/beans&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;image&quot;</span>]
&lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x500 at <span class="hljs-number">0x125506CF8</span>&gt;`,wrap:!1}}),w=new Se({props:{warning:!0,$$slots:{default:[Fs]},$$scope:{ctx:$}}}),O=new x({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJBSS1MYWItTWFrZXJlcmUlMkZiZWFucyUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMjIpLmNhc3RfY29sdW1uKCUyMmltYWdlJTIyJTJDJTIwSW1hZ2UoZGVjb2RlJTNERmFsc2UpKSUwQWRhdGFzZXQlNUIwJTVEJTVCJTIyaW1hZ2UlMjIlNUQ=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;AI-Lab-Makerere/beans&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&quot;image&quot;</span>, Image(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;image&quot;</span>]
{<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/Users/username/.cache/huggingface/datasets/downloads/extracted/772e7c1fba622cff102b85dd74bcce46e8168634df4eaade7bedd3b8d91d3cd7/train/healthy/healthy_train.265.jpg&#x27;</span>}`,wrap:!1}}),ae=new x({props:{code:"ZHMlMjAlM0QlMjBEYXRhc2V0LmZyb21fZGljdCglN0IlMjJpJTIyJTNBJTIwJTVCbnAuemVyb3Moc2hhcGUlM0QoMTYlMkMlMjAxNiUyQyUyMDMpJTJDJTIwZHR5cGUlM0RucC51aW50OCklNUQlN0QlMkMlMjBmZWF0dXJlcyUzREZlYXR1cmVzKCU3QiUyMmklMjIlM0ElMjBJbWFnZSgpJTdEKSk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>ds = Dataset.from_dict({<span class="hljs-string">&quot;i&quot;</span>: [np.zeros(shape=(<span class="hljs-number">16</span>, <span class="hljs-number">16</span>, <span class="hljs-number">3</span>), dtype=np.uint8)]}, features=Features({<span class="hljs-string">&quot;i&quot;</span>: Image()}))',wrap:!1}}),le=new Us({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/about_dataset_features.mdx"}}),{c(){n=r("meta"),j=l(),p=r("p"),y=l(),o(_.$$.fragment),pe=l(),v=r("p"),v.innerHTML=Be,re=l(),J=r("p"),J.innerHTML=De,ce=l(),C=r("p"),C.textContent=Ke,de=l(),o(k.$$.fragment),oe=l(),U=r("p"),U.innerHTML=Oe,he=l(),I=r("ul"),I.innerHTML=es,ue=l(),L=r("p"),L.innerHTML=ss,fe=l(),o(b.$$.fragment),me=l(),H=r("p"),H.innerHTML=as,ge=l(),F=r("p"),F.innerHTML=ts,je=l(),o(N.$$.fragment),ye=l(),R=r("p"),R.innerHTML=ns,$e=l(),o(M.$$.fragment),xe=l(),Z=r("p"),Z.innerHTML=ls,be=l(),o(q.$$.fragment),Me=l(),G=r("p"),G.textContent=is,Te=l(),o(V.$$.fragment),we=l(),o(W.$$.fragment),_e=l(),X=r("p"),X.innerHTML=ps,ve=l(),Y=r("ul"),Y.innerHTML=rs,Je=l(),A=r("p"),A.innerHTML=cs,Ce=l(),o(E.$$.fragment),ke=l(),o(T.$$.fragment),Ue=l(),P=r("p"),P.innerHTML=ds,Ie=l(),o(S.$$.fragment),Le=l(),o(Q.$$.fragment),He=l(),z=r("p"),z.innerHTML=os,Fe=l(),B=r("p"),B.innerHTML=hs,Ne=l(),o(D.$$.fragment),Re=l(),o(w.$$.fragment),Ze=l(),K=r("p"),K.innerHTML=us,qe=l(),o(O.$$.fragment),Ge=l(),ee=r("p"),ee.textContent=fs,Ve=l(),se=r("p"),se.textContent=ms,We=l(),o(ae.$$.fragment),Xe=l(),te=r("p"),te.textContent=gs,Ye=l(),ne=r("p"),ne.innerHTML=js,Ae=l(),o(le.$$.fragment),Ee=l(),ie=r("p"),this.h()},l(e){const s=Cs("svelte-u9bgzb",document.head);n=c(s,"META",{name:!0,content:!0}),s.forEach(a),j=i(e),p=c(e,"P",{}),Ms(p).forEach(a),y=i(e),h(_.$$.fragment,e),pe=i(e),v=c(e,"P",{"data-svelte-h":!0}),d(v)!=="svelte-1620c30"&&(v.innerHTML=Be),re=i(e),J=c(e,"P",{"data-svelte-h":!0}),d(J)!=="svelte-lz6072"&&(J.innerHTML=De),ce=i(e),C=c(e,"P",{"data-svelte-h":!0}),d(C)!=="svelte-27gb5"&&(C.textContent=Ke),de=i(e),h(k.$$.fragment,e),oe=i(e),U=c(e,"P",{"data-svelte-h":!0}),d(U)!=="svelte-1lkerbc"&&(U.innerHTML=Oe),he=i(e),I=c(e,"UL",{"data-svelte-h":!0}),d(I)!=="svelte-t9folw"&&(I.innerHTML=es),ue=i(e),L=c(e,"P",{"data-svelte-h":!0}),d(L)!=="svelte-840okc"&&(L.innerHTML=ss),fe=i(e),h(b.$$.fragment,e),me=i(e),H=c(e,"P",{"data-svelte-h":!0}),d(H)!=="svelte-1tod51z"&&(H.innerHTML=as),ge=i(e),F=c(e,"P",{"data-svelte-h":!0}),d(F)!=="svelte-vlfn82"&&(F.innerHTML=ts),je=i(e),h(N.$$.fragment,e),ye=i(e),R=c(e,"P",{"data-svelte-h":!0}),d(R)!=="svelte-4fr7zl"&&(R.innerHTML=ns),$e=i(e),h(M.$$.fragment,e),xe=i(e),Z=c(e,"P",{"data-svelte-h":!0}),d(Z)!=="svelte-3o7hws"&&(Z.innerHTML=ls),be=i(e),h(q.$$.fragment,e),Me=i(e),G=c(e,"P",{"data-svelte-h":!0}),d(G)!=="svelte-r191o2"&&(G.textContent=is),Te=i(e),h(V.$$.fragment,e),we=i(e),h(W.$$.fragment,e),_e=i(e),X=c(e,"P",{"data-svelte-h":!0}),d(X)!=="svelte-f5svc0"&&(X.innerHTML=ps),ve=i(e),Y=c(e,"UL",{"data-svelte-h":!0}),d(Y)!=="svelte-1nw88eq"&&(Y.innerHTML=rs),Je=i(e),A=c(e,"P",{"data-svelte-h":!0}),d(A)!=="svelte-9o55fy"&&(A.innerHTML=cs),Ce=i(e),h(E.$$.fragment,e),ke=i(e),h(T.$$.fragment,e),Ue=i(e),P=c(e,"P",{"data-svelte-h":!0}),d(P)!=="svelte-9il0po"&&(P.innerHTML=ds),Ie=i(e),h(S.$$.fragment,e),Le=i(e),h(Q.$$.fragment,e),He=i(e),z=c(e,"P",{"data-svelte-h":!0}),d(z)!=="svelte-b3c3tl"&&(z.innerHTML=os),Fe=i(e),B=c(e,"P",{"data-svelte-h":!0}),d(B)!=="svelte-iq64y2"&&(B.innerHTML=hs),Ne=i(e),h(D.$$.fragment,e),Re=i(e),h(w.$$.fragment,e),Ze=i(e),K=c(e,"P",{"data-svelte-h":!0}),d(K)!=="svelte-5wnf80"&&(K.innerHTML=us),qe=i(e),h(O.$$.fragment,e),Ge=i(e),ee=c(e,"P",{"data-svelte-h":!0}),d(ee)!=="svelte-1c0sfll"&&(ee.textContent=fs),Ve=i(e),se=c(e,"P",{"data-svelte-h":!0}),d(se)!=="svelte-1fu11z8"&&(se.textContent=ms),We=i(e),h(ae.$$.fragment,e),Xe=i(e),te=c(e,"P",{"data-svelte-h":!0}),d(te)!=="svelte-14ivvjf"&&(te.textContent=gs),Ye=i(e),ne=c(e,"P",{"data-svelte-h":!0}),d(ne)!=="svelte-rvy6kk"&&(ne.innerHTML=js),Ae=i(e),h(le.$$.fragment,e),Ee=i(e),ie=c(e,"P",{}),Ms(ie).forEach(a),this.h()},h(){Ts(n,"name","hf:doc:metadata"),Ts(n,"content",Rs)},m(e,s){ks(document.head,n),t(e,j,s),t(e,p,s),t(e,y,s),u(_,e,s),t(e,pe,s),t(e,v,s),t(e,re,s),t(e,J,s),t(e,ce,s),t(e,C,s),t(e,de,s),u(k,e,s),t(e,oe,s),t(e,U,s),t(e,he,s),t(e,I,s),t(e,ue,s),t(e,L,s),t(e,fe,s),u(b,e,s),t(e,me,s),t(e,H,s),t(e,ge,s),t(e,F,s),t(e,je,s),u(N,e,s),t(e,ye,s),t(e,R,s),t(e,$e,s),u(M,e,s),t(e,xe,s),t(e,Z,s),t(e,be,s),u(q,e,s),t(e,Me,s),t(e,G,s),t(e,Te,s),u(V,e,s),t(e,we,s),u(W,e,s),t(e,_e,s),t(e,X,s),t(e,ve,s),t(e,Y,s),t(e,Je,s),t(e,A,s),t(e,Ce,s),u(E,e,s),t(e,ke,s),u(T,e,s),t(e,Ue,s),t(e,P,s),t(e,Ie,s),u(S,e,s),t(e,Le,s),u(Q,e,s),t(e,He,s),t(e,z,s),t(e,Fe,s),t(e,B,s),t(e,Ne,s),u(D,e,s),t(e,Re,s),u(w,e,s),t(e,Ze,s),t(e,K,s),t(e,qe,s),u(O,e,s),t(e,Ge,s),t(e,ee,s),t(e,Ve,s),t(e,se,s),t(e,We,s),u(ae,e,s),t(e,Xe,s),t(e,te,s),t(e,Ye,s),t(e,ne,s),t(e,Ae,s),u(le,e,s),t(e,Ee,s),t(e,ie,s),Pe=!0},p(e,[s]){const ys={};s&2&&(ys.$$scope={dirty:s,ctx:e}),b.$set(ys);const $s={};s&2&&($s.$$scope={dirty:s,ctx:e}),M.$set($s);const xs={};s&2&&(xs.$$scope={dirty:s,ctx:e}),T.$set(xs);const bs={};s&2&&(bs.$$scope={dirty:s,ctx:e}),w.$set(bs)},i(e){Pe||(f(_.$$.fragment,e),f(k.$$.fragment,e),f(b.$$.fragment,e),f(N.$$.fragment,e),f(M.$$.fragment,e),f(q.$$.fragment,e),f(V.$$.fragment,e),f(W.$$.fragment,e),f(E.$$.fragment,e),f(T.$$.fragment,e),f(S.$$.fragment,e),f(Q.$$.fragment,e),f(D.$$.fragment,e),f(w.$$.fragment,e),f(O.$$.fragment,e),f(ae.$$.fragment,e),f(le.$$.fragment,e),Pe=!0)},o(e){m(_.$$.fragment,e),m(k.$$.fragment,e),m(b.$$.fragment,e),m(N.$$.fragment,e),m(M.$$.fragment,e),m(q.$$.fragment,e),m(V.$$.fragment,e),m(W.$$.fragment,e),m(E.$$.fragment,e),m(T.$$.fragment,e),m(S.$$.fragment,e),m(Q.$$.fragment,e),m(D.$$.fragment,e),m(w.$$.fragment,e),m(O.$$.fragment,e),m(ae.$$.fragment,e),m(le.$$.fragment,e),Pe=!1},d(e){e&&(a(j),a(p),a(y),a(pe),a(v),a(re),a(J),a(ce),a(C),a(de),a(oe),a(U),a(he),a(I),a(ue),a(L),a(fe),a(me),a(H),a(ge),a(F),a(je),a(ye),a(R),a($e),a(xe),a(Z),a(be),a(Me),a(G),a(Te),a(we),a(_e),a(X),a(ve),a(Y),a(Je),a(A),a(Ce),a(ke),a(Ue),a(P),a(Ie),a(Le),a(He),a(z),a(Fe),a(B),a(Ne),a(Re),a(Ze),a(K),a(qe),a(Ge),a(ee),a(Ve),a(se),a(We),a(Xe),a(te),a(Ye),a(ne),a(Ae),a(Ee),a(ie)),a(n),g(_,e),g(k,e),g(b,e),g(N,e),g(M,e),g(q,e),g(V,e),g(W,e),g(E,e),g(T,e),g(S,e),g(Q,e),g(D,e),g(w,e),g(O,e),g(ae,e),g(le,e)}}}const Rs='{"title":"Dataset features","local":"dataset-features","sections":[{"title":"Audio feature","local":"audio-feature","sections":[],"depth":2},{"title":"Image feature","local":"image-feature","sections":[],"depth":2}],"depth":1}';function Zs($){return _s(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ys extends vs{constructor(n){super(),Js(this,n,Zs,Ns,ws,{})}}export{Ys as component};
