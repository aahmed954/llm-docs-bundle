import{s as Zt,o as Gt,n as tt}from"../chunks/scheduler.bdbef820.js";import{S as Rt,i as _t,g as p,s as l,r as o,A as Ct,h as d,f as a,c as n,j as jt,u as r,x as u,k as Ut,y as It,a as s,v as g,d as c,t as h,w as f}from"../chunks/index.c0aea24a.js";import{T as et}from"../chunks/Tip.31005f7d.js";import{C as y}from"../chunks/CodeBlock.e814ab8d.js";import{H as oe,E as kt}from"../chunks/index.89e522f3.js";function vt(b){let i,$='To work with image datasets, you need to have the <code>vision</code> dependency installed. Check out the <a href="./installation#vision">installation</a> guide to learn how to install it.';return{c(){i=p("p"),i.innerHTML=$},l(m){i=d(m,"P",{"data-svelte-h":!0}),u(i)!=="svelte-p8ou1r"&&(i.innerHTML=$)},m(m,M){s(m,i,M)},p:tt,d(m){m&&a(i)}}}function Ft(b){let i,$="Index into an image dataset using the row index first and then the <code>image</code> column - <code>dataset[0][&quot;image&quot;]</code> - to avoid decoding and resampling all the image objects in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.";return{c(){i=p("p"),i.innerHTML=$},l(m){i=d(m,"P",{"data-svelte-h":!0}),u(i)!=="svelte-1qc6mpf"&&(i.innerHTML=$)},m(m,M){s(m,i,M)},p:tt,d(m){m&&a(i)}}}function xt(b){let i,$='For more information about creating your own <code>ImageFolder</code> dataset, take a look at the <a href="./image_dataset">Create an image dataset</a> guide.';return{c(){i=p("p"),i.innerHTML=$},l(m){i=d(m,"P",{"data-svelte-h":!0}),u(i)!=="svelte-1nxblik"&&(i.innerHTML=$)},m(m,M){s(m,i,M)},p:tt,d(m){m&&a(i)}}}function Yt(b){let i,$,m,M,j,re,U,at='Image datasets have <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a> type columns, which contain PIL objects.',ge,J,ce,Z,st="When you load an image dataset and call the image column, the images are decoded as PIL Images:",he,G,fe,T,ue,R,lt='For a guide on how to load any type of dataset, take a look at the <a class="underline decoration-sky-400 decoration-2 font-semibold" href="./loading">general loading guide</a>.',ye,_,$e,C,nt='You can load a dataset from the image path. Use the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.cast_column">cast_column()</a> function to accept a column of image file paths, and decode it into a PIL image with the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a> feature:',Me,I,be,k,it='If you only want to load the underlying path to the image dataset without decoding the image object, set <code>decode=False</code> in the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Image">Image</a> feature:',Je,v,Te,F,we,x,pt="You can also load a dataset with an <code>ImageFolder</code> dataset builder which does not require writing a custom dataloader. This makes <code>ImageFolder</code> ideal for quickly creating and loading image datasets with several thousand images for different vision tasks. Your image dataset structure should look like this:",je,Y,Ue,W,dt="Alternatively it should have metadata, for example:",Ze,q,Ge,X,mt='If the dataset follows the <code>ImageFolder</code> structure, then you can load it directly with <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',Re,H,_e,L,ot='For local datasets, this is equivalent to passing <code>imagefolder</code> manually in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> and the directory in <code>data_dir</code>:',Ce,V,Ie,z,rt="Then you can access the videos as <code>PIL.Image</code> objects:",ke,B,ve,N,gt='To ignore the information in the metadata file, set <code>drop_metadata=True</code> in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',Fe,P,xe,E,ct=`If you donâ€™t have a metadata file, <code>ImageFolder</code> automatically infers the label name from the directory name.
If you want to drop automatically created labels, set <code>drop_labels=True</code>.
In this case, your dataset will only contain an image column:`,Ye,Q,We,S,ht="Finally the <code>filters</code> argument lets you load only a subset of the dataset, based on a condition on the label or the metadata. This is especially useful if the metadata is in Parquet format, since this format enables fast filtering. It is also recommended to use this argument with <code>streaming=True</code>, because by default the dataset is fully downloaded before filtering.",qe,D,Xe,w,He,A,Le,K,ft=`The <a href="https://github.com/webdataset/webdataset" rel="nofollow">WebDataset</a> format is based on a folder of TAR archives and is suitable for big image datasets.
Because of their size, WebDatasets are generally loaded in streaming mode (using <code>streaming=True</code>).`,Ve,O,ut="You can load a WebDataset like this:",ze,ee,Be,te,Ne,ae,yt=`By default, images are decoded sequentially as <code>PIL.Images</code> when you iterate on a dataset.
However it is possible to speed up the dataset significantly using multithreaded decoding:`,Pe,se,Ee,le,$t=`You can enable multithreading using <code>num_threads</code>. This is especially useful to speed up remote data streaming.
However it can be slower than <code>num_threads=0</code> for local data on fast disks.`,Qe,ne,Mt="If you are not interested in the images decoded as <code>PIL.Images</code> and would like to access the path/bytes instead, you can disable decoding:",Se,ie,De,pe,bt='Note: <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.IterableDataset.decode">IterableDataset.decode()</a> is only available for streaming datasets at the moment.',Ae,de,Ke,me,Oe;return j=new oe({props:{title:"Load image data",local:"load-image-data",headingTag:"h1"}}),J=new et({props:{$$slots:{default:[vt]},$$scope:{ctx:b}}}),G=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTJDJTIwSW1hZ2UlMEElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmJlYW5zJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiklMEFkYXRhc2V0JTVCMCU1RCU1QiUyMmltYWdlJTIyJTVE",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Image

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;beans&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;image&quot;</span>]`,wrap:!1}}),T=new et({props:{warning:!0,$$slots:{default:[Ft]},$$scope:{ctx:b}}}),_=new oe({props:{title:"Local files",local:"local-files",headingTag:"h2"}}),I=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUyQyUyMEltYWdlJTBBJTBBZGF0YXNldCUyMCUzRCUyMERhdGFzZXQuZnJvbV9kaWN0KCU3QiUyMmltYWdlJTIyJTNBJTIwJTVCJTIycGF0aCUyRnRvJTJGaW1hZ2VfMSUyMiUyQyUyMCUyMnBhdGglMkZ0byUyRmltYWdlXzIlMjIlMkMlMjAuLi4lMkMlMjAlMjJwYXRoJTJGdG8lMkZpbWFnZV9uJTIyJTVEJTdEKS5jYXN0X2NvbHVtbiglMjJpbWFnZSUyMiUyQyUyMEltYWdlKCkpJTBBZGF0YXNldCU1QjAlNUQlNUIlMjJpbWFnZSUyMiU1RA==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset, Image

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_dict({<span class="hljs-string">&quot;image&quot;</span>: [<span class="hljs-string">&quot;path/to/image_1&quot;</span>, <span class="hljs-string">&quot;path/to/image_2&quot;</span>, ..., <span class="hljs-string">&quot;path/to/image_n&quot;</span>]}).cast_column(<span class="hljs-string">&quot;image&quot;</span>, Image())
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;image&quot;</span>]
&lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1200x215 at <span class="hljs-number">0x15E6D7160</span>&gt;]`,wrap:!1}}),v=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJiZWFucyUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMjIpLmNhc3RfY29sdW1uKCUyMmltYWdlJTIyJTJDJTIwSW1hZ2UoZGVjb2RlJTNERmFsc2UpKSUwQWRhdGFzZXQlNUIwJTVEJTVCJTIyaW1hZ2UlMjIlNUQ=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;beans&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&quot;image&quot;</span>, Image(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;image&quot;</span>]
{<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/b0a21163f78769a2cf11f58dfc767fb458fc7cea5c05dccc0144a2c0f0bc1292/train/bean_rust/bean_rust_train.29.jpg&#x27;</span>}`,wrap:!1}}),F=new oe({props:{title:"ImageFolder",local:"imagefolder",headingTag:"h2"}}),Y=new y({props:{code:"Zm9sZGVyJTJGdHJhaW4lMkZkb2clMkZnb2xkZW5fcmV0cmlldmVyLnBuZyUwQWZvbGRlciUyRnRyYWluJTJGZG9nJTJGZ2VybWFuX3NoZXBoZXJkLnBuZyUwQWZvbGRlciUyRnRyYWluJTJGZG9nJTJGY2hpaHVhaHVhLnBuZyUwQSUwQWZvbGRlciUyRnRyYWluJTJGY2F0JTJGbWFpbmVfY29vbi5wbmclMEFmb2xkZXIlMkZ0cmFpbiUyRmNhdCUyRmJlbmdhbC5wbmclMEFmb2xkZXIlMkZ0cmFpbiUyRmNhdCUyRmJpcm1hbi5wbmc=",highlighted:`folder<span class="hljs-regexp">/train/</span>dog/golden_retriever.png
folder<span class="hljs-regexp">/train/</span>dog/german_shepherd.png
folder<span class="hljs-regexp">/train/</span>dog/chihuahua.png

folder<span class="hljs-regexp">/train/</span>cat/maine_coon.png
folder<span class="hljs-regexp">/train/</span>cat/bengal.png
folder<span class="hljs-regexp">/train/</span>cat/birman.png`,wrap:!1}}),q=new y({props:{code:"Zm9sZGVyJTJGdHJhaW4lMkZtZXRhZGF0YS5jc3YlMEFmb2xkZXIlMkZ0cmFpbiUyRjAwMDEucG5nJTBBZm9sZGVyJTJGdHJhaW4lMkYwMDAyLnBuZyUwQWZvbGRlciUyRnRyYWluJTJGMDAwMy5wbmc=",highlighted:`folder<span class="hljs-regexp">/train/m</span>etadata.csv
folder<span class="hljs-regexp">/train/</span><span class="hljs-number">0001</span>.png
folder<span class="hljs-regexp">/train/</span><span class="hljs-number">0002</span>.png
folder<span class="hljs-regexp">/train/</span><span class="hljs-number">0003</span>.png`,wrap:!1}}),H=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfbmFtZSUyMiklMEElMjMlMjBPUiUyMGxvY2FsbHklM0ElMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMiUyRnBhdGglMkZ0byUyRmZvbGRlciUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_name&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># OR locally:</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;/path/to/folder&quot;</span>)`,wrap:!1}}),V=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJpbWFnZWZvbGRlciUyMiUyQyUyMGRhdGFfZGlyJTNEJTIyJTJGcGF0aCUyRnRvJTJGZm9sZGVyJTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;imagefolder&quot;</span>, data_dir=<span class="hljs-string">&quot;/path/to/folder&quot;</span>)',wrap:!1}}),B=new y({props:{code:"ZGF0YXNldCU1QiUyMnRyYWluJTIyJTVEJTVCMCU1RCUwQSUwQWRhdGFzZXQlNUIlMjJ0cmFpbiUyMiU1RCU1Qi0xJTVE",highlighted:`&gt;&gt;&gt; dataset[<span class="hljs-string">&quot;train&quot;</span>][0]
{<span class="hljs-string">&quot;image&quot;</span>: &lt;PIL.PngImagePlugin.PngImageFile image <span class="hljs-attribute">mode</span>=RGBA <span class="hljs-attribute">size</span>=1200x215 at 0x15E6D7160&gt;, <span class="hljs-string">&quot;label&quot;</span>: 0}

&gt;&gt;&gt; dataset[<span class="hljs-string">&quot;train&quot;</span>][-1]
{<span class="hljs-string">&quot;image&quot;</span>: &lt;PIL.PngImagePlugin.PngImageFile image <span class="hljs-attribute">mode</span>=RGBA <span class="hljs-attribute">size</span>=1200x215 at 0x15E8DAD30&gt;, <span class="hljs-string">&quot;label&quot;</span>: 1}`,wrap:!1}}),P=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfd2l0aF9tZXRhZGF0YSUyMiUyQyUyMGRyb3BfbWV0YWRhdGElM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_with_metadata&quot;</span>, drop_metadata=<span class="hljs-literal">True</span>)`,wrap:!1}}),Q=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfd2l0aG91dF9tZXRhZGF0YSUyMiUyQyUyMGRyb3BfbGFiZWxzJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_without_metadata&quot;</span>, drop_labels=<span class="hljs-literal">True</span>)`,wrap:!1}}),D=new y({props:{code:"ZmlsdGVycyUyMCUzRCUyMCU1QiglMjJsYWJlbCUyMiUyQyUyMCUyMiUzRCUyMiUyQyUyMDApJTVEJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ1c2VybmFtZSUyRmRhdGFzZXRfbmFtZSUyMiUyQyUyMHN0cmVhbWluZyUzRFRydWUlMkMlMjBmaWx0ZXJzJTNEZmlsdGVycyk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>filters = [(<span class="hljs-string">&quot;label&quot;</span>, <span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0</span>)]
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;username/dataset_name&quot;</span>, streaming=<span class="hljs-literal">True</span>, filters=filters)`,wrap:!1}}),w=new et({props:{$$slots:{default:[xt]},$$scope:{ctx:b}}}),A=new oe({props:{title:"WebDataset",local:"webdataset",headingTag:"h2"}}),ee=new y({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJ3ZWJkYXRhc2V0JTIyJTJDJTIwZGF0YV9kaXIlM0QlMjIlMkZwYXRoJTJGdG8lMkZmb2xkZXIlMjIlMkMlMjBzdHJlYW1pbmclM0RUcnVlKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;webdataset&quot;</span>, data_dir=<span class="hljs-string">&quot;/path/to/folder&quot;</span>, streaming=<span class="hljs-literal">True</span>)`,wrap:!1}}),te=new oe({props:{title:"Image decoding",local:"image-decoding",headingTag:"h2"}}),se=new y({props:{code:"aW1wb3J0JTIwb3MlMEFudW1fdGhyZWFkcyUyMCUzRCUyMG51bV90aHJlYWRzJTIwJTNEJTIwbWluKDMyJTJDJTIwKG9zLmNwdV9jb3VudCgpJTIwb3IlMjAxKSUyMCUyQiUyMDQpJTBBZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuZGVjb2RlKG51bV90aHJlYWRzJTNEbnVtX3RocmVhZHMpJTBBZm9yJTIwZXhhbXBsZSUyMGluJTIwZGF0YXNldCUzQSUyMCUyMCUyMyUyMHVwJTIwdG8lMjAyMCUyMHRpbWVzJTIwZmFzdGVyJTIwISUwQSUyMCUyMCUyMCUyMC4uLg==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> os
<span class="hljs-meta">&gt;&gt;&gt; </span>num_threads = num_threads = <span class="hljs-built_in">min</span>(<span class="hljs-number">32</span>, (os.cpu_count() <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>) + <span class="hljs-number">4</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.decode(num_threads=num_threads)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> example <span class="hljs-keyword">in</span> dataset:  <span class="hljs-comment"># up to 20 times faster !</span>
<span class="hljs-meta">... </span>    ...`,wrap:!1}}),ie=new y({props:{code:"ZGF0YXNldCUyMCUzRCUyMGRhdGFzZXQuZGVjb2RlKEZhbHNlKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = dataset.decode(<span class="hljs-literal">False</span>)',wrap:!1}}),de=new kt({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/image_load.mdx"}}),{c(){i=p("meta"),$=l(),m=p("p"),M=l(),o(j.$$.fragment),re=l(),U=p("p"),U.innerHTML=at,ge=l(),o(J.$$.fragment),ce=l(),Z=p("p"),Z.textContent=st,he=l(),o(G.$$.fragment),fe=l(),o(T.$$.fragment),ue=l(),R=p("p"),R.innerHTML=lt,ye=l(),o(_.$$.fragment),$e=l(),C=p("p"),C.innerHTML=nt,Me=l(),o(I.$$.fragment),be=l(),k=p("p"),k.innerHTML=it,Je=l(),o(v.$$.fragment),Te=l(),o(F.$$.fragment),we=l(),x=p("p"),x.innerHTML=pt,je=l(),o(Y.$$.fragment),Ue=l(),W=p("p"),W.textContent=dt,Ze=l(),o(q.$$.fragment),Ge=l(),X=p("p"),X.innerHTML=mt,Re=l(),o(H.$$.fragment),_e=l(),L=p("p"),L.innerHTML=ot,Ce=l(),o(V.$$.fragment),Ie=l(),z=p("p"),z.innerHTML=rt,ke=l(),o(B.$$.fragment),ve=l(),N=p("p"),N.innerHTML=gt,Fe=l(),o(P.$$.fragment),xe=l(),E=p("p"),E.innerHTML=ct,Ye=l(),o(Q.$$.fragment),We=l(),S=p("p"),S.innerHTML=ht,qe=l(),o(D.$$.fragment),Xe=l(),o(w.$$.fragment),He=l(),o(A.$$.fragment),Le=l(),K=p("p"),K.innerHTML=ft,Ve=l(),O=p("p"),O.textContent=ut,ze=l(),o(ee.$$.fragment),Be=l(),o(te.$$.fragment),Ne=l(),ae=p("p"),ae.innerHTML=yt,Pe=l(),o(se.$$.fragment),Ee=l(),le=p("p"),le.innerHTML=$t,Qe=l(),ne=p("p"),ne.innerHTML=Mt,Se=l(),o(ie.$$.fragment),De=l(),pe=p("p"),pe.innerHTML=bt,Ae=l(),o(de.$$.fragment),Ke=l(),me=p("p"),this.h()},l(e){const t=Ct("svelte-u9bgzb",document.head);i=d(t,"META",{name:!0,content:!0}),t.forEach(a),$=n(e),m=d(e,"P",{}),jt(m).forEach(a),M=n(e),r(j.$$.fragment,e),re=n(e),U=d(e,"P",{"data-svelte-h":!0}),u(U)!=="svelte-1af47m8"&&(U.innerHTML=at),ge=n(e),r(J.$$.fragment,e),ce=n(e),Z=d(e,"P",{"data-svelte-h":!0}),u(Z)!=="svelte-1nbxpgw"&&(Z.textContent=st),he=n(e),r(G.$$.fragment,e),fe=n(e),r(T.$$.fragment,e),ue=n(e),R=d(e,"P",{"data-svelte-h":!0}),u(R)!=="svelte-12zk6g2"&&(R.innerHTML=lt),ye=n(e),r(_.$$.fragment,e),$e=n(e),C=d(e,"P",{"data-svelte-h":!0}),u(C)!=="svelte-1s1wakw"&&(C.innerHTML=nt),Me=n(e),r(I.$$.fragment,e),be=n(e),k=d(e,"P",{"data-svelte-h":!0}),u(k)!=="svelte-1dl92uj"&&(k.innerHTML=it),Je=n(e),r(v.$$.fragment,e),Te=n(e),r(F.$$.fragment,e),we=n(e),x=d(e,"P",{"data-svelte-h":!0}),u(x)!=="svelte-nhdip7"&&(x.innerHTML=pt),je=n(e),r(Y.$$.fragment,e),Ue=n(e),W=d(e,"P",{"data-svelte-h":!0}),u(W)!=="svelte-1c934ym"&&(W.textContent=dt),Ze=n(e),r(q.$$.fragment,e),Ge=n(e),X=d(e,"P",{"data-svelte-h":!0}),u(X)!=="svelte-80vnaq"&&(X.innerHTML=mt),Re=n(e),r(H.$$.fragment,e),_e=n(e),L=d(e,"P",{"data-svelte-h":!0}),u(L)!=="svelte-ybd6o9"&&(L.innerHTML=ot),Ce=n(e),r(V.$$.fragment,e),Ie=n(e),z=d(e,"P",{"data-svelte-h":!0}),u(z)!=="svelte-1ewopiu"&&(z.innerHTML=rt),ke=n(e),r(B.$$.fragment,e),ve=n(e),N=d(e,"P",{"data-svelte-h":!0}),u(N)!=="svelte-1xj8y6m"&&(N.innerHTML=gt),Fe=n(e),r(P.$$.fragment,e),xe=n(e),E=d(e,"P",{"data-svelte-h":!0}),u(E)!=="svelte-3lgcx6"&&(E.innerHTML=ct),Ye=n(e),r(Q.$$.fragment,e),We=n(e),S=d(e,"P",{"data-svelte-h":!0}),u(S)!=="svelte-1jur300"&&(S.innerHTML=ht),qe=n(e),r(D.$$.fragment,e),Xe=n(e),r(w.$$.fragment,e),He=n(e),r(A.$$.fragment,e),Le=n(e),K=d(e,"P",{"data-svelte-h":!0}),u(K)!=="svelte-6p55vh"&&(K.innerHTML=ft),Ve=n(e),O=d(e,"P",{"data-svelte-h":!0}),u(O)!=="svelte-1e5cszd"&&(O.textContent=ut),ze=n(e),r(ee.$$.fragment,e),Be=n(e),r(te.$$.fragment,e),Ne=n(e),ae=d(e,"P",{"data-svelte-h":!0}),u(ae)!=="svelte-1nakidu"&&(ae.innerHTML=yt),Pe=n(e),r(se.$$.fragment,e),Ee=n(e),le=d(e,"P",{"data-svelte-h":!0}),u(le)!=="svelte-1hi5tci"&&(le.innerHTML=$t),Qe=n(e),ne=d(e,"P",{"data-svelte-h":!0}),u(ne)!=="svelte-xtdcs0"&&(ne.innerHTML=Mt),Se=n(e),r(ie.$$.fragment,e),De=n(e),pe=d(e,"P",{"data-svelte-h":!0}),u(pe)!=="svelte-1unz013"&&(pe.innerHTML=bt),Ae=n(e),r(de.$$.fragment,e),Ke=n(e),me=d(e,"P",{}),jt(me).forEach(a),this.h()},h(){Ut(i,"name","hf:doc:metadata"),Ut(i,"content",Wt)},m(e,t){It(document.head,i),s(e,$,t),s(e,m,t),s(e,M,t),g(j,e,t),s(e,re,t),s(e,U,t),s(e,ge,t),g(J,e,t),s(e,ce,t),s(e,Z,t),s(e,he,t),g(G,e,t),s(e,fe,t),g(T,e,t),s(e,ue,t),s(e,R,t),s(e,ye,t),g(_,e,t),s(e,$e,t),s(e,C,t),s(e,Me,t),g(I,e,t),s(e,be,t),s(e,k,t),s(e,Je,t),g(v,e,t),s(e,Te,t),g(F,e,t),s(e,we,t),s(e,x,t),s(e,je,t),g(Y,e,t),s(e,Ue,t),s(e,W,t),s(e,Ze,t),g(q,e,t),s(e,Ge,t),s(e,X,t),s(e,Re,t),g(H,e,t),s(e,_e,t),s(e,L,t),s(e,Ce,t),g(V,e,t),s(e,Ie,t),s(e,z,t),s(e,ke,t),g(B,e,t),s(e,ve,t),s(e,N,t),s(e,Fe,t),g(P,e,t),s(e,xe,t),s(e,E,t),s(e,Ye,t),g(Q,e,t),s(e,We,t),s(e,S,t),s(e,qe,t),g(D,e,t),s(e,Xe,t),g(w,e,t),s(e,He,t),g(A,e,t),s(e,Le,t),s(e,K,t),s(e,Ve,t),s(e,O,t),s(e,ze,t),g(ee,e,t),s(e,Be,t),g(te,e,t),s(e,Ne,t),s(e,ae,t),s(e,Pe,t),g(se,e,t),s(e,Ee,t),s(e,le,t),s(e,Qe,t),s(e,ne,t),s(e,Se,t),g(ie,e,t),s(e,De,t),s(e,pe,t),s(e,Ae,t),g(de,e,t),s(e,Ke,t),s(e,me,t),Oe=!0},p(e,[t]){const Jt={};t&2&&(Jt.$$scope={dirty:t,ctx:e}),J.$set(Jt);const Tt={};t&2&&(Tt.$$scope={dirty:t,ctx:e}),T.$set(Tt);const wt={};t&2&&(wt.$$scope={dirty:t,ctx:e}),w.$set(wt)},i(e){Oe||(c(j.$$.fragment,e),c(J.$$.fragment,e),c(G.$$.fragment,e),c(T.$$.fragment,e),c(_.$$.fragment,e),c(I.$$.fragment,e),c(v.$$.fragment,e),c(F.$$.fragment,e),c(Y.$$.fragment,e),c(q.$$.fragment,e),c(H.$$.fragment,e),c(V.$$.fragment,e),c(B.$$.fragment,e),c(P.$$.fragment,e),c(Q.$$.fragment,e),c(D.$$.fragment,e),c(w.$$.fragment,e),c(A.$$.fragment,e),c(ee.$$.fragment,e),c(te.$$.fragment,e),c(se.$$.fragment,e),c(ie.$$.fragment,e),c(de.$$.fragment,e),Oe=!0)},o(e){h(j.$$.fragment,e),h(J.$$.fragment,e),h(G.$$.fragment,e),h(T.$$.fragment,e),h(_.$$.fragment,e),h(I.$$.fragment,e),h(v.$$.fragment,e),h(F.$$.fragment,e),h(Y.$$.fragment,e),h(q.$$.fragment,e),h(H.$$.fragment,e),h(V.$$.fragment,e),h(B.$$.fragment,e),h(P.$$.fragment,e),h(Q.$$.fragment,e),h(D.$$.fragment,e),h(w.$$.fragment,e),h(A.$$.fragment,e),h(ee.$$.fragment,e),h(te.$$.fragment,e),h(se.$$.fragment,e),h(ie.$$.fragment,e),h(de.$$.fragment,e),Oe=!1},d(e){e&&(a($),a(m),a(M),a(re),a(U),a(ge),a(ce),a(Z),a(he),a(fe),a(ue),a(R),a(ye),a($e),a(C),a(Me),a(be),a(k),a(Je),a(Te),a(we),a(x),a(je),a(Ue),a(W),a(Ze),a(Ge),a(X),a(Re),a(_e),a(L),a(Ce),a(Ie),a(z),a(ke),a(ve),a(N),a(Fe),a(xe),a(E),a(Ye),a(We),a(S),a(qe),a(Xe),a(He),a(Le),a(K),a(Ve),a(O),a(ze),a(Be),a(Ne),a(ae),a(Pe),a(Ee),a(le),a(Qe),a(ne),a(Se),a(De),a(pe),a(Ae),a(Ke),a(me)),a(i),f(j,e),f(J,e),f(G,e),f(T,e),f(_,e),f(I,e),f(v,e),f(F,e),f(Y,e),f(q,e),f(H,e),f(V,e),f(B,e),f(P,e),f(Q,e),f(D,e),f(w,e),f(A,e),f(ee,e),f(te,e),f(se,e),f(ie,e),f(de,e)}}}const Wt='{"title":"Load image data","local":"load-image-data","sections":[{"title":"Local files","local":"local-files","sections":[],"depth":2},{"title":"ImageFolder","local":"imagefolder","sections":[],"depth":2},{"title":"WebDataset","local":"webdataset","sections":[],"depth":2},{"title":"Image decoding","local":"image-decoding","sections":[],"depth":2}],"depth":1}';function qt(b){return Gt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Bt extends Rt{constructor(i){super(),_t(this,i,qt,Yt,Zt,{})}}export{Bt as component};
