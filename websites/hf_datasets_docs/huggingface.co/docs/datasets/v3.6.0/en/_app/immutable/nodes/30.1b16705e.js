import{s as hn,o as un,n as xt}from"../chunks/scheduler.bdbef820.js";import{S as yn,i as Mn,g as p,s as l,r as o,A as fn,h as i,f as a,c as n,j as tl,u as r,x as u,k as al,y as gn,a as e,v as d,d as c,t as m,w as h}from"../chunks/index.c0aea24a.js";import{T as Yt}from"../chunks/Tip.31005f7d.js";import{C as f}from"../chunks/CodeBlock.e814ab8d.js";import{C as Nt}from"../chunks/CodeBlockFw.ce0c10d4.js";import{H as j,E as jn}from"../chunks/index.89e522f3.js";function Jn(T){let y,g='Refer to the <a href="./upload_dataset">Upload a dataset to the Hub</a> tutorial for more details on how to create a dataset repository on the Hub, and how to upload your data files.';return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-1e2wel8"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function Tn(T){let y,g='If you don‚Äôt specify which data files to use, <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> will return all the data files. This can take a long time if you load a large dataset like C4, which is approximately 13TB of data.';return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-1lexrj7"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function wn(T){let y,g='For more details, check out the <a href="tabular_load#csv-files">how to load tabular datasets from CSV files</a> guide.';return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-1weatp9"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function bn(T){let y,g='For more details, check out the <a href="tabular_load#databases">how to load tabular datasets from SQL databases</a> guide.';return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-16hohe8"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function Un(T){let y,g='For more details, check out the <a href="tabular_load#pandas-dataframes">how to load tabular datasets from Pandas DataFrames</a> guide.';return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-1cfiha7"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function $n(T){let y,g="<code>pct1_dropremainder</code> rounding may truncate the last examples in a dataset if the number of examples in your dataset don‚Äôt divide evenly by 100.";return{c(){y=p("p"),y.innerHTML=g},l(M){y=i(M,"P",{"data-svelte-h":!0}),u(y)!=="svelte-6d7bkq"&&(y.innerHTML=g)},m(M,J){e(M,y,J)},p:xt,d(M){M&&a(y)}}}function Cn(T){let y,g,M,J,G,Wt,I,el="Your data can be stored in various places; they can be on your local machine‚Äôs disk, in a Github repository, and in in-memory data structures like Python dictionaries and Pandas DataFrames. Wherever a dataset is stored, ü§ó Datasets can help you load it.",zt,k,ll="This guide will show you how to load a dataset from:",Qt,_,nl="<li>The Hugging Face Hub</li> <li>Local files</li> <li>In-memory data</li> <li>Offline</li> <li>A specific slice of a split</li> <li>Local loading script (legacy)</li>",Vt,Z,pl='For more details specific to loading other dataset modalities, take a look at the <a class="underline decoration-pink-400 decoration-2 font-semibold" href="./audio_load">load audio dataset guide</a>, the <a class="underline decoration-yellow-400 decoration-2 font-semibold" href="./image_load">load image dataset guide</a>, the <a class="underline decoration-blue-400 decoration-2 font-semibold" href="./video_load">load video dataset guide</a>, or the <a class="underline decoration-green-400 decoration-2 font-semibold" href="./nlp_load">load text dataset guide</a>.',Ht,vt,Bt,q,Lt,v,il='Datasets are loaded from a dataset loading script that downloads and generates the dataset. However, you can also load a dataset from any dataset repository on the Hub without a loading script! Begin by <a href="share#create-the-repository">creating a dataset repository</a> and upload your data files. Now you can use the <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> function to load the dataset.',St,F,ol='For example, try loading the files from this <a href="https://huggingface.co/datasets/lhoestq/demo1" rel="nofollow">demo repository</a> by providing the repository namespace and dataset name. This dataset repository contains CSV files, and the code below loads the dataset from the CSV files:',Et,Y,Dt,x,rl="Some datasets may have more than one version based on Git tags, branches, or commits. Use the <code>revision</code> parameter to specify the dataset version you want to load:",At,X,Pt,w,Kt,N,dl="A dataset without a loading script by default loads all the data into the <code>train</code> split. Use the <code>data_files</code> parameter to map data files to splits like <code>train</code>, <code>validation</code> and <code>test</code>:",Ot,W,sa,b,ta,z,cl="You can also load a specific subset of the files with the <code>data_files</code> or <code>data_dir</code> parameter. These parameters can accept a relative path which resolves to the base path corresponding to where the dataset is loaded from.",aa,Q,ea,V,ml="The <code>split</code> parameter can also map a data file to a specific split:",la,H,na,B,pa,L,hl='Datasets can be loaded from local files stored on your computer and from remote files. The datasets are most likely stored as a <code>csv</code>, <code>json</code>, <code>txt</code> or <code>parquet</code> file. The <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> function can load each of these file types.',ia,S,oa,E,ul="ü§ó Datasets can read a dataset made up of one or several CSV files (in this case, pass your CSV files as a list):",ra,D,da,U,ca,A,ma,P,yl='JSON files are loaded directly with <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> as shown below:',ha,K,ua,O,Ml="JSON files have diverse formats, but we think the most efficient format is to have multiple JSON objects; each line represents an individual row of data. For example:",ya,ss,Ma,ts,fl="Another JSON format you may encounter is a nested field, in which case you‚Äôll need to specify the <code>field</code> argument as shown in the following:",fa,as,ga,es,gl="To load remote JSON files via HTTP, pass the URLs instead:",ja,ls,Ja,ns,jl="While these are the most common JSON formats, you‚Äôll see other datasets that are formatted differently. ü§ó Datasets recognizes these other formats and will fallback accordingly on the Python JSON loading methods to handle them.",Ta,ps,wa,is,Jl="Parquet files are stored in a columnar format, unlike row-based files like a CSV. Large datasets may be stored in a Parquet file because it is more efficient and faster at returning your query.",ba,os,Tl="To load a Parquet file:",Ua,rs,$a,ds,wl="To load remote Parquet files via HTTP, pass the URLs instead:",Ca,cs,Ra,ms,Ga,hs,bl="Arrow files are stored in an in-memory columnar format, unlike row-based formats like CSV and uncompressed formats like Parquet.",Ia,us,Ul="To load an Arrow file:",ka,ys,_a,Ms,$l="To load remote Arrow files via HTTP, pass the URLs instead:",Za,fs,qa,gs,Cl='Arrow is the file format used by ü§ó Datasets under the hood, therefore you can load a local Arrow file using <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_file">Dataset.from_file()</a> directly:',va,js,Fa,Js,Rl=`Unlike <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>, <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_file">Dataset.from_file()</a> memory maps the Arrow file without preparing the dataset in the cache, saving you disk space.
The cache directory to store intermediate processing results will be the Arrow file directory in that case.`,Ya,Ts,Gl="For now only the Arrow streaming format is supported. The Arrow IPC file format (also known as Feather V2) is not supported.",xa,ws,Xa,bs,Il='Read database contents with <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_sql">from_sql()</a> by specifying the URI to connect to your database. You can read both table names and queries:',Na,Us,Wa,$,za,$s,Qa,Cs,kl=`The <a href="https://github.com/webdataset/webdataset" rel="nofollow">WebDataset</a> format is based on TAR archives and is suitable for big image datasets.
Because of their size, WebDatasets are generally loaded in streaming mode (using <code>streaming=True</code>).`,Va,Rs,_l="You can load a WebDataset like this:",Ha,Gs,Ba,Is,Zl="To load remote WebDatasets via HTTP, pass the URLs instead:",La,ks,Sa,_s,Ea,Zs,ql="When a dataset is made of several files (that we call ‚Äúshards‚Äù), it is possible to significantly speed up the dataset downloading and preparation step.",Da,qs,vl=`You can choose how many processes you‚Äôd like to use to prepare a dataset in parallel using <code>num_proc</code>.
In this case, each process is given a subset of shards to prepare:`,Aa,vs,Pa,Fs,Ka,Ys,Fl='ü§ó Datasets will also allow you to create a <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset">Dataset</a> directly from in-memory data structures like Python dictionaries and Pandas DataFrames.',Oa,xs,se,Xs,Yl='Load Python dictionaries with <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_dict">from_dict()</a>:',te,Ns,ae,Ws,ee,zs,xl="Load a list of Python dictionaries with <code>from_list()</code>:",le,Qs,ne,Vs,pe,Hs,Xl='Create a dataset from a Python generator with <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_generator">from_generator()</a>:',ie,Bs,oe,Ls,Nl="This approach supports loading data larger than available memory.",re,Ss,Wl="You can also define a sharded dataset by passing lists to <code>gen_kwargs</code>:",de,Es,ce,Ds,me,As,zl='Load Pandas DataFrames with <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Dataset.from_pandas">from_pandas()</a>:',he,Ps,ue,C,ye,Ks,Me,Os,Ql="Even if you don‚Äôt have an internet connection, it is still possible to load a dataset. As long as you‚Äôve downloaded a dataset from the Hub repository before, it should be cached. This means you can reload the dataset from the cache and use it offline.",fe,st,Vl="If you know you won‚Äôt have internet access, you can run ü§ó Datasets in full offline mode. This saves time because instead of waiting for the Dataset builder download to time out, ü§ó Datasets will look directly in the cache. Set the environment variable <code>HF_HUB_OFFLINE</code> to <code>1</code> to enable full offline mode.",ge,tt,je,at,Hl='You can also choose only to load specific slices of a split. There are two options for slicing a split: using strings or the <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.ReadInstruction">ReadInstruction</a> API. Strings are more compact and readable for simple cases, while <a href="/docs/datasets/v3.6.0/en/package_reference/builder_classes#datasets.ReadInstruction">ReadInstruction</a> is easier to use with variable slicing parameters.',Je,et,Bl="Concatenate a <code>train</code> and <code>test</code> split by:",Te,lt,we,nt,Ll="Select specific rows of the <code>train</code> split:",be,pt,Ue,it,Sl="Or select a percentage of a split with:",$e,ot,Ce,rt,El="Select a combination of percentages from each split:",Re,dt,Ge,ct,Dl="Finally, you can even create cross-validated splits. The example below creates 10-fold cross-validated splits. Each validation dataset is a 10% chunk, and the training dataset makes up the remaining complementary 90% chunk:",Ie,mt,ke,ht,_e,ut,Al="The default behavior is to round the boundaries to the nearest integer for datasets where the requested slice boundaries do not divide evenly by 100. As shown below, some slices may contain more examples than others. For instance, if the following train split includes 999 records, then:",Ze,yt,qe,Mt,Pl="If you want equal sized splits, use <code>pct1_dropremainder</code> rounding instead. This treats the specified percentage boundaries as multiples of 1%.",ve,ft,Fe,R,Ye,Ft,xe,gt,Xe,jt,Kl="Sometimes, you may get unexpected results when you load a dataset. Two of the most common issues you may encounter are manually downloading a dataset and specifying features of a dataset.",Ne,Jt,We,Tt,Ol='When you create a dataset from local files, the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> are automatically inferred by <a href="https://arrow.apache.org/docs/" rel="nofollow">Apache Arrow</a>. However, the dataset‚Äôs features may not always align with your expectations, or you may want to define the features yourself. The following example shows how you can add custom labels with the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.ClassLabel">ClassLabel</a> feature.',ze,wt,sn='Start by defining your own labels with the <a href="/docs/datasets/v3.6.0/en/package_reference/main_classes#datasets.Features">Features</a> class:',Qe,bt,Ve,Ut,tn='Next, specify the <code>features</code> parameter in <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a> with the features you just created:',He,$t,Be,Ct,an="Now when you look at your dataset features, you can see it uses the custom labels you defined:",Le,Rt,Se,Gt,Ee,It,en='You may have a ü§ó Datasets loading script locally on your computer. In this case, load the dataset by passing one of the following paths to <a href="/docs/datasets/v3.6.0/en/package_reference/loading_methods#datasets.load_dataset">load_dataset()</a>:',De,kt,ln="<li>The local path to the loading script file.</li> <li>The local path to the directory containing the loading script file (only if the script file has the same name as the directory).</li>",Ae,_t,nn="Pass <code>trust_remote_code=True</code> to allow ü§ó Datasets to execute the loading script:",Pe,Zt,Ke,qt,Oe,Xt,sl;return G=new j({props:{title:"Load",local:"load",headingTag:"h1"}}),q=new j({props:{title:"Hugging Face Hub",local:"hugging-face-hub",headingTag:"h2"}}),Y=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJsaG9lc3RxJTJGZGVtbzElMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;lhoestq/demo1&quot;</span>)`,wrap:!1}}),X=new f({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMEElMjAlMjAlMjJsaG9lc3RxJTJGY3VzdG9tX3NxdWFkJTIyJTJDJTBBJTIwJTIwcmV2aXNpb24lM0QlMjJtYWluJTIyJTIwJTIwJTIzJTIwdGFnJTIwbmFtZSUyQyUyMG9yJTIwYnJhbmNoJTIwbmFtZSUyQyUyMG9yJTIwY29tbWl0JTIwaGFzaCUwQSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(
<span class="hljs-meta">... </span>  <span class="hljs-string">&quot;lhoestq/custom_squad&quot;</span>,
<span class="hljs-meta">... </span>  revision=<span class="hljs-string">&quot;main&quot;</span>  <span class="hljs-comment"># tag name, or branch name, or commit hash</span>
<span class="hljs-meta">... </span>)`,wrap:!1}}),w=new Yt({props:{$$slots:{default:[Jn]},$$scope:{ctx:T}}}),W=new f({props:{code:"ZGF0YV9maWxlcyUyMCUzRCUyMCU3QiUyMnRyYWluJTIyJTNBJTIwJTIydHJhaW4uY3N2JTIyJTJDJTIwJTIydGVzdCUyMiUzQSUyMCUyMnRlc3QuY3N2JTIyJTdEJTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJuYW1lc3BhY2UlMkZ5b3VyX2RhdGFzZXRfbmFtZSUyMiUyQyUyMGRhdGFfZmlsZXMlM0RkYXRhX2ZpbGVzKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>data_files = {<span class="hljs-string">&quot;train&quot;</span>: <span class="hljs-string">&quot;train.csv&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;test.csv&quot;</span>}
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;namespace/your_dataset_name&quot;</span>, data_files=data_files)`,wrap:!1}}),b=new Yt({props:{warning:!0,$$slots:{default:[Tn]},$$scope:{ctx:T}}}),Q=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBYzRfc3Vic2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmFsbGVuYWklMkZjNCUyMiUyQyUyMGRhdGFfZmlsZXMlM0QlMjJlbiUyRmM0LXRyYWluLjAwMDAqLW9mLTAxMDI0Lmpzb24uZ3olMjIpJTBBJTBBYzRfc3Vic2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmFsbGVuYWklMkZjNCUyMiUyQyUyMGRhdGFfZGlyJTNEJTIyZW4lMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-comment"># load files that match the grep pattern</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>c4_subset = load_dataset(<span class="hljs-string">&quot;allenai/c4&quot;</span>, data_files=<span class="hljs-string">&quot;en/c4-train.0000*-of-01024.json.gz&quot;</span>)

<span class="hljs-comment"># load dataset from the en directory on the Hub</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>c4_subset = load_dataset(<span class="hljs-string">&quot;allenai/c4&quot;</span>, data_dir=<span class="hljs-string">&quot;en&quot;</span>)`,wrap:!1}}),H=new f({props:{code:"ZGF0YV9maWxlcyUyMCUzRCUyMCU3QiUyMnZhbGlkYXRpb24lMjIlM0ElMjAlMjJlbiUyRmM0LXZhbGlkYXRpb24uKi5qc29uLmd6JTIyJTdEJTBBYzRfdmFsaWRhdGlvbiUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJhbGxlbmFpJTJGYzQlMjIlMkMlMjBkYXRhX2ZpbGVzJTNEZGF0YV9maWxlcyUyQyUyMHNwbGl0JTNEJTIydmFsaWRhdGlvbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>data_files = {<span class="hljs-string">&quot;validation&quot;</span>: <span class="hljs-string">&quot;en/c4-validation.*.json.gz&quot;</span>}
<span class="hljs-meta">&gt;&gt;&gt; </span>c4_validation = load_dataset(<span class="hljs-string">&quot;allenai/c4&quot;</span>, data_files=data_files, split=<span class="hljs-string">&quot;validation&quot;</span>)`,wrap:!1}}),B=new j({props:{title:"Local and remote files",local:"local-and-remote-files",headingTag:"h2"}}),S=new j({props:{title:"CSV",local:"csv",headingTag:"h3"}}),D=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJjc3YlMjIlMkMlMjBkYXRhX2ZpbGVzJTNEJTIybXlfZmlsZS5jc3YlMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;csv&quot;</span>, data_files=<span class="hljs-string">&quot;my_file.csv&quot;</span>)`,wrap:!1}}),U=new Yt({props:{$$slots:{default:[wn]},$$scope:{ctx:T}}}),A=new j({props:{title:"JSON",local:"json",headingTag:"h3"}}),K=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJqc29uJTIyJTJDJTIwZGF0YV9maWxlcyUzRCUyMm15X2ZpbGUuanNvbiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=<span class="hljs-string">&quot;my_file.json&quot;</span>)`,wrap:!1}}),ss=new f({props:{code:"JTdCJTIyYSUyMiUzQSUyMDElMkMlMjAlMjJiJTIyJTNBJTIwMi4wJTJDJTIwJTIyYyUyMiUzQSUyMCUyMmZvbyUyMiUyQyUyMCUyMmQlMjIlM0ElMjBmYWxzZSU3RCUwQSU3QiUyMmElMjIlM0ElMjA0JTJDJTIwJTIyYiUyMiUzQSUyMC01LjUlMkMlMjAlMjJjJTIyJTNBJTIwbnVsbCUyQyUyMCUyMmQlMjIlM0ElMjB0cnVlJTdE",highlighted:`<span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2.0</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;foo&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;d&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">{</span><span class="hljs-attr">&quot;a&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;b&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-5.5</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;d&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">}</span>`,wrap:!1}}),as=new f({props:{code:"JTBBZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJqc29uJTIyJTJDJTIwZGF0YV9maWxlcyUzRCUyMm15X2ZpbGUuanNvbiUyMiUyQyUyMGZpZWxkJTNEJTIyZGF0YSUyMik=",highlighted:`{<span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.1.0&quot;</span>,
 <span class="hljs-string">&quot;data&quot;</span>: [{<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&quot;b&quot;</span>: <span class="hljs-number">2.0</span>, <span class="hljs-string">&quot;c&quot;</span>: <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>: false},
          {<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-number">4</span>, <span class="hljs-string">&quot;b&quot;</span>: -<span class="hljs-number">5.5</span>, <span class="hljs-string">&quot;c&quot;</span>: null, <span class="hljs-string">&quot;d&quot;</span>: true}]
}

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=<span class="hljs-string">&quot;my_file.json&quot;</span>, field=<span class="hljs-string">&quot;data&quot;</span>)`,wrap:!1}}),ls=new f({props:{code:"YmFzZV91cmwlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRnJhanB1cmthci5naXRodWIuaW8lMkZTUXVBRC1leHBsb3JlciUyRmRhdGFzZXQlMkYlMjIlMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmpzb24lMjIlMkMlMjBkYXRhX2ZpbGVzJTNEJTdCJTIydHJhaW4lMjIlM0ElMjBiYXNlX3VybCUyMCUyQiUyMCUyMnRyYWluLXYxLjEuanNvbiUyMiUyQyUyMCUyMnZhbGlkYXRpb24lMjIlM0ElMjBiYXNlX3VybCUyMCUyQiUyMCUyMmRldi12MS4xLmpzb24lMjIlN0QlMkMlMjBmaWVsZCUzRCUyMmRhdGElMjIp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>base_url = <span class="hljs-string">&quot;https://rajpurkar.github.io/SQuAD-explorer/dataset/&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files={<span class="hljs-string">&quot;train&quot;</span>: base_url + <span class="hljs-string">&quot;train-v1.1.json&quot;</span>, <span class="hljs-string">&quot;validation&quot;</span>: base_url + <span class="hljs-string">&quot;dev-v1.1.json&quot;</span>}, field=<span class="hljs-string">&quot;data&quot;</span>)`,wrap:!1}}),ps=new j({props:{title:"Parquet",local:"parquet",headingTag:"h3"}}),rs=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJwYXJxdWV0JTIyJTJDJTIwZGF0YV9maWxlcyUzRCU3Qid0cmFpbiclM0ElMjAndHJhaW4ucGFycXVldCclMkMlMjAndGVzdCclM0ElMjAndGVzdC5wYXJxdWV0JyU3RCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;parquet&quot;</span>, data_files={<span class="hljs-string">&#x27;train&#x27;</span>: <span class="hljs-string">&#x27;train.parquet&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>: <span class="hljs-string">&#x27;test.parquet&#x27;</span>})`,wrap:!1}}),cs=new f({props:{code:"YmFzZV91cmwlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZ3aWtpbWVkaWElMkZ3aWtpcGVkaWElMkZyZXNvbHZlJTJGbWFpbiUyRjIwMjMxMTAxLmFiJTJGJTIyJTBBZGF0YV9maWxlcyUyMCUzRCUyMCU3QiUyMnRyYWluJTIyJTNBJTIwYmFzZV91cmwlMjAlMkIlMjAlMjJ0cmFpbi0wMDAwMC1vZi0wMDAwMS5wYXJxdWV0JTIyJTdEJTBBd2lraSUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJwYXJxdWV0JTIyJTJDJTIwZGF0YV9maWxlcyUzRGRhdGFfZmlsZXMlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>base_url = <span class="hljs-string">&quot;https://huggingface.co/datasets/wikimedia/wikipedia/resolve/main/20231101.ab/&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>data_files = {<span class="hljs-string">&quot;train&quot;</span>: base_url + <span class="hljs-string">&quot;train-00000-of-00001.parquet&quot;</span>}
<span class="hljs-meta">&gt;&gt;&gt; </span>wiki = load_dataset(<span class="hljs-string">&quot;parquet&quot;</span>, data_files=data_files, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),ms=new j({props:{title:"Arrow",local:"arrow",headingTag:"h3"}}),ys=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJhcnJvdyUyMiUyQyUyMGRhdGFfZmlsZXMlM0QlN0IndHJhaW4nJTNBJTIwJ3RyYWluLmFycm93JyUyQyUyMCd0ZXN0JyUzQSUyMCd0ZXN0LmFycm93JyU3RCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;arrow&quot;</span>, data_files={<span class="hljs-string">&#x27;train&#x27;</span>: <span class="hljs-string">&#x27;train.arrow&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>: <span class="hljs-string">&#x27;test.arrow&#x27;</span>})`,wrap:!1}}),fs=new f({props:{code:"YmFzZV91cmwlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZjcm9pc3NhbnRsbG0lMkZjcm9pc3NhbnRfZGF0YXNldCUyRnJlc29sdmUlMkZtYWluJTJGZW5nbGlzaF82NjBCXzExJTJGJTIyJTBBZGF0YV9maWxlcyUyMCUzRCUyMCU3QiUyMnRyYWluJTIyJTNBJTIwYmFzZV91cmwlMjAlMkIlMjAlMjJ0cmFpbiUyRmRhdGEtMDAwMDAtb2YtMDAwODAuYXJyb3clMjIlN0QlMEF3aWtpJTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmFycm93JTIyJTJDJTIwZGF0YV9maWxlcyUzRGRhdGFfZmlsZXMlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>base_url = <span class="hljs-string">&quot;https://huggingface.co/datasets/croissantllm/croissant_dataset/resolve/main/english_660B_11/&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>data_files = {<span class="hljs-string">&quot;train&quot;</span>: base_url + <span class="hljs-string">&quot;train/data-00000-of-00080.arrow&quot;</span>}
<span class="hljs-meta">&gt;&gt;&gt; </span>wiki = load_dataset(<span class="hljs-string">&quot;arrow&quot;</span>, data_files=data_files, split=<span class="hljs-string">&quot;train&quot;</span>)`,wrap:!1}}),js=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fZmlsZSglMjJkYXRhLmFycm93JTIyKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_file(<span class="hljs-string">&quot;data.arrow&quot;</span>)`,wrap:!1}}),ws=new j({props:{title:"SQL",local:"sql",headingTag:"h3"}}),Us=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fc3FsKCUyMmRhdGFfdGFibGVfbmFtZSUyMiUyQyUyMGNvbiUzRCUyMnNxbGl0ZSUzQSUyRiUyRiUyRnNxbGl0ZV9maWxlLmRiJTIyKSUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fc3FsKCUyMlNFTEVDVCUyMHRleHQlMjBGUk9NJTIwdGFibGUlMjBXSEVSRSUyMGxlbmd0aCh0ZXh0KSUyMCUzRSUyMDEwMCUyMExJTUlUJTIwMTAlMjIlMkMlMjBjb24lM0QlMjJzcWxpdGUlM0ElMkYlMkYlMkZzcWxpdGVfZmlsZS5kYiUyMik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-comment"># load entire table</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_sql(<span class="hljs-string">&quot;data_table_name&quot;</span>, con=<span class="hljs-string">&quot;sqlite:///sqlite_file.db&quot;</span>)
<span class="hljs-comment"># load from query</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_sql(<span class="hljs-string">&quot;SELECT text FROM table WHERE length(text) &gt; 100 LIMIT 10&quot;</span>, con=<span class="hljs-string">&quot;sqlite:///sqlite_file.db&quot;</span>)`,wrap:!1}}),$=new Yt({props:{$$slots:{default:[bn]},$$scope:{ctx:T}}}),$s=new j({props:{title:"WebDataset",local:"webdataset",headingTag:"h3"}}),Gs=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBcGF0aCUyMCUzRCUyMCUyMnBhdGglMkZ0byUyRnRyYWluJTJGKi50YXIlMjIlMEFkYXRhc2V0JTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMndlYmRhdGFzZXQlMjIlMkMlMjBkYXRhX2ZpbGVzJTNEJTdCJTIydHJhaW4lMjIlM0ElMjBwYXRoJTdEJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiUyMiUyQyUyMHN0cmVhbWluZyUzRFRydWUp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
&gt;&gt;&gt;
<span class="hljs-meta">&gt;&gt;&gt; </span>path = <span class="hljs-string">&quot;path/to/train/*.tar&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;webdataset&quot;</span>, data_files={<span class="hljs-string">&quot;train&quot;</span>: path}, split=<span class="hljs-string">&quot;train&quot;</span>, streaming=<span class="hljs-literal">True</span>)`,wrap:!1}}),ks=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBYmFzZV91cmwlMjAlM0QlMjAlMjJodHRwcyUzQSUyRiUyRmh1Z2dpbmdmYWNlLmNvJTJGZGF0YXNldHMlMkZsaG9lc3RxJTJGc21hbGwtcHVibGF5bmV0LXdkcyUyRnJlc29sdmUlMkZtYWluJTJGcHVibGF5bmV0LXRyYWluLSU3QmklM0EwNmQlN0QudGFyJTIyJTBBdXJscyUyMCUzRCUyMCU1QmJhc2VfdXJsLmZvcm1hdChpJTNEaSklMjBmb3IlMjBpJTIwaW4lMjByYW5nZSg0KSU1RCUwQWRhdGFzZXQlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJTIyd2ViZGF0YXNldCUyMiUyQyUyMGRhdGFfZmlsZXMlM0QlN0IlMjJ0cmFpbiUyMiUzQSUyMHVybHMlN0QlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyJTJDJTIwc3RyZWFtaW5nJTNEVHJ1ZSk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset
&gt;&gt;&gt;
<span class="hljs-meta">&gt;&gt;&gt; </span>base_url = <span class="hljs-string">&quot;https://huggingface.co/datasets/lhoestq/small-publaynet-wds/resolve/main/publaynet-train-{i:06d}.tar&quot;</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>urls = [base_url.<span class="hljs-built_in">format</span>(i=i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;webdataset&quot;</span>, data_files={<span class="hljs-string">&quot;train&quot;</span>: urls}, split=<span class="hljs-string">&quot;train&quot;</span>, streaming=<span class="hljs-literal">True</span>)`,wrap:!1}}),_s=new j({props:{title:"Multiprocessing",local:"multiprocessing",headingTag:"h2"}}),vs=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwbG9hZF9kYXRhc2V0JTBBJTBBaW1hZ2VuZXQlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJTIydGltbSUyRmltYWdlbmV0LTFrLXdkcyUyMiUyQyUyMG51bV9wcm9jJTNEOCklMEFtbF9saWJyaXNwZWVjaF9zcGFuaXNoJTIwJTNEJTIwbG9hZF9kYXRhc2V0KCUyMmZhY2Vib29rJTJGbXVsdGlsaW5ndWFsX2xpYnJpc3BlZWNoJTIyJTJDJTIwJTIyc3BhbmlzaCUyMiUyQyUyMG51bV9wcm9jJTNEOCk=",highlighted:`<span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

imagenet = load_dataset(<span class="hljs-string">&quot;timm/imagenet-1k-wds&quot;</span>, num_proc=<span class="hljs-number">8</span>)
ml_librispeech_spanish = load_dataset(<span class="hljs-string">&quot;facebook/multilingual_librispeech&quot;</span>, <span class="hljs-string">&quot;spanish&quot;</span>, num_proc=<span class="hljs-number">8</span>)`,wrap:!1}}),Fs=new j({props:{title:"In-memory data",local:"in-memory-data",headingTag:"h2"}}),xs=new j({props:{title:"Python dictionary",local:"python-dictionary",headingTag:"h3"}}),Ns=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQW15X2RpY3QlMjAlM0QlMjAlN0IlMjJhJTIyJTNBJTIwJTVCMSUyQyUyMDIlMkMlMjAzJTVEJTdEJTBBZGF0YXNldCUyMCUzRCUyMERhdGFzZXQuZnJvbV9kaWN0KG15X2RpY3Qp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>my_dict = {<span class="hljs-string">&quot;a&quot;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]}
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_dict(my_dict)`,wrap:!1}}),Ws=new j({props:{title:"Python list of dictionaries",local:"python-list-of-dictionaries",headingTag:"h3"}}),Qs=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQW15X2xpc3QlMjAlM0QlMjAlNUIlN0IlMjJhJTIyJTNBJTIwMSU3RCUyQyUyMCU3QiUyMmElMjIlM0ElMjAyJTdEJTJDJTIwJTdCJTIyYSUyMiUzQSUyMDMlN0QlNUQlMEFkYXRhc2V0JTIwJTNEJTIwRGF0YXNldC5mcm9tX2xpc3QobXlfbGlzdCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span>my_list = [{<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-number">1</span>}, {<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-number">2</span>}, {<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-number">3</span>}]
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_list(my_list)`,wrap:!1}}),Vs=new j({props:{title:"Python generator",local:"python-generator",headingTag:"h3"}}),Bs=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWRlZiUyMG15X2dlbigpJTNBJTBBJTIwJTIwJTIwJTIwZm9yJTIwaSUyMGluJTIwcmFuZ2UoMSUyQyUyMDQpJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIweWllbGQlMjAlN0IlMjJhJTIyJTNBJTIwaSU3RCUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fZ2VuZXJhdG9yKG15X2dlbik=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_gen</span>():
<span class="hljs-meta">... </span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">4</span>):
<span class="hljs-meta">... </span>        <span class="hljs-keyword">yield</span> {<span class="hljs-string">&quot;a&quot;</span>: i}
...
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_generator(my_gen)`,wrap:!1}}),Es=new f({props:{code:"ZGVmJTIwZ2VuKHNoYXJkcyklM0ElMEElMjAlMjAlMjAlMjBmb3IlMjBzaGFyZCUyMGluJTIwc2hhcmRzJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwd2l0aCUyMG9wZW4oc2hhcmQpJTIwYXMlMjBmJTNBJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZm9yJTIwbGluZSUyMGluJTIwZiUzQSUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMHlpZWxkJTIwJTdCJTIybGluZSUyMiUzQSUyMGxpbmUlN0QlMEFzaGFyZHMlMjAlM0QlMjAlNUJmJTIyZGF0YSU3QmklN0QudHh0JTIyJTIwZm9yJTIwaSUyMGluJTIwcmFuZ2UoMzIpJTVEJTBBZHMlMjAlM0QlMjBJdGVyYWJsZURhdGFzZXQuZnJvbV9nZW5lcmF0b3IoZ2VuJTJDJTIwZ2VuX2t3YXJncyUzRCU3QiUyMnNoYXJkcyUyMiUzQSUyMHNoYXJkcyU3RCklMEFkcyUyMCUzRCUyMGRzLnNodWZmbGUoc2VlZCUzRDQyJTJDJTIwYnVmZmVyX3NpemUlM0QxMF8wMDApJTIwJTIwJTIzJTIwc2h1ZmZsZXMlMjB0aGUlMjBzaGFyZHMlMjBvcmRlciUyMCUyQiUyMHVzZXMlMjBhJTIwc2h1ZmZsZSUyMGJ1ZmZlciUwQWZyb20lMjB0b3JjaC51dGlscy5kYXRhJTIwaW1wb3J0JTIwRGF0YUxvYWRlciUwQWRhdGFsb2FkZXIlMjAlM0QlMjBEYXRhTG9hZGVyKGRzLndpdGhfZm9ybWF0KCUyMnRvcmNoJTIyKSUyQyUyMG51bV93b3JrZXJzJTNENCklMjAlMjAlMjMlMjBnaXZlJTIwZWFjaCUyMHdvcmtlciUyMGElMjBzdWJzZXQlMjBvZiUyMDMyJTJGNCUzRDglMjBzaGFyZHM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen</span>(<span class="hljs-params">shards</span>):
<span class="hljs-meta">... </span>    <span class="hljs-keyword">for</span> shard <span class="hljs-keyword">in</span> shards:
<span class="hljs-meta">... </span>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(shard) <span class="hljs-keyword">as</span> f:
<span class="hljs-meta">... </span>            <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:
<span class="hljs-meta">... </span>                <span class="hljs-keyword">yield</span> {<span class="hljs-string">&quot;line&quot;</span>: line}
...
<span class="hljs-meta">&gt;&gt;&gt; </span>shards = [<span class="hljs-string">f&quot;data<span class="hljs-subst">{i}</span>.txt&quot;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = IterableDataset.from_generator(gen, gen_kwargs={<span class="hljs-string">&quot;shards&quot;</span>: shards})
<span class="hljs-meta">&gt;&gt;&gt; </span>ds = ds.shuffle(seed=<span class="hljs-number">42</span>, buffer_size=<span class="hljs-number">10_000</span>)  <span class="hljs-comment"># shuffles the shards order + uses a shuffle buffer</span>
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> DataLoader
<span class="hljs-meta">&gt;&gt;&gt; </span>dataloader = DataLoader(ds.with_format(<span class="hljs-string">&quot;torch&quot;</span>), num_workers=<span class="hljs-number">4</span>)  <span class="hljs-comment"># give each worker a subset of 32/4=8 shards</span>`,wrap:!1}}),Ds=new j({props:{title:"Pandas DataFrame",local:"pandas-dataframe",headingTag:"h3"}}),Ps=new f({props:{code:"ZnJvbSUyMGRhdGFzZXRzJTIwaW1wb3J0JTIwRGF0YXNldCUwQWltcG9ydCUyMHBhbmRhcyUyMGFzJTIwcGQlMEFkZiUyMCUzRCUyMHBkLkRhdGFGcmFtZSglN0IlMjJhJTIyJTNBJTIwJTVCMSUyQyUyMDIlMkMlMjAzJTVEJTdEKSUwQWRhdGFzZXQlMjAlM0QlMjBEYXRhc2V0LmZyb21fcGFuZGFzKGRmKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> Dataset
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd
<span class="hljs-meta">&gt;&gt;&gt; </span>df = pd.DataFrame({<span class="hljs-string">&quot;a&quot;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]})
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = Dataset.from_pandas(df)`,wrap:!1}}),C=new Yt({props:{$$slots:{default:[Un]},$$scope:{ctx:T}}}),Ks=new j({props:{title:"Offline",local:"offline",headingTag:"h2"}}),tt=new j({props:{title:"Slice splits",local:"slice-splits",headingTag:"h2"}}),lt=new Nt({props:{group1:{id:"stringapi",code:"dHJhaW5fdGVzdF9kcyUyMCUzRCUyMGRhdGFzZXRzLmxvYWRfZGF0YXNldCglMjJhamliYXdhLTIwMjMlMkZHZW5lcmFsLVN0b3JpZXMtQ29sbGVjdGlvbiUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMkJ0ZXN0JTIyKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_test_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train+test&quot;</span>)'},group2:{id:"readinstruction",code:"cmklMjAlM0QlMjBkYXRhc2V0cy5SZWFkSW5zdHJ1Y3Rpb24oJTIydHJhaW4lMjIpJTIwJTJCJTIwZGF0YXNldHMuUmVhZEluc3RydWN0aW9uKCUyMnRlc3QlMjIpJTBBdHJhaW5fdGVzdF9kcyUyMCUzRCUyMGRhdGFzZXRzLmxvYWRfZGF0YXNldCglMjJhamliYXdhLTIwMjMlMkZHZW5lcmFsLVN0b3JpZXMtQ29sbGVjdGlvbiUyMiUyQyUyMHNwbGl0JTNEcmkp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>ri = datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>) + datasets.ReadInstruction(<span class="hljs-string">&quot;test&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>train_test_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=ri)`},wrap:!1}}),pt=new Nt({props:{group1:{id:"stringapi",code:"dHJhaW5fMTBfMjBfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTVCMTAlM0EyMCU1RCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_10_20_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[10:20]&quot;</span>)'},group2:{id:"readinstruction",code:"dHJhaW5fMTBfMjBfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYm9va2NvcnB1JTIyJTJDJTIwc3BsaXQlM0RkYXRhc2V0cy5SZWFkSW5zdHJ1Y3Rpb24oJTIydHJhaW4lMjIlMkMlMjBmcm9tXyUzRDEwJTJDJTIwdG8lM0QyMCUyQyUyMHVuaXQlM0QlMjJhYnMlMjIpKQ==",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_10_20_ds = datasets.load_dataset(<span class="hljs-string">&quot;bookcorpu&quot;</span>, split=datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, from_=<span class="hljs-number">10</span>, to=<span class="hljs-number">20</span>, unit=<span class="hljs-string">&quot;abs&quot;</span>))'},wrap:!1}}),ot=new Nt({props:{group1:{id:"stringapi",code:"dHJhaW5fMTBwY3RfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTVCJTNBMTAlMjUlNUQlMjIp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_10pct_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[:10%]&quot;</span>)'},group2:{id:"readinstruction",code:"dHJhaW5fMTBfMjBfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRGRhdGFzZXRzLlJlYWRJbnN0cnVjdGlvbiglMjJ0cmFpbiUyMiUyQyUyMHRvJTNEMTAlMkMlMjB1bml0JTNEJTIyJTI1JTIyKSk=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_10_20_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, to=<span class="hljs-number">10</span>, unit=<span class="hljs-string">&quot;%&quot;</span>))'},wrap:!1}}),dt=new Nt({props:{group1:{id:"stringapi",code:"dHJhaW5fMTBfODBwY3RfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTVCJTNBMTAlMjUlNUQlMkJ0cmFpbiU1Qi04MCUyNSUzQSU1RCUyMik=",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>train_10_80pct_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[:10%]+train[-80%:]&quot;</span>)'},group2:{id:"readinstruction",code:"cmklMjAlM0QlMjAoZGF0YXNldHMuUmVhZEluc3RydWN0aW9uKCUyMnRyYWluJTIyJTJDJTIwdG8lM0QxMCUyQyUyMHVuaXQlM0QlMjIlMjUlMjIpJTIwJTJCJTIwZGF0YXNldHMuUmVhZEluc3RydWN0aW9uKCUyMnRyYWluJTIyJTJDJTIwZnJvbV8lM0QtODAlMkMlMjB1bml0JTNEJTIyJTI1JTIyKSklMEF0cmFpbl8xMF84MHBjdF9kcyUyMCUzRCUyMGRhdGFzZXRzLmxvYWRfZGF0YXNldCglMjJhamliYXdhLTIwMjMlMkZHZW5lcmFsLVN0b3JpZXMtQ29sbGVjdGlvbiUyMiUyQyUyMHNwbGl0JTNEcmkp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>ri = (datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, to=<span class="hljs-number">10</span>, unit=<span class="hljs-string">&quot;%&quot;</span>) + datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, from_=-<span class="hljs-number">80</span>, unit=<span class="hljs-string">&quot;%&quot;</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>train_10_80pct_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=ri)`},wrap:!1}}),mt=new Nt({props:{group1:{id:"stringapi",code:"dmFsX2RzJTIwJTNEJTIwZGF0YXNldHMubG9hZF9kYXRhc2V0KCUyMmFqaWJhd2EtMjAyMyUyRkdlbmVyYWwtU3Rvcmllcy1Db2xsZWN0aW9uJTIyJTJDJTIwc3BsaXQlM0QlNUJmJTIydHJhaW4lNUIlN0JrJTdEJTI1JTNBJTdCayUyQjEwJTdEJTI1JTVEJTIyJTIwZm9yJTIwayUyMGluJTIwcmFuZ2UoMCUyQyUyMDEwMCUyQyUyMDEwKSU1RCklMEF0cmFpbl9kcyUyMCUzRCUyMGRhdGFzZXRzLmxvYWRfZGF0YXNldCglMjJhamliYXdhLTIwMjMlMkZHZW5lcmFsLVN0b3JpZXMtQ29sbGVjdGlvbiUyMiUyQyUyMHNwbGl0JTNEJTVCZiUyMnRyYWluJTVCJTNBJTdCayU3RCUyNSU1RCUyQnRyYWluJTVCJTdCayUyQjEwJTdEJTI1JTNBJTVEJTIyJTIwZm9yJTIwayUyMGluJTIwcmFuZ2UoMCUyQyUyMDEwMCUyQyUyMDEwKSU1RCk=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>val_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=[<span class="hljs-string">f&quot;train[<span class="hljs-subst">{k}</span>%:<span class="hljs-subst">{k+<span class="hljs-number">10</span>}</span>%]&quot;</span> <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>)])
<span class="hljs-meta">&gt;&gt;&gt; </span>train_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=[<span class="hljs-string">f&quot;train[:<span class="hljs-subst">{k}</span>%]+train[<span class="hljs-subst">{k+<span class="hljs-number">10</span>}</span>%:]&quot;</span> <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>)])`},group2:{id:"readinstruction",code:"dmFsX2RzJTIwJTNEJTIwZGF0YXNldHMubG9hZF9kYXRhc2V0KCUyMmFqaWJhd2EtMjAyMyUyRkdlbmVyYWwtU3Rvcmllcy1Db2xsZWN0aW9uJTIyJTJDJTIwJTVCZGF0YXNldHMuUmVhZEluc3RydWN0aW9uKCUyMnRyYWluJTIyJTJDJTIwZnJvbV8lM0RrJTJDJTIwdG8lM0RrJTJCMTAlMkMlMjB1bml0JTNEJTIyJTI1JTIyKSUyMGZvciUyMGslMjBpbiUyMHJhbmdlKDAlMkMlMjAxMDAlMkMlMjAxMCklNUQpJTBBdHJhaW5fZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjAlNUIoZGF0YXNldHMuUmVhZEluc3RydWN0aW9uKCUyMnRyYWluJTIyJTJDJTIwdG8lM0RrJTJDJTIwdW5pdCUzRCUyMiUyNSUyMiklMjAlMkIlMjBkYXRhc2V0cy5SZWFkSW5zdHJ1Y3Rpb24oJTIydHJhaW4lMjIlMkMlMjBmcm9tXyUzRGslMkIxMCUyQyUyMHVuaXQlM0QlMjIlMjUlMjIpKSUyMGZvciUyMGslMjBpbiUyMHJhbmdlKDAlMkMlMjAxMDAlMkMlMjAxMCklNUQp",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>val_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, [datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, from_=k, to=k+<span class="hljs-number">10</span>, unit=<span class="hljs-string">&quot;%&quot;</span>) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>)])
<span class="hljs-meta">&gt;&gt;&gt; </span>train_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, [(datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, to=k, unit=<span class="hljs-string">&quot;%&quot;</span>) + datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, from_=k+<span class="hljs-number">10</span>, unit=<span class="hljs-string">&quot;%&quot;</span>)) <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">10</span>)])`},wrap:!1}}),ht=new j({props:{title:"Percent slicing and rounding",local:"percent-slicing-and-rounding",headingTag:"h3"}}),yt=new f({props:{code:"dHJhaW5fNTBfNTJfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTVCNTAlMjUlM0E1MiUyNSU1RCUyMiklMEF0cmFpbl81Ml81NF9kcyUyMCUzRCUyMGRhdGFzZXRzLmxvYWRfZGF0YXNldCglMjJhamliYXdhLTIwMjMlMkZHZW5lcmFsLVN0b3JpZXMtQ29sbGVjdGlvbiUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lNUI1MiUyNSUzQTU0JTI1JTVEJTIyKQ==",highlighted:`<span class="hljs-comment"># 19 records, from 500 (included) to 519 (excluded).</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>train_50_52_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[50%:52%]&quot;</span>)
<span class="hljs-comment"># 20 records, from 519 (included) to 539 (excluded).</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>train_52_54_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[52%:54%]&quot;</span>)`,wrap:!1}}),ft=new f({props:{code:"dHJhaW5fNTBfNTJwY3QxX2RzJTIwJTNEJTIwZGF0YXNldHMubG9hZF9kYXRhc2V0KCUyMmFqaWJhd2EtMjAyMyUyRkdlbmVyYWwtU3Rvcmllcy1Db2xsZWN0aW9uJTIyJTJDJTIwc3BsaXQlM0RkYXRhc2V0cy5SZWFkSW5zdHJ1Y3Rpb24oJTIydHJhaW4lMjIlMkMlMjBmcm9tXyUzRDUwJTJDJTIwdG8lM0Q1MiUyQyUyMHVuaXQlM0QlMjIlMjUlMjIlMkMlMjByb3VuZGluZyUzRCUyMnBjdDFfZHJvcHJlbWFpbmRlciUyMikpJTBBdHJhaW5fNTJfNTRwY3QxX2RzJTIwJTNEJTIwZGF0YXNldHMubG9hZF9kYXRhc2V0KCUyMmFqaWJhd2EtMjAyMyUyRkdlbmVyYWwtU3Rvcmllcy1Db2xsZWN0aW9uJTIyJTJDJTIwc3BsaXQlM0RkYXRhc2V0cy5SZWFkSW5zdHJ1Y3Rpb24oJTIydHJhaW4lMjIlMkNmcm9tXyUzRDUyJTJDJTIwdG8lM0Q1NCUyQyUyMHVuaXQlM0QlMjIlMjUlMjIlMkMlMjByb3VuZGluZyUzRCUyMnBjdDFfZHJvcHJlbWFpbmRlciUyMikpJTBBdHJhaW5fNTBfNTJwY3QxX2RzJTIwJTNEJTIwZGF0YXNldHMubG9hZF9kYXRhc2V0KCUyMmFqaWJhd2EtMjAyMyUyRkdlbmVyYWwtU3Rvcmllcy1Db2xsZWN0aW9uJTIyJTJDJTIwc3BsaXQlM0QlMjJ0cmFpbiU1QjUwJTI1JTNBNTIlMjUlNUQocGN0MV9kcm9wcmVtYWluZGVyKSUyMiklMEF0cmFpbl81Ml81NHBjdDFfZHMlMjAlM0QlMjBkYXRhc2V0cy5sb2FkX2RhdGFzZXQoJTIyYWppYmF3YS0yMDIzJTJGR2VuZXJhbC1TdG9yaWVzLUNvbGxlY3Rpb24lMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTVCNTIlMjUlM0E1NCUyNSU1RChwY3QxX2Ryb3ByZW1haW5kZXIpJTIyKQ==",highlighted:`<span class="hljs-comment"># 18 records, from 450 (included) to 468 (excluded).</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>train_50_52pct1_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>, from_=<span class="hljs-number">50</span>, to=<span class="hljs-number">52</span>, unit=<span class="hljs-string">&quot;%&quot;</span>, rounding=<span class="hljs-string">&quot;pct1_dropremainder&quot;</span>))
<span class="hljs-comment"># 18 records, from 468 (included) to 486 (excluded).</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>train_52_54pct1_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=datasets.ReadInstruction(<span class="hljs-string">&quot;train&quot;</span>,from_=<span class="hljs-number">52</span>, to=<span class="hljs-number">54</span>, unit=<span class="hljs-string">&quot;%&quot;</span>, rounding=<span class="hljs-string">&quot;pct1_dropremainder&quot;</span>))
<span class="hljs-comment"># Or equivalently:</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>train_50_52pct1_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[50%:52%](pct1_dropremainder)&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>train_52_54pct1_ds = datasets.load_dataset(<span class="hljs-string">&quot;ajibawa-2023/General-Stories-Collection&quot;</span>, split=<span class="hljs-string">&quot;train[52%:54%](pct1_dropremainder)&quot;</span>)`,wrap:!1}}),R=new Yt({props:{warning:!0,$$slots:{default:[$n]},$$scope:{ctx:T}}}),gt=new j({props:{title:"Troubleshooting",local:"troubleshooting",headingTag:"h2"}}),Jt=new j({props:{title:"Specify features",local:"specify-features",headingTag:"h3"}}),bt=new f({props:{code:"Y2xhc3NfbmFtZXMlMjAlM0QlMjAlNUIlMjJzYWRuZXNzJTIyJTJDJTIwJTIyam95JTIyJTJDJTIwJTIybG92ZSUyMiUyQyUyMCUyMmFuZ2VyJTIyJTJDJTIwJTIyZmVhciUyMiUyQyUyMCUyMnN1cnByaXNlJTIyJTVEJTBBZW1vdGlvbl9mZWF0dXJlcyUyMCUzRCUyMEZlYXR1cmVzKCU3Qid0ZXh0JyUzQSUyMFZhbHVlKCdzdHJpbmcnKSUyQyUyMCdsYWJlbCclM0ElMjBDbGFzc0xhYmVsKG5hbWVzJTNEY2xhc3NfbmFtZXMpJTdEKQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>class_names = [<span class="hljs-string">&quot;sadness&quot;</span>, <span class="hljs-string">&quot;joy&quot;</span>, <span class="hljs-string">&quot;love&quot;</span>, <span class="hljs-string">&quot;anger&quot;</span>, <span class="hljs-string">&quot;fear&quot;</span>, <span class="hljs-string">&quot;surprise&quot;</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>emotion_features = Features({<span class="hljs-string">&#x27;text&#x27;</span>: Value(<span class="hljs-string">&#x27;string&#x27;</span>), <span class="hljs-string">&#x27;label&#x27;</span>: ClassLabel(names=class_names)})`,wrap:!1}}),$t=new f({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCgnY3N2JyUyQyUyMGRhdGFfZmlsZXMlM0RmaWxlX2RpY3QlMkMlMjBkZWxpbWl0ZXIlM0QnJTNCJyUyQyUyMGNvbHVtbl9uYW1lcyUzRCU1Qid0ZXh0JyUyQyUyMCdsYWJlbCclNUQlMkMlMjBmZWF0dXJlcyUzRGVtb3Rpb25fZmVhdHVyZXMp",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&#x27;csv&#x27;</span>, data_files=file_dict, delimiter=<span class="hljs-string">&#x27;;&#x27;</span>, column_names=[<span class="hljs-string">&#x27;text&#x27;</span>, <span class="hljs-string">&#x27;label&#x27;</span>], features=emotion_features)',wrap:!1}}),Rt=new f({props:{code:"ZGF0YXNldCU1Qid0cmFpbiclNUQuZmVhdHVyZXM=",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-string">&#x27;train&#x27;</span>].features
{<span class="hljs-string">&#x27;text&#x27;</span>: Value(dtype=<span class="hljs-string">&#x27;string&#x27;</span>, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>),
<span class="hljs-string">&#x27;label&#x27;</span>: ClassLabel(names=[<span class="hljs-string">&#x27;sadness&#x27;</span>, <span class="hljs-string">&#x27;joy&#x27;</span>, <span class="hljs-string">&#x27;love&#x27;</span>, <span class="hljs-string">&#x27;anger&#x27;</span>, <span class="hljs-string">&#x27;fear&#x27;</span>, <span class="hljs-string">&#x27;surprise&#x27;</span>], <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span>)}`,wrap:!1}}),Gt=new j({props:{title:"(Legacy) Local loading script",local:"legacy-local-loading-script",headingTag:"h2"}}),Zt=new f({props:{code:"ZGF0YXNldCUyMCUzRCUyMGxvYWRfZGF0YXNldCglMjJwYXRoJTJGdG8lMkZsb2NhbCUyRmxvYWRpbmdfc2NyaXB0JTJGbG9hZGluZ19zY3JpcHQucHklMjIlMkMlMjBzcGxpdCUzRCUyMnRyYWluJTIyJTJDJTIwdHJ1c3RfcmVtb3RlX2NvZGUlM0RUcnVlKSUwQWRhdGFzZXQlMjAlM0QlMjBsb2FkX2RhdGFzZXQoJTIycGF0aCUyRnRvJTJGbG9jYWwlMkZsb2FkaW5nX3NjcmlwdCUyMiUyQyUyMHNwbGl0JTNEJTIydHJhaW4lMjIlMkMlMjB0cnVzdF9yZW1vdGVfY29kZSUzRFRydWUpJTIwJTIwJTIzJTIwZXF1aXZhbGVudCUyMGJlY2F1c2UlMjB0aGUlMjBmaWxlJTIwaGFzJTIwdGhlJTIwc2FtZSUyMG5hbWUlMjBhcyUyMHRoZSUyMGRpcmVjdG9yeQ==",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;path/to/local/loading_script/loading_script.py&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>, trust_remote_code=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;path/to/local/loading_script&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>, trust_remote_code=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># equivalent because the file has the same name as the directory</span>`,wrap:!1}}),qt=new jn({props:{source:"https://github.com/huggingface/datasets/blob/main/docs/source/loading.mdx"}}),{c(){y=p("meta"),g=l(),M=p("p"),J=l(),o(G.$$.fragment),Wt=l(),I=p("p"),I.textContent=el,zt=l(),k=p("p"),k.textContent=ll,Qt=l(),_=p("ul"),_.innerHTML=nl,Vt=l(),Z=p("p"),Z.innerHTML=pl,Ht=l(),vt=p("a"),Bt=l(),o(q.$$.fragment),Lt=l(),v=p("p"),v.innerHTML=il,St=l(),F=p("p"),F.innerHTML=ol,Et=l(),o(Y.$$.fragment),Dt=l(),x=p("p"),x.innerHTML=rl,At=l(),o(X.$$.fragment),Pt=l(),o(w.$$.fragment),Kt=l(),N=p("p"),N.innerHTML=dl,Ot=l(),o(W.$$.fragment),sa=l(),o(b.$$.fragment),ta=l(),z=p("p"),z.innerHTML=cl,aa=l(),o(Q.$$.fragment),ea=l(),V=p("p"),V.innerHTML=ml,la=l(),o(H.$$.fragment),na=l(),o(B.$$.fragment),pa=l(),L=p("p"),L.innerHTML=hl,ia=l(),o(S.$$.fragment),oa=l(),E=p("p"),E.textContent=ul,ra=l(),o(D.$$.fragment),da=l(),o(U.$$.fragment),ca=l(),o(A.$$.fragment),ma=l(),P=p("p"),P.innerHTML=yl,ha=l(),o(K.$$.fragment),ua=l(),O=p("p"),O.textContent=Ml,ya=l(),o(ss.$$.fragment),Ma=l(),ts=p("p"),ts.innerHTML=fl,fa=l(),o(as.$$.fragment),ga=l(),es=p("p"),es.textContent=gl,ja=l(),o(ls.$$.fragment),Ja=l(),ns=p("p"),ns.textContent=jl,Ta=l(),o(ps.$$.fragment),wa=l(),is=p("p"),is.textContent=Jl,ba=l(),os=p("p"),os.textContent=Tl,Ua=l(),o(rs.$$.fragment),$a=l(),ds=p("p"),ds.textContent=wl,Ca=l(),o(cs.$$.fragment),Ra=l(),o(ms.$$.fragment),Ga=l(),hs=p("p"),hs.textContent=bl,Ia=l(),us=p("p"),us.textContent=Ul,ka=l(),o(ys.$$.fragment),_a=l(),Ms=p("p"),Ms.textContent=$l,Za=l(),o(fs.$$.fragment),qa=l(),gs=p("p"),gs.innerHTML=Cl,va=l(),o(js.$$.fragment),Fa=l(),Js=p("p"),Js.innerHTML=Rl,Ya=l(),Ts=p("p"),Ts.textContent=Gl,xa=l(),o(ws.$$.fragment),Xa=l(),bs=p("p"),bs.innerHTML=Il,Na=l(),o(Us.$$.fragment),Wa=l(),o($.$$.fragment),za=l(),o($s.$$.fragment),Qa=l(),Cs=p("p"),Cs.innerHTML=kl,Va=l(),Rs=p("p"),Rs.textContent=_l,Ha=l(),o(Gs.$$.fragment),Ba=l(),Is=p("p"),Is.textContent=Zl,La=l(),o(ks.$$.fragment),Sa=l(),o(_s.$$.fragment),Ea=l(),Zs=p("p"),Zs.textContent=ql,Da=l(),qs=p("p"),qs.innerHTML=vl,Aa=l(),o(vs.$$.fragment),Pa=l(),o(Fs.$$.fragment),Ka=l(),Ys=p("p"),Ys.innerHTML=Fl,Oa=l(),o(xs.$$.fragment),se=l(),Xs=p("p"),Xs.innerHTML=Yl,te=l(),o(Ns.$$.fragment),ae=l(),o(Ws.$$.fragment),ee=l(),zs=p("p"),zs.innerHTML=xl,le=l(),o(Qs.$$.fragment),ne=l(),o(Vs.$$.fragment),pe=l(),Hs=p("p"),Hs.innerHTML=Xl,ie=l(),o(Bs.$$.fragment),oe=l(),Ls=p("p"),Ls.textContent=Nl,re=l(),Ss=p("p"),Ss.innerHTML=Wl,de=l(),o(Es.$$.fragment),ce=l(),o(Ds.$$.fragment),me=l(),As=p("p"),As.innerHTML=zl,he=l(),o(Ps.$$.fragment),ue=l(),o(C.$$.fragment),ye=l(),o(Ks.$$.fragment),Me=l(),Os=p("p"),Os.textContent=Ql,fe=l(),st=p("p"),st.innerHTML=Vl,ge=l(),o(tt.$$.fragment),je=l(),at=p("p"),at.innerHTML=Hl,Je=l(),et=p("p"),et.innerHTML=Bl,Te=l(),o(lt.$$.fragment),we=l(),nt=p("p"),nt.innerHTML=Ll,be=l(),o(pt.$$.fragment),Ue=l(),it=p("p"),it.textContent=Sl,$e=l(),o(ot.$$.fragment),Ce=l(),rt=p("p"),rt.textContent=El,Re=l(),o(dt.$$.fragment),Ge=l(),ct=p("p"),ct.textContent=Dl,Ie=l(),o(mt.$$.fragment),ke=l(),o(ht.$$.fragment),_e=l(),ut=p("p"),ut.textContent=Al,Ze=l(),o(yt.$$.fragment),qe=l(),Mt=p("p"),Mt.innerHTML=Pl,ve=l(),o(ft.$$.fragment),Fe=l(),o(R.$$.fragment),Ye=l(),Ft=p("a"),xe=l(),o(gt.$$.fragment),Xe=l(),jt=p("p"),jt.textContent=Kl,Ne=l(),o(Jt.$$.fragment),We=l(),Tt=p("p"),Tt.innerHTML=Ol,ze=l(),wt=p("p"),wt.innerHTML=sn,Qe=l(),o(bt.$$.fragment),Ve=l(),Ut=p("p"),Ut.innerHTML=tn,He=l(),o($t.$$.fragment),Be=l(),Ct=p("p"),Ct.textContent=an,Le=l(),o(Rt.$$.fragment),Se=l(),o(Gt.$$.fragment),Ee=l(),It=p("p"),It.innerHTML=en,De=l(),kt=p("ul"),kt.innerHTML=ln,Ae=l(),_t=p("p"),_t.innerHTML=nn,Pe=l(),o(Zt.$$.fragment),Ke=l(),o(qt.$$.fragment),Oe=l(),Xt=p("p"),this.h()},l(s){const t=fn("svelte-u9bgzb",document.head);y=i(t,"META",{name:!0,content:!0}),t.forEach(a),g=n(s),M=i(s,"P",{}),tl(M).forEach(a),J=n(s),r(G.$$.fragment,s),Wt=n(s),I=i(s,"P",{"data-svelte-h":!0}),u(I)!=="svelte-hbh3ke"&&(I.textContent=el),zt=n(s),k=i(s,"P",{"data-svelte-h":!0}),u(k)!=="svelte-ta2xky"&&(k.textContent=ll),Qt=n(s),_=i(s,"UL",{"data-svelte-h":!0}),u(_)!=="svelte-1ouqq51"&&(_.innerHTML=nl),Vt=n(s),Z=i(s,"P",{"data-svelte-h":!0}),u(Z)!=="svelte-1q7o0xf"&&(Z.innerHTML=pl),Ht=n(s),vt=i(s,"A",{id:!0}),tl(vt).forEach(a),Bt=n(s),r(q.$$.fragment,s),Lt=n(s),v=i(s,"P",{"data-svelte-h":!0}),u(v)!=="svelte-1tmm3jh"&&(v.innerHTML=il),St=n(s),F=i(s,"P",{"data-svelte-h":!0}),u(F)!=="svelte-fqsv5w"&&(F.innerHTML=ol),Et=n(s),r(Y.$$.fragment,s),Dt=n(s),x=i(s,"P",{"data-svelte-h":!0}),u(x)!=="svelte-1iyrlkm"&&(x.innerHTML=rl),At=n(s),r(X.$$.fragment,s),Pt=n(s),r(w.$$.fragment,s),Kt=n(s),N=i(s,"P",{"data-svelte-h":!0}),u(N)!=="svelte-1k19aas"&&(N.innerHTML=dl),Ot=n(s),r(W.$$.fragment,s),sa=n(s),r(b.$$.fragment,s),ta=n(s),z=i(s,"P",{"data-svelte-h":!0}),u(z)!=="svelte-1i8sy5n"&&(z.innerHTML=cl),aa=n(s),r(Q.$$.fragment,s),ea=n(s),V=i(s,"P",{"data-svelte-h":!0}),u(V)!=="svelte-11muxs5"&&(V.innerHTML=ml),la=n(s),r(H.$$.fragment,s),na=n(s),r(B.$$.fragment,s),pa=n(s),L=i(s,"P",{"data-svelte-h":!0}),u(L)!=="svelte-1py2omh"&&(L.innerHTML=hl),ia=n(s),r(S.$$.fragment,s),oa=n(s),E=i(s,"P",{"data-svelte-h":!0}),u(E)!=="svelte-fg4kbu"&&(E.textContent=ul),ra=n(s),r(D.$$.fragment,s),da=n(s),r(U.$$.fragment,s),ca=n(s),r(A.$$.fragment,s),ma=n(s),P=i(s,"P",{"data-svelte-h":!0}),u(P)!=="svelte-q3v21f"&&(P.innerHTML=yl),ha=n(s),r(K.$$.fragment,s),ua=n(s),O=i(s,"P",{"data-svelte-h":!0}),u(O)!=="svelte-lihevk"&&(O.textContent=Ml),ya=n(s),r(ss.$$.fragment,s),Ma=n(s),ts=i(s,"P",{"data-svelte-h":!0}),u(ts)!=="svelte-uf74g6"&&(ts.innerHTML=fl),fa=n(s),r(as.$$.fragment,s),ga=n(s),es=i(s,"P",{"data-svelte-h":!0}),u(es)!=="svelte-sv3kzg"&&(es.textContent=gl),ja=n(s),r(ls.$$.fragment,s),Ja=n(s),ns=i(s,"P",{"data-svelte-h":!0}),u(ns)!=="svelte-xpufyl"&&(ns.textContent=jl),Ta=n(s),r(ps.$$.fragment,s),wa=n(s),is=i(s,"P",{"data-svelte-h":!0}),u(is)!=="svelte-1iqvf3b"&&(is.textContent=Jl),ba=n(s),os=i(s,"P",{"data-svelte-h":!0}),u(os)!=="svelte-h7czyc"&&(os.textContent=Tl),Ua=n(s),r(rs.$$.fragment,s),$a=n(s),ds=i(s,"P",{"data-svelte-h":!0}),u(ds)!=="svelte-u11d8o"&&(ds.textContent=wl),Ca=n(s),r(cs.$$.fragment,s),Ra=n(s),r(ms.$$.fragment,s),Ga=n(s),hs=i(s,"P",{"data-svelte-h":!0}),u(hs)!=="svelte-1hx1xv3"&&(hs.textContent=bl),Ia=n(s),us=i(s,"P",{"data-svelte-h":!0}),u(us)!=="svelte-ma1qmh"&&(us.textContent=Ul),ka=n(s),r(ys.$$.fragment,s),_a=n(s),Ms=i(s,"P",{"data-svelte-h":!0}),u(Ms)!=="svelte-ttm9cj"&&(Ms.textContent=$l),Za=n(s),r(fs.$$.fragment,s),qa=n(s),gs=i(s,"P",{"data-svelte-h":!0}),u(gs)!=="svelte-dlagf8"&&(gs.innerHTML=Cl),va=n(s),r(js.$$.fragment,s),Fa=n(s),Js=i(s,"P",{"data-svelte-h":!0}),u(Js)!=="svelte-1j95pm0"&&(Js.innerHTML=Rl),Ya=n(s),Ts=i(s,"P",{"data-svelte-h":!0}),u(Ts)!=="svelte-kab5dk"&&(Ts.textContent=Gl),xa=n(s),r(ws.$$.fragment,s),Xa=n(s),bs=i(s,"P",{"data-svelte-h":!0}),u(bs)!=="svelte-10czy2h"&&(bs.innerHTML=Il),Na=n(s),r(Us.$$.fragment,s),Wa=n(s),r($.$$.fragment,s),za=n(s),r($s.$$.fragment,s),Qa=n(s),Cs=i(s,"P",{"data-svelte-h":!0}),u(Cs)!=="svelte-l9fgjb"&&(Cs.innerHTML=kl),Va=n(s),Rs=i(s,"P",{"data-svelte-h":!0}),u(Rs)!=="svelte-1e5cszd"&&(Rs.textContent=_l),Ha=n(s),r(Gs.$$.fragment,s),Ba=n(s),Is=i(s,"P",{"data-svelte-h":!0}),u(Is)!=="svelte-12ynio"&&(Is.textContent=Zl),La=n(s),r(ks.$$.fragment,s),Sa=n(s),r(_s.$$.fragment,s),Ea=n(s),Zs=i(s,"P",{"data-svelte-h":!0}),u(Zs)!=="svelte-1fk76jc"&&(Zs.textContent=ql),Da=n(s),qs=i(s,"P",{"data-svelte-h":!0}),u(qs)!=="svelte-eorgcn"&&(qs.innerHTML=vl),Aa=n(s),r(vs.$$.fragment,s),Pa=n(s),r(Fs.$$.fragment,s),Ka=n(s),Ys=i(s,"P",{"data-svelte-h":!0}),u(Ys)!=="svelte-1mq9eki"&&(Ys.innerHTML=Fl),Oa=n(s),r(xs.$$.fragment,s),se=n(s),Xs=i(s,"P",{"data-svelte-h":!0}),u(Xs)!=="svelte-fl23aq"&&(Xs.innerHTML=Yl),te=n(s),r(Ns.$$.fragment,s),ae=n(s),r(Ws.$$.fragment,s),ee=n(s),zs=i(s,"P",{"data-svelte-h":!0}),u(zs)!=="svelte-ajhscl"&&(zs.innerHTML=xl),le=n(s),r(Qs.$$.fragment,s),ne=n(s),r(Vs.$$.fragment,s),pe=n(s),Hs=i(s,"P",{"data-svelte-h":!0}),u(Hs)!=="svelte-117teyn"&&(Hs.innerHTML=Xl),ie=n(s),r(Bs.$$.fragment,s),oe=n(s),Ls=i(s,"P",{"data-svelte-h":!0}),u(Ls)!=="svelte-1plr9ti"&&(Ls.textContent=Nl),re=n(s),Ss=i(s,"P",{"data-svelte-h":!0}),u(Ss)!=="svelte-i7ma5m"&&(Ss.innerHTML=Wl),de=n(s),r(Es.$$.fragment,s),ce=n(s),r(Ds.$$.fragment,s),me=n(s),As=i(s,"P",{"data-svelte-h":!0}),u(As)!=="svelte-1alrikz"&&(As.innerHTML=zl),he=n(s),r(Ps.$$.fragment,s),ue=n(s),r(C.$$.fragment,s),ye=n(s),r(Ks.$$.fragment,s),Me=n(s),Os=i(s,"P",{"data-svelte-h":!0}),u(Os)!=="svelte-z93cul"&&(Os.textContent=Ql),fe=n(s),st=i(s,"P",{"data-svelte-h":!0}),u(st)!=="svelte-1ryoreq"&&(st.innerHTML=Vl),ge=n(s),r(tt.$$.fragment,s),je=n(s),at=i(s,"P",{"data-svelte-h":!0}),u(at)!=="svelte-1a7ay16"&&(at.innerHTML=Hl),Je=n(s),et=i(s,"P",{"data-svelte-h":!0}),u(et)!=="svelte-1ctwwfa"&&(et.innerHTML=Bl),Te=n(s),r(lt.$$.fragment,s),we=n(s),nt=i(s,"P",{"data-svelte-h":!0}),u(nt)!=="svelte-luua70"&&(nt.innerHTML=Ll),be=n(s),r(pt.$$.fragment,s),Ue=n(s),it=i(s,"P",{"data-svelte-h":!0}),u(it)!=="svelte-a2ozuk"&&(it.textContent=Sl),$e=n(s),r(ot.$$.fragment,s),Ce=n(s),rt=i(s,"P",{"data-svelte-h":!0}),u(rt)!=="svelte-1k7wt2n"&&(rt.textContent=El),Re=n(s),r(dt.$$.fragment,s),Ge=n(s),ct=i(s,"P",{"data-svelte-h":!0}),u(ct)!=="svelte-17uck7y"&&(ct.textContent=Dl),Ie=n(s),r(mt.$$.fragment,s),ke=n(s),r(ht.$$.fragment,s),_e=n(s),ut=i(s,"P",{"data-svelte-h":!0}),u(ut)!=="svelte-281shm"&&(ut.textContent=Al),Ze=n(s),r(yt.$$.fragment,s),qe=n(s),Mt=i(s,"P",{"data-svelte-h":!0}),u(Mt)!=="svelte-ofjevf"&&(Mt.innerHTML=Pl),ve=n(s),r(ft.$$.fragment,s),Fe=n(s),r(R.$$.fragment,s),Ye=n(s),Ft=i(s,"A",{id:!0}),tl(Ft).forEach(a),xe=n(s),r(gt.$$.fragment,s),Xe=n(s),jt=i(s,"P",{"data-svelte-h":!0}),u(jt)!=="svelte-1ycmr6d"&&(jt.textContent=Kl),Ne=n(s),r(Jt.$$.fragment,s),We=n(s),Tt=i(s,"P",{"data-svelte-h":!0}),u(Tt)!=="svelte-p6jjbc"&&(Tt.innerHTML=Ol),ze=n(s),wt=i(s,"P",{"data-svelte-h":!0}),u(wt)!=="svelte-1wdp51d"&&(wt.innerHTML=sn),Qe=n(s),r(bt.$$.fragment,s),Ve=n(s),Ut=i(s,"P",{"data-svelte-h":!0}),u(Ut)!=="svelte-du93ll"&&(Ut.innerHTML=tn),He=n(s),r($t.$$.fragment,s),Be=n(s),Ct=i(s,"P",{"data-svelte-h":!0}),u(Ct)!=="svelte-60x7wj"&&(Ct.textContent=an),Le=n(s),r(Rt.$$.fragment,s),Se=n(s),r(Gt.$$.fragment,s),Ee=n(s),It=i(s,"P",{"data-svelte-h":!0}),u(It)!=="svelte-9qqvxy"&&(It.innerHTML=en),De=n(s),kt=i(s,"UL",{"data-svelte-h":!0}),u(kt)!=="svelte-7kunfk"&&(kt.innerHTML=ln),Ae=n(s),_t=i(s,"P",{"data-svelte-h":!0}),u(_t)!=="svelte-12jfy8o"&&(_t.innerHTML=nn),Pe=n(s),r(Zt.$$.fragment,s),Ke=n(s),r(qt.$$.fragment,s),Oe=n(s),Xt=i(s,"P",{}),tl(Xt).forEach(a),this.h()},h(){al(y,"name","hf:doc:metadata"),al(y,"content",Rn),al(vt,"id","load-from-the-hub"),al(Ft,"id","troubleshoot")},m(s,t){gn(document.head,y),e(s,g,t),e(s,M,t),e(s,J,t),d(G,s,t),e(s,Wt,t),e(s,I,t),e(s,zt,t),e(s,k,t),e(s,Qt,t),e(s,_,t),e(s,Vt,t),e(s,Z,t),e(s,Ht,t),e(s,vt,t),e(s,Bt,t),d(q,s,t),e(s,Lt,t),e(s,v,t),e(s,St,t),e(s,F,t),e(s,Et,t),d(Y,s,t),e(s,Dt,t),e(s,x,t),e(s,At,t),d(X,s,t),e(s,Pt,t),d(w,s,t),e(s,Kt,t),e(s,N,t),e(s,Ot,t),d(W,s,t),e(s,sa,t),d(b,s,t),e(s,ta,t),e(s,z,t),e(s,aa,t),d(Q,s,t),e(s,ea,t),e(s,V,t),e(s,la,t),d(H,s,t),e(s,na,t),d(B,s,t),e(s,pa,t),e(s,L,t),e(s,ia,t),d(S,s,t),e(s,oa,t),e(s,E,t),e(s,ra,t),d(D,s,t),e(s,da,t),d(U,s,t),e(s,ca,t),d(A,s,t),e(s,ma,t),e(s,P,t),e(s,ha,t),d(K,s,t),e(s,ua,t),e(s,O,t),e(s,ya,t),d(ss,s,t),e(s,Ma,t),e(s,ts,t),e(s,fa,t),d(as,s,t),e(s,ga,t),e(s,es,t),e(s,ja,t),d(ls,s,t),e(s,Ja,t),e(s,ns,t),e(s,Ta,t),d(ps,s,t),e(s,wa,t),e(s,is,t),e(s,ba,t),e(s,os,t),e(s,Ua,t),d(rs,s,t),e(s,$a,t),e(s,ds,t),e(s,Ca,t),d(cs,s,t),e(s,Ra,t),d(ms,s,t),e(s,Ga,t),e(s,hs,t),e(s,Ia,t),e(s,us,t),e(s,ka,t),d(ys,s,t),e(s,_a,t),e(s,Ms,t),e(s,Za,t),d(fs,s,t),e(s,qa,t),e(s,gs,t),e(s,va,t),d(js,s,t),e(s,Fa,t),e(s,Js,t),e(s,Ya,t),e(s,Ts,t),e(s,xa,t),d(ws,s,t),e(s,Xa,t),e(s,bs,t),e(s,Na,t),d(Us,s,t),e(s,Wa,t),d($,s,t),e(s,za,t),d($s,s,t),e(s,Qa,t),e(s,Cs,t),e(s,Va,t),e(s,Rs,t),e(s,Ha,t),d(Gs,s,t),e(s,Ba,t),e(s,Is,t),e(s,La,t),d(ks,s,t),e(s,Sa,t),d(_s,s,t),e(s,Ea,t),e(s,Zs,t),e(s,Da,t),e(s,qs,t),e(s,Aa,t),d(vs,s,t),e(s,Pa,t),d(Fs,s,t),e(s,Ka,t),e(s,Ys,t),e(s,Oa,t),d(xs,s,t),e(s,se,t),e(s,Xs,t),e(s,te,t),d(Ns,s,t),e(s,ae,t),d(Ws,s,t),e(s,ee,t),e(s,zs,t),e(s,le,t),d(Qs,s,t),e(s,ne,t),d(Vs,s,t),e(s,pe,t),e(s,Hs,t),e(s,ie,t),d(Bs,s,t),e(s,oe,t),e(s,Ls,t),e(s,re,t),e(s,Ss,t),e(s,de,t),d(Es,s,t),e(s,ce,t),d(Ds,s,t),e(s,me,t),e(s,As,t),e(s,he,t),d(Ps,s,t),e(s,ue,t),d(C,s,t),e(s,ye,t),d(Ks,s,t),e(s,Me,t),e(s,Os,t),e(s,fe,t),e(s,st,t),e(s,ge,t),d(tt,s,t),e(s,je,t),e(s,at,t),e(s,Je,t),e(s,et,t),e(s,Te,t),d(lt,s,t),e(s,we,t),e(s,nt,t),e(s,be,t),d(pt,s,t),e(s,Ue,t),e(s,it,t),e(s,$e,t),d(ot,s,t),e(s,Ce,t),e(s,rt,t),e(s,Re,t),d(dt,s,t),e(s,Ge,t),e(s,ct,t),e(s,Ie,t),d(mt,s,t),e(s,ke,t),d(ht,s,t),e(s,_e,t),e(s,ut,t),e(s,Ze,t),d(yt,s,t),e(s,qe,t),e(s,Mt,t),e(s,ve,t),d(ft,s,t),e(s,Fe,t),d(R,s,t),e(s,Ye,t),e(s,Ft,t),e(s,xe,t),d(gt,s,t),e(s,Xe,t),e(s,jt,t),e(s,Ne,t),d(Jt,s,t),e(s,We,t),e(s,Tt,t),e(s,ze,t),e(s,wt,t),e(s,Qe,t),d(bt,s,t),e(s,Ve,t),e(s,Ut,t),e(s,He,t),d($t,s,t),e(s,Be,t),e(s,Ct,t),e(s,Le,t),d(Rt,s,t),e(s,Se,t),d(Gt,s,t),e(s,Ee,t),e(s,It,t),e(s,De,t),e(s,kt,t),e(s,Ae,t),e(s,_t,t),e(s,Pe,t),d(Zt,s,t),e(s,Ke,t),d(qt,s,t),e(s,Oe,t),e(s,Xt,t),sl=!0},p(s,[t]){const pn={};t&2&&(pn.$$scope={dirty:t,ctx:s}),w.$set(pn);const on={};t&2&&(on.$$scope={dirty:t,ctx:s}),b.$set(on);const rn={};t&2&&(rn.$$scope={dirty:t,ctx:s}),U.$set(rn);const dn={};t&2&&(dn.$$scope={dirty:t,ctx:s}),$.$set(dn);const cn={};t&2&&(cn.$$scope={dirty:t,ctx:s}),C.$set(cn);const mn={};t&2&&(mn.$$scope={dirty:t,ctx:s}),R.$set(mn)},i(s){sl||(c(G.$$.fragment,s),c(q.$$.fragment,s),c(Y.$$.fragment,s),c(X.$$.fragment,s),c(w.$$.fragment,s),c(W.$$.fragment,s),c(b.$$.fragment,s),c(Q.$$.fragment,s),c(H.$$.fragment,s),c(B.$$.fragment,s),c(S.$$.fragment,s),c(D.$$.fragment,s),c(U.$$.fragment,s),c(A.$$.fragment,s),c(K.$$.fragment,s),c(ss.$$.fragment,s),c(as.$$.fragment,s),c(ls.$$.fragment,s),c(ps.$$.fragment,s),c(rs.$$.fragment,s),c(cs.$$.fragment,s),c(ms.$$.fragment,s),c(ys.$$.fragment,s),c(fs.$$.fragment,s),c(js.$$.fragment,s),c(ws.$$.fragment,s),c(Us.$$.fragment,s),c($.$$.fragment,s),c($s.$$.fragment,s),c(Gs.$$.fragment,s),c(ks.$$.fragment,s),c(_s.$$.fragment,s),c(vs.$$.fragment,s),c(Fs.$$.fragment,s),c(xs.$$.fragment,s),c(Ns.$$.fragment,s),c(Ws.$$.fragment,s),c(Qs.$$.fragment,s),c(Vs.$$.fragment,s),c(Bs.$$.fragment,s),c(Es.$$.fragment,s),c(Ds.$$.fragment,s),c(Ps.$$.fragment,s),c(C.$$.fragment,s),c(Ks.$$.fragment,s),c(tt.$$.fragment,s),c(lt.$$.fragment,s),c(pt.$$.fragment,s),c(ot.$$.fragment,s),c(dt.$$.fragment,s),c(mt.$$.fragment,s),c(ht.$$.fragment,s),c(yt.$$.fragment,s),c(ft.$$.fragment,s),c(R.$$.fragment,s),c(gt.$$.fragment,s),c(Jt.$$.fragment,s),c(bt.$$.fragment,s),c($t.$$.fragment,s),c(Rt.$$.fragment,s),c(Gt.$$.fragment,s),c(Zt.$$.fragment,s),c(qt.$$.fragment,s),sl=!0)},o(s){m(G.$$.fragment,s),m(q.$$.fragment,s),m(Y.$$.fragment,s),m(X.$$.fragment,s),m(w.$$.fragment,s),m(W.$$.fragment,s),m(b.$$.fragment,s),m(Q.$$.fragment,s),m(H.$$.fragment,s),m(B.$$.fragment,s),m(S.$$.fragment,s),m(D.$$.fragment,s),m(U.$$.fragment,s),m(A.$$.fragment,s),m(K.$$.fragment,s),m(ss.$$.fragment,s),m(as.$$.fragment,s),m(ls.$$.fragment,s),m(ps.$$.fragment,s),m(rs.$$.fragment,s),m(cs.$$.fragment,s),m(ms.$$.fragment,s),m(ys.$$.fragment,s),m(fs.$$.fragment,s),m(js.$$.fragment,s),m(ws.$$.fragment,s),m(Us.$$.fragment,s),m($.$$.fragment,s),m($s.$$.fragment,s),m(Gs.$$.fragment,s),m(ks.$$.fragment,s),m(_s.$$.fragment,s),m(vs.$$.fragment,s),m(Fs.$$.fragment,s),m(xs.$$.fragment,s),m(Ns.$$.fragment,s),m(Ws.$$.fragment,s),m(Qs.$$.fragment,s),m(Vs.$$.fragment,s),m(Bs.$$.fragment,s),m(Es.$$.fragment,s),m(Ds.$$.fragment,s),m(Ps.$$.fragment,s),m(C.$$.fragment,s),m(Ks.$$.fragment,s),m(tt.$$.fragment,s),m(lt.$$.fragment,s),m(pt.$$.fragment,s),m(ot.$$.fragment,s),m(dt.$$.fragment,s),m(mt.$$.fragment,s),m(ht.$$.fragment,s),m(yt.$$.fragment,s),m(ft.$$.fragment,s),m(R.$$.fragment,s),m(gt.$$.fragment,s),m(Jt.$$.fragment,s),m(bt.$$.fragment,s),m($t.$$.fragment,s),m(Rt.$$.fragment,s),m(Gt.$$.fragment,s),m(Zt.$$.fragment,s),m(qt.$$.fragment,s),sl=!1},d(s){s&&(a(g),a(M),a(J),a(Wt),a(I),a(zt),a(k),a(Qt),a(_),a(Vt),a(Z),a(Ht),a(vt),a(Bt),a(Lt),a(v),a(St),a(F),a(Et),a(Dt),a(x),a(At),a(Pt),a(Kt),a(N),a(Ot),a(sa),a(ta),a(z),a(aa),a(ea),a(V),a(la),a(na),a(pa),a(L),a(ia),a(oa),a(E),a(ra),a(da),a(ca),a(ma),a(P),a(ha),a(ua),a(O),a(ya),a(Ma),a(ts),a(fa),a(ga),a(es),a(ja),a(Ja),a(ns),a(Ta),a(wa),a(is),a(ba),a(os),a(Ua),a($a),a(ds),a(Ca),a(Ra),a(Ga),a(hs),a(Ia),a(us),a(ka),a(_a),a(Ms),a(Za),a(qa),a(gs),a(va),a(Fa),a(Js),a(Ya),a(Ts),a(xa),a(Xa),a(bs),a(Na),a(Wa),a(za),a(Qa),a(Cs),a(Va),a(Rs),a(Ha),a(Ba),a(Is),a(La),a(Sa),a(Ea),a(Zs),a(Da),a(qs),a(Aa),a(Pa),a(Ka),a(Ys),a(Oa),a(se),a(Xs),a(te),a(ae),a(ee),a(zs),a(le),a(ne),a(pe),a(Hs),a(ie),a(oe),a(Ls),a(re),a(Ss),a(de),a(ce),a(me),a(As),a(he),a(ue),a(ye),a(Me),a(Os),a(fe),a(st),a(ge),a(je),a(at),a(Je),a(et),a(Te),a(we),a(nt),a(be),a(Ue),a(it),a($e),a(Ce),a(rt),a(Re),a(Ge),a(ct),a(Ie),a(ke),a(_e),a(ut),a(Ze),a(qe),a(Mt),a(ve),a(Fe),a(Ye),a(Ft),a(xe),a(Xe),a(jt),a(Ne),a(We),a(Tt),a(ze),a(wt),a(Qe),a(Ve),a(Ut),a(He),a(Be),a(Ct),a(Le),a(Se),a(Ee),a(It),a(De),a(kt),a(Ae),a(_t),a(Pe),a(Ke),a(Oe),a(Xt)),a(y),h(G,s),h(q,s),h(Y,s),h(X,s),h(w,s),h(W,s),h(b,s),h(Q,s),h(H,s),h(B,s),h(S,s),h(D,s),h(U,s),h(A,s),h(K,s),h(ss,s),h(as,s),h(ls,s),h(ps,s),h(rs,s),h(cs,s),h(ms,s),h(ys,s),h(fs,s),h(js,s),h(ws,s),h(Us,s),h($,s),h($s,s),h(Gs,s),h(ks,s),h(_s,s),h(vs,s),h(Fs,s),h(xs,s),h(Ns,s),h(Ws,s),h(Qs,s),h(Vs,s),h(Bs,s),h(Es,s),h(Ds,s),h(Ps,s),h(C,s),h(Ks,s),h(tt,s),h(lt,s),h(pt,s),h(ot,s),h(dt,s),h(mt,s),h(ht,s),h(yt,s),h(ft,s),h(R,s),h(gt,s),h(Jt,s),h(bt,s),h($t,s),h(Rt,s),h(Gt,s),h(Zt,s),h(qt,s)}}}const Rn='{"title":"Load","local":"load","sections":[{"title":"Hugging Face Hub","local":"hugging-face-hub","sections":[],"depth":2},{"title":"Local and remote files","local":"local-and-remote-files","sections":[{"title":"CSV","local":"csv","sections":[],"depth":3},{"title":"JSON","local":"json","sections":[],"depth":3},{"title":"Parquet","local":"parquet","sections":[],"depth":3},{"title":"Arrow","local":"arrow","sections":[],"depth":3},{"title":"SQL","local":"sql","sections":[],"depth":3},{"title":"WebDataset","local":"webdataset","sections":[],"depth":3}],"depth":2},{"title":"Multiprocessing","local":"multiprocessing","sections":[],"depth":2},{"title":"In-memory data","local":"in-memory-data","sections":[{"title":"Python dictionary","local":"python-dictionary","sections":[],"depth":3},{"title":"Python list of dictionaries","local":"python-list-of-dictionaries","sections":[],"depth":3},{"title":"Python generator","local":"python-generator","sections":[],"depth":3},{"title":"Pandas DataFrame","local":"pandas-dataframe","sections":[],"depth":3}],"depth":2},{"title":"Offline","local":"offline","sections":[],"depth":2},{"title":"Slice splits","local":"slice-splits","sections":[{"title":"Percent slicing and rounding","local":"percent-slicing-and-rounding","sections":[],"depth":3}],"depth":2},{"title":"Troubleshooting","local":"troubleshooting","sections":[{"title":"Specify features","local":"specify-features","sections":[],"depth":3}],"depth":2},{"title":"(Legacy) Local loading script","local":"legacy-local-loading-script","sections":[],"depth":2}],"depth":1}';function Gn(T){return un(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Fn extends yn{constructor(y){super(),Mn(this,y,Gn,Cn,hn,{})}}export{Fn as component};
