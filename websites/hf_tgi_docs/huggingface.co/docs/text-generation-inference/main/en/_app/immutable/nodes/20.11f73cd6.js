import{s as ze,n as Ne,o as Ve}from"../chunks/scheduler.362310b7.js";import{S as Re,i as We,g as l,s as n,r as S,A as Be,h as o,f as i,c as s,j as Je,u as E,x as r,k as U,y as Fe,a,v as A,d as D,t as J,w as z}from"../chunks/index.57dfc70d.js";import{H as N,E as Ke}from"../chunks/index.fa158b42.js";function Qe(ke){let u,W,V,B,g,F,h,K,w,be="Guidance is a feature that allows users to constrain the generation of a large language model with a specified grammar. This feature is particularly useful when you want to generate text that follows a specific structure or uses a specific set of words or produce output in a specific format. A prominent example is JSON grammar, where the model is forced to output valid JSON.",Q,v,X,x,Te="Guidance can be implemented in many ways and the community is always finding new ways to use it. Here are some examples of how you can use guidance:",Y,$,_e="Technically, guidance can be used to generate:",Z,k,ye="<li>a specific JSON object</li> <li>a function signature</li> <li>typed output like a list of integers</li>",ee,b,Ce="However these use cases can span a wide range of applications, such as:",te,T,He="<li>extracting structured data from unstructured text</li> <li>summarizing text into a specific format</li> <li>limit output to specific classes of words (act as a LLM powered classifier)</li> <li>generate the input to specific APIs or services</li> <li>provide reliable and consistent output for downstream tasks</li> <li>extract data from multimodal inputs</li>",ie,_,ae,y,Le="Diving into the details, guidance is enabled by including a grammar with a generation request that is compiled, and used to modify the chosen tokens.",ne,C,Me="This process can be broken down into the following steps:",se,H,Pe="<li>A request is sent to the backend, it is processed and placed in batch. Processing includes compiling the grammar into a finite state machine and a grammar state.</li>",le,m,Ge='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/request-to-batch.gif"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/request-to-batch-dark.gif"/>',oe,c,je="<li><p>The model does a forward pass over the batch. This returns probabilities for each token in the vocabulary for each request in the batch.</p></li> <li><p>The process of choosing one of those tokens is called <code>sampling</code>. The model samples from the distribution of probabilities to choose the next token. In TGI all of the steps before sampling are called <code>processor</code>. Grammars are applied as a processor that masks out tokens that are not allowed by the grammar.</p></li>",re,d,qe='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/logit-grammar-mask.gif"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/logit-grammar-mask-dark.gif"/>',ue,f,Oe="<li>The grammar mask is applied and the model samples from the remaining tokens. Once a token is chosen, we update the grammar state with the new token, to prepare it for the next pass.</li>",me,p,Ie='<img class="block dark:hidden" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/sample-logits.gif"/> <img class="hidden dark:block" src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/sample-logits-dark.gif"/>',ce,L,de,M,Se="There are two main ways to use guidance; you can either use the <code>/generate</code> endpoint with a grammar or use the <code>/chat/completion</code> endpoint with tools.",fe,P,Ee="Under the hood tools are a special case of grammars that allows the model to choose one or none of the provided tools.",pe,G,Ue='Please refer to <a href="../basic_tutorials/using_guidance">using guidance</a> for more examples and details on how to use guidance in Python, JavaScript, and cURL.',ge,j,he,q,Ae="Depending on how you are using guidance, you may want to make use of different features. Here are some tips to get the most out of guidance:",we,O,De="<li>If you are using the <code>/generate</code> with a <code>grammar</code> it is recommended to include the grammar in the prompt prefixed by something like <code>Please use the following JSON schema to generate the output:</code>. This will help the model understand the context of the grammar and generate the output accordingly.</li> <li>If you are getting a response with many repeated tokens, please use the <code>frequency_penalty</code> or <code>repetition_penalty</code> to reduce the number of repeated tokens in the output.</li>",ve,I,xe,R,$e;return g=new N({props:{title:"Guidance",local:"guidance",headingTag:"h1"}}),h=new N({props:{title:"What is Guidance?",local:"what-is-guidance",headingTag:"h2"}}),v=new N({props:{title:"How is it used?",local:"how-is-it-used",headingTag:"h2"}}),_=new N({props:{title:"How it works?",local:"how-it-works",headingTag:"h2"}}),L=new N({props:{title:"How to use Guidance?",local:"how-to-use-guidance",headingTag:"h2"}}),j=new N({props:{title:"Getting the most out of guidance",local:"getting-the-most-out-of-guidance",headingTag:"h3"}}),I=new Ke({props:{source:"https://github.com/huggingface/text-generation-inference/blob/main/docs/source/conceptual/guidance.md"}}),{c(){u=l("meta"),W=n(),V=l("p"),B=n(),S(g.$$.fragment),F=n(),S(h.$$.fragment),K=n(),w=l("p"),w.textContent=be,Q=n(),S(v.$$.fragment),X=n(),x=l("p"),x.textContent=Te,Y=n(),$=l("p"),$.textContent=_e,Z=n(),k=l("ul"),k.innerHTML=ye,ee=n(),b=l("p"),b.textContent=Ce,te=n(),T=l("ul"),T.innerHTML=He,ie=n(),S(_.$$.fragment),ae=n(),y=l("p"),y.textContent=Le,ne=n(),C=l("p"),C.textContent=Me,se=n(),H=l("ol"),H.innerHTML=Pe,le=n(),m=l("div"),m.innerHTML=Ge,oe=n(),c=l("ol"),c.innerHTML=je,re=n(),d=l("div"),d.innerHTML=qe,ue=n(),f=l("ol"),f.innerHTML=Oe,me=n(),p=l("div"),p.innerHTML=Ie,ce=n(),S(L.$$.fragment),de=n(),M=l("p"),M.innerHTML=Se,fe=n(),P=l("p"),P.textContent=Ee,pe=n(),G=l("p"),G.innerHTML=Ue,ge=n(),S(j.$$.fragment),he=n(),q=l("p"),q.textContent=Ae,we=n(),O=l("ul"),O.innerHTML=De,ve=n(),S(I.$$.fragment),xe=n(),R=l("p"),this.h()},l(e){const t=Be("svelte-u9bgzb",document.head);u=o(t,"META",{name:!0,content:!0}),t.forEach(i),W=s(e),V=o(e,"P",{}),Je(V).forEach(i),B=s(e),E(g.$$.fragment,e),F=s(e),E(h.$$.fragment,e),K=s(e),w=o(e,"P",{"data-svelte-h":!0}),r(w)!=="svelte-18c1ygp"&&(w.textContent=be),Q=s(e),E(v.$$.fragment,e),X=s(e),x=o(e,"P",{"data-svelte-h":!0}),r(x)!=="svelte-o5mnyx"&&(x.textContent=Te),Y=s(e),$=o(e,"P",{"data-svelte-h":!0}),r($)!=="svelte-15e6bdk"&&($.textContent=_e),Z=s(e),k=o(e,"UL",{"data-svelte-h":!0}),r(k)!=="svelte-u2jqwx"&&(k.innerHTML=ye),ee=s(e),b=o(e,"P",{"data-svelte-h":!0}),r(b)!=="svelte-kleddr"&&(b.textContent=Ce),te=s(e),T=o(e,"UL",{"data-svelte-h":!0}),r(T)!=="svelte-12o2itu"&&(T.innerHTML=He),ie=s(e),E(_.$$.fragment,e),ae=s(e),y=o(e,"P",{"data-svelte-h":!0}),r(y)!=="svelte-1kgb64f"&&(y.textContent=Le),ne=s(e),C=o(e,"P",{"data-svelte-h":!0}),r(C)!=="svelte-162ogxq"&&(C.textContent=Me),se=s(e),H=o(e,"OL",{"data-svelte-h":!0}),r(H)!=="svelte-18gz4cn"&&(H.innerHTML=Pe),le=s(e),m=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(m)!=="svelte-1al099f"&&(m.innerHTML=Ge),oe=s(e),c=o(e,"OL",{start:!0,"data-svelte-h":!0}),r(c)!=="svelte-1c0rr5h"&&(c.innerHTML=je),re=s(e),d=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(d)!=="svelte-1kjmamn"&&(d.innerHTML=qe),ue=s(e),f=o(e,"OL",{start:!0,"data-svelte-h":!0}),r(f)!=="svelte-4wrhje"&&(f.innerHTML=Oe),me=s(e),p=o(e,"DIV",{class:!0,"data-svelte-h":!0}),r(p)!=="svelte-17kexjh"&&(p.innerHTML=Ie),ce=s(e),E(L.$$.fragment,e),de=s(e),M=o(e,"P",{"data-svelte-h":!0}),r(M)!=="svelte-1vaei5o"&&(M.innerHTML=Se),fe=s(e),P=o(e,"P",{"data-svelte-h":!0}),r(P)!=="svelte-1hnurd"&&(P.textContent=Ee),pe=s(e),G=o(e,"P",{"data-svelte-h":!0}),r(G)!=="svelte-1dp6uf9"&&(G.innerHTML=Ue),ge=s(e),E(j.$$.fragment,e),he=s(e),q=o(e,"P",{"data-svelte-h":!0}),r(q)!=="svelte-p5xgv9"&&(q.textContent=Ae),we=s(e),O=o(e,"UL",{"data-svelte-h":!0}),r(O)!=="svelte-15d3zad"&&(O.innerHTML=De),ve=s(e),E(I.$$.fragment,e),xe=s(e),R=o(e,"P",{}),Je(R).forEach(i),this.h()},h(){U(u,"name","hf:doc:metadata"),U(u,"content",Xe),U(m,"class","flex justify-center"),U(c,"start","2"),U(d,"class","flex justify-center"),U(f,"start","4"),U(p,"class","flex justify-center")},m(e,t){Fe(document.head,u),a(e,W,t),a(e,V,t),a(e,B,t),A(g,e,t),a(e,F,t),A(h,e,t),a(e,K,t),a(e,w,t),a(e,Q,t),A(v,e,t),a(e,X,t),a(e,x,t),a(e,Y,t),a(e,$,t),a(e,Z,t),a(e,k,t),a(e,ee,t),a(e,b,t),a(e,te,t),a(e,T,t),a(e,ie,t),A(_,e,t),a(e,ae,t),a(e,y,t),a(e,ne,t),a(e,C,t),a(e,se,t),a(e,H,t),a(e,le,t),a(e,m,t),a(e,oe,t),a(e,c,t),a(e,re,t),a(e,d,t),a(e,ue,t),a(e,f,t),a(e,me,t),a(e,p,t),a(e,ce,t),A(L,e,t),a(e,de,t),a(e,M,t),a(e,fe,t),a(e,P,t),a(e,pe,t),a(e,G,t),a(e,ge,t),A(j,e,t),a(e,he,t),a(e,q,t),a(e,we,t),a(e,O,t),a(e,ve,t),A(I,e,t),a(e,xe,t),a(e,R,t),$e=!0},p:Ne,i(e){$e||(D(g.$$.fragment,e),D(h.$$.fragment,e),D(v.$$.fragment,e),D(_.$$.fragment,e),D(L.$$.fragment,e),D(j.$$.fragment,e),D(I.$$.fragment,e),$e=!0)},o(e){J(g.$$.fragment,e),J(h.$$.fragment,e),J(v.$$.fragment,e),J(_.$$.fragment,e),J(L.$$.fragment,e),J(j.$$.fragment,e),J(I.$$.fragment,e),$e=!1},d(e){e&&(i(W),i(V),i(B),i(F),i(K),i(w),i(Q),i(X),i(x),i(Y),i($),i(Z),i(k),i(ee),i(b),i(te),i(T),i(ie),i(ae),i(y),i(ne),i(C),i(se),i(H),i(le),i(m),i(oe),i(c),i(re),i(d),i(ue),i(f),i(me),i(p),i(ce),i(de),i(M),i(fe),i(P),i(pe),i(G),i(ge),i(he),i(q),i(we),i(O),i(ve),i(xe),i(R)),i(u),z(g,e),z(h,e),z(v,e),z(_,e),z(L,e),z(j,e),z(I,e)}}}const Xe='{"title":"Guidance","local":"guidance","sections":[{"title":"What is Guidance?","local":"what-is-guidance","sections":[],"depth":2},{"title":"How is it used?","local":"how-is-it-used","sections":[],"depth":2},{"title":"How it works?","local":"how-it-works","sections":[],"depth":2},{"title":"How to use Guidance?","local":"how-to-use-guidance","sections":[{"title":"Getting the most out of guidance","local":"getting-the-most-out-of-guidance","sections":[],"depth":3}],"depth":2}],"depth":1}';function Ye(ke){return Ve(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class it extends Re{constructor(u){super(),We(this,u,Ye,Qe,ze,{})}}export{it as component};
