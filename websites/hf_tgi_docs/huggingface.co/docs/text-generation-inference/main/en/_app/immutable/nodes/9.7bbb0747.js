import{s as rt,n as ut,o as pt}from"../chunks/scheduler.362310b7.js";import{S as ht,i as mt,g as o,s,r as p,A as dt,h as i,f as a,c as l,j as ot,u as h,x as r,k as it,y as ft,a as n,v as m,d,t as f,w as c}from"../chunks/index.57dfc70d.js";import{C as Q}from"../chunks/CodeBlock.5d40996c.js";import{H as Ze,E as ct}from"../chunks/index.fa158b42.js";function gt(Je){let u,D,V,K,g,ee,b,Ue="TGI server deployment can easily be monitored through a Grafana dashboard, consuming a Prometheus data collection. Example of inspectable metrics are statistics on the effective batch sizes used by TGI, prefill/decode latencies, number of generated tokens, etc.",te,w,Ae="In this tutorial, we look at how to set up a local Grafana dashboard to monitor TGI usage.",ae,v,We='<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/tgi/grafana.png" alt="Grafana dashboard for TGI"/>',ne,M,se,T,Ee='First, on your server machine, TGI needs to be launched as usual. TGI exposes <a href="https://github.com/huggingface/text-generation-inference/discussions/1127#discussioncomment-7240527" rel="nofollow">multiple</a> metrics that can be collected by Prometheus monitoring server.',le,x,ze="In the rest of this tutorial, we assume that TGI was launched through Docker with <code>--network host</code>.",oe,$,qe='On the server where TGI is hosted, a Prometheus server needs to be installed and launched. To do so, please follow <a href="https://prometheus.io/download/#prometheus" rel="nofollow">Prometheus installation instructions</a>. For example, at the time of writing on a Linux machine:',ie,y,re,C,Fe="Prometheus needs to be configured to listen on TGI’s port. To do so, in Prometheus configuration file <code>prometheus.yml</code>, one needs to edit the lines:",ue,L,pe,P,Ne="to use the correct IP address and port.",he,j,Re="We suggest to try <code>curl 0.0.0.0:80/generate -X POST -d &#39;{&quot;inputs&quot;:&quot;hey chatbot, how are&quot;,&quot;parameters&quot;:{&quot;max_new_tokens&quot;:15}}&#39; -H &#39;Content-Type: application/json&#39;</code> on the server side to make sure to configure the correct IP and port.",me,G,Xe="Once Prometheus is configured, Prometheus server can be launched on the same machine where TGI is launched:",de,_,fe,H,Se="In this guide, Prometheus monitoring data will be consumed on a local computer. Hence, we need to forward Prometheus port (by default 9090) to the local computer. To do so, we can for example:",ce,k,Be='<li>Use ssh <a href="https://www.ssh.com/academy/ssh/tunneling-example" rel="nofollow">local port forwarding</a></li> <li>Use ngrok port tunneling</li>',ge,I,Ye='For simplicity, we will use <a href="https://ngrok.com/docs/" rel="nofollow">Ngrok</a> in this guide to tunnel Prometheus port from the TGI server to the outside world.',be,Z,Ve='For that, you should follow the steps at <a href="https://dashboard.ngrok.com/get-started/setup/linux" rel="nofollow">https://dashboard.ngrok.com/get-started/setup/linux</a>, and once Ngrok is installed, use:',we,J,ve,U,Oe='As a sanity check, one can make sure that Prometheus server can be accessed at the URL given by Ngrok (in the style of <a href="https://d661-4-223-164-145.ngrok-free.app" rel="nofollow">https://d661-4-223-164-145.ngrok-free.app</a>) from a local machine.',Me,A,Te,W,Qe="Monitoring is typically done on an other machine than the server one. We use a Grafana dashboard to monitor TGI’s server usage.",xe,E,De="Two options are available:",$e,z,Ke='<li>Use Grafana Cloud for an hosted dashboard solution (<a href="https://grafana.com/products/cloud/" rel="nofollow">https://grafana.com/products/cloud/</a>).</li> <li>Self-host a grafana dashboard.</li>',ye,q,et='In this tutorial, for simplicity, we will self host the dashbard. We recommend installing Grafana Open-source edition following <a href="https://grafana.com/grafana/download?platform=linux&amp;edition=oss" rel="nofollow">the official install instructions</a>, using the available Linux binaries. For example:',Ce,F,Le,N,tt="Once the Grafana server is launched, the Grafana interface is available at http://localhost:3000. One needs to log in with the <code>admin</code> username and <code>admin</code> password.",Pe,R,at='Once logged in, the Prometheus data source for Grafana needs to be configured, in the option <code>Add your first data source</code>. There, a Prometheus data source needs to be added with the Ngrok address we got earlier, that exposes Prometheus port (example: <a href="https://d661-4-223-164-145.ngrok-free.app" rel="nofollow">https://d661-4-223-164-145.ngrok-free.app</a>).',je,X,nt='Once Prometheus data source is configured, we can finally create our dashboard! From home, go to <code>Create your first dashboard</code> and then <code>Import dashboard</code>. There, we will use the recommended dashboard template <a href="https://github.com/huggingface/text-generation-inference/blob/main/assets/tgi_grafana.json" rel="nofollow">tgi_grafana.json</a> for a dashboard ready to be used, but you may configure your own dashboard as you like.',Ge,S,st='Community contributed dashboard templates are also available, for example <a href="https://grafana.com/grafana/dashboards/19831-text-generation-inference-dashboard/" rel="nofollow">here</a> or <a href="https://grafana.com/grafana/dashboards/20246-text-generation-inference/" rel="nofollow">here</a>.',_e,B,lt="Load your dashboard configuration, and your TGI dashboard should be ready to go!",He,Y,ke,O,Ie;return g=new Ze({props:{title:"Monitoring TGI server with Prometheus and Grafana dashboard",local:"monitoring-tgi-server-with-prometheus-and-grafana-dashboard",headingTag:"h1"}}),M=new Ze({props:{title:"Setup on the server machine",local:"setup-on-the-server-machine",headingTag:"h2"}}),y=new Q({props:{code:"d2dldCUyMGh0dHBzJTNBJTJGJTJGZ2l0aHViLmNvbSUyRnByb21ldGhldXMlMkZwcm9tZXRoZXVzJTJGcmVsZWFzZXMlMkZkb3dubG9hZCUyRnYyLjUyLjAlMkZwcm9tZXRoZXVzLTIuNTIuMC5saW51eC1hbWQ2NC50YXIuZ3olMEF0YXIlMjAteHZ6ZiUyMHByb21ldGhldXMtMi41Mi4wLmxpbnV4LWFtZDY0LnRhci5neiUwQWNkJTIwcHJvbWV0aGV1cw==",highlighted:`<span class="hljs-attribute">wget</span> https://github.com/prometheus/prometheus/releases/download/v2.<span class="hljs-number">52</span>.<span class="hljs-number">0</span>/prometheus-<span class="hljs-number">2</span>.<span class="hljs-number">52</span>.<span class="hljs-number">0</span>.linux-amd64.tar.gz
<span class="hljs-attribute">tar</span> -xvzf prometheus-<span class="hljs-number">2</span>.<span class="hljs-number">52</span>.<span class="hljs-number">0</span>.linux-amd64.tar.gz
<span class="hljs-attribute">cd</span> prometheus`,wrap:!1}}),L=new Q({props:{code:"JTIwJTIwJTIwJTIwc3RhdGljX2NvbmZpZ3MlM0ElMEElMjAlMjAlMjAlMjAlMjAlMjAtJTIwdGFyZ2V0cyUzQSUyMCU1QiUyMjAuMC4wLjAlM0E4MCUyMiU1RA==",highlighted:`<span class="hljs-symbol">    static_configs:</span>
      - targets: [<span class="hljs-string">&quot;0.0.0.0:80&quot;</span>]`,wrap:!1}}),_=new Q({props:{code:"LiUyRnByb21ldGhldXMlMjAtLWNvbmZpZy5maWxlJTNEJTIycHJvbWV0aGV1cy55bWwlMjI=",highlighted:'<span class="hljs-string">./prometheus</span> <span class="hljs-params">--config</span>.file=<span class="hljs-string">&quot;prometheus.yml&quot;</span>',wrap:!1}}),J=new Q({props:{code:"bmdyb2slMjBodHRwJTIwaHR0cCUzQSUyRiUyRjAuMC4wLjAlM0E5MDkw",highlighted:"ngrok http http://0.0.0.0:9090",wrap:!1}}),A=new Ze({props:{title:"Setup on the monitoring machine",local:"setup-on-the-monitoring-machine",headingTag:"h2"}}),F=new Q({props:{code:"d2dldCUyMGh0dHBzJTNBJTJGJTJGZGwuZ3JhZmFuYS5jb20lMkZvc3MlMkZyZWxlYXNlJTJGZ3JhZmFuYS0xMS4wLjAubGludXgtYW1kNjQudGFyLmd6JTBBdGFyJTIwLXp4dmYlMjBncmFmYW5hLTExLjAuMC5saW51eC1hbWQ2NC50YXIuZ3olMEFjZCUyMGdyYWZhbmEtMTEuMC4wJTBBLiUyRmJpbiUyRmdyYWZhbmEtc2VydmVy",highlighted:`wget https://dl.grafana.com/oss/release/grafana-11.0.0.linux-amd64.tar.gz
tar -zxvf grafana-11.0.0.linux-amd64.tar.gz
<span class="hljs-built_in">cd</span> grafana-11.0.0
./bin/grafana-server`,wrap:!1}}),Y=new ct({props:{source:"https://github.com/huggingface/text-generation-inference/blob/main/docs/source/basic_tutorials/monitoring.md"}}),{c(){u=o("meta"),D=s(),V=o("p"),K=s(),p(g.$$.fragment),ee=s(),b=o("p"),b.textContent=Ue,te=s(),w=o("p"),w.textContent=Ae,ae=s(),v=o("p"),v.innerHTML=We,ne=s(),p(M.$$.fragment),se=s(),T=o("p"),T.innerHTML=Ee,le=s(),x=o("p"),x.innerHTML=ze,oe=s(),$=o("p"),$.innerHTML=qe,ie=s(),p(y.$$.fragment),re=s(),C=o("p"),C.innerHTML=Fe,ue=s(),p(L.$$.fragment),pe=s(),P=o("p"),P.textContent=Ne,he=s(),j=o("p"),j.innerHTML=Re,me=s(),G=o("p"),G.textContent=Xe,de=s(),p(_.$$.fragment),fe=s(),H=o("p"),H.textContent=Se,ce=s(),k=o("ul"),k.innerHTML=Be,ge=s(),I=o("p"),I.innerHTML=Ye,be=s(),Z=o("p"),Z.innerHTML=Ve,we=s(),p(J.$$.fragment),ve=s(),U=o("p"),U.innerHTML=Oe,Me=s(),p(A.$$.fragment),Te=s(),W=o("p"),W.textContent=Qe,xe=s(),E=o("p"),E.textContent=De,$e=s(),z=o("ul"),z.innerHTML=Ke,ye=s(),q=o("p"),q.innerHTML=et,Ce=s(),p(F.$$.fragment),Le=s(),N=o("p"),N.innerHTML=tt,Pe=s(),R=o("p"),R.innerHTML=at,je=s(),X=o("p"),X.innerHTML=nt,Ge=s(),S=o("p"),S.innerHTML=st,_e=s(),B=o("p"),B.textContent=lt,He=s(),p(Y.$$.fragment),ke=s(),O=o("p"),this.h()},l(e){const t=dt("svelte-u9bgzb",document.head);u=i(t,"META",{name:!0,content:!0}),t.forEach(a),D=l(e),V=i(e,"P",{}),ot(V).forEach(a),K=l(e),h(g.$$.fragment,e),ee=l(e),b=i(e,"P",{"data-svelte-h":!0}),r(b)!=="svelte-juninn"&&(b.textContent=Ue),te=l(e),w=i(e,"P",{"data-svelte-h":!0}),r(w)!=="svelte-uocx0h"&&(w.textContent=Ae),ae=l(e),v=i(e,"P",{"data-svelte-h":!0}),r(v)!=="svelte-r5id"&&(v.innerHTML=We),ne=l(e),h(M.$$.fragment,e),se=l(e),T=i(e,"P",{"data-svelte-h":!0}),r(T)!=="svelte-u7ohf2"&&(T.innerHTML=Ee),le=l(e),x=i(e,"P",{"data-svelte-h":!0}),r(x)!=="svelte-eolpdn"&&(x.innerHTML=ze),oe=l(e),$=i(e,"P",{"data-svelte-h":!0}),r($)!=="svelte-1gus98u"&&($.innerHTML=qe),ie=l(e),h(y.$$.fragment,e),re=l(e),C=i(e,"P",{"data-svelte-h":!0}),r(C)!=="svelte-vtwna1"&&(C.innerHTML=Fe),ue=l(e),h(L.$$.fragment,e),pe=l(e),P=i(e,"P",{"data-svelte-h":!0}),r(P)!=="svelte-osr7qy"&&(P.textContent=Ne),he=l(e),j=i(e,"P",{"data-svelte-h":!0}),r(j)!=="svelte-jejcjs"&&(j.innerHTML=Re),me=l(e),G=i(e,"P",{"data-svelte-h":!0}),r(G)!=="svelte-dg4f0p"&&(G.textContent=Xe),de=l(e),h(_.$$.fragment,e),fe=l(e),H=i(e,"P",{"data-svelte-h":!0}),r(H)!=="svelte-1bv98g2"&&(H.textContent=Se),ce=l(e),k=i(e,"UL",{"data-svelte-h":!0}),r(k)!=="svelte-lppr6x"&&(k.innerHTML=Be),ge=l(e),I=i(e,"P",{"data-svelte-h":!0}),r(I)!=="svelte-1wpi2sl"&&(I.innerHTML=Ye),be=l(e),Z=i(e,"P",{"data-svelte-h":!0}),r(Z)!=="svelte-z8c33r"&&(Z.innerHTML=Ve),we=l(e),h(J.$$.fragment,e),ve=l(e),U=i(e,"P",{"data-svelte-h":!0}),r(U)!=="svelte-1wlwaap"&&(U.innerHTML=Oe),Me=l(e),h(A.$$.fragment,e),Te=l(e),W=i(e,"P",{"data-svelte-h":!0}),r(W)!=="svelte-1f0vfd2"&&(W.textContent=Qe),xe=l(e),E=i(e,"P",{"data-svelte-h":!0}),r(E)!=="svelte-1nvmzr"&&(E.textContent=De),$e=l(e),z=i(e,"UL",{"data-svelte-h":!0}),r(z)!=="svelte-1fna2fo"&&(z.innerHTML=Ke),ye=l(e),q=i(e,"P",{"data-svelte-h":!0}),r(q)!=="svelte-nfxilf"&&(q.innerHTML=et),Ce=l(e),h(F.$$.fragment,e),Le=l(e),N=i(e,"P",{"data-svelte-h":!0}),r(N)!=="svelte-104f7i7"&&(N.innerHTML=tt),Pe=l(e),R=i(e,"P",{"data-svelte-h":!0}),r(R)!=="svelte-1ptchid"&&(R.innerHTML=at),je=l(e),X=i(e,"P",{"data-svelte-h":!0}),r(X)!=="svelte-28lk0w"&&(X.innerHTML=nt),Ge=l(e),S=i(e,"P",{"data-svelte-h":!0}),r(S)!=="svelte-qf2q1i"&&(S.innerHTML=st),_e=l(e),B=i(e,"P",{"data-svelte-h":!0}),r(B)!=="svelte-5ohuzq"&&(B.textContent=lt),He=l(e),h(Y.$$.fragment,e),ke=l(e),O=i(e,"P",{}),ot(O).forEach(a),this.h()},h(){it(u,"name","hf:doc:metadata"),it(u,"content",bt)},m(e,t){ft(document.head,u),n(e,D,t),n(e,V,t),n(e,K,t),m(g,e,t),n(e,ee,t),n(e,b,t),n(e,te,t),n(e,w,t),n(e,ae,t),n(e,v,t),n(e,ne,t),m(M,e,t),n(e,se,t),n(e,T,t),n(e,le,t),n(e,x,t),n(e,oe,t),n(e,$,t),n(e,ie,t),m(y,e,t),n(e,re,t),n(e,C,t),n(e,ue,t),m(L,e,t),n(e,pe,t),n(e,P,t),n(e,he,t),n(e,j,t),n(e,me,t),n(e,G,t),n(e,de,t),m(_,e,t),n(e,fe,t),n(e,H,t),n(e,ce,t),n(e,k,t),n(e,ge,t),n(e,I,t),n(e,be,t),n(e,Z,t),n(e,we,t),m(J,e,t),n(e,ve,t),n(e,U,t),n(e,Me,t),m(A,e,t),n(e,Te,t),n(e,W,t),n(e,xe,t),n(e,E,t),n(e,$e,t),n(e,z,t),n(e,ye,t),n(e,q,t),n(e,Ce,t),m(F,e,t),n(e,Le,t),n(e,N,t),n(e,Pe,t),n(e,R,t),n(e,je,t),n(e,X,t),n(e,Ge,t),n(e,S,t),n(e,_e,t),n(e,B,t),n(e,He,t),m(Y,e,t),n(e,ke,t),n(e,O,t),Ie=!0},p:ut,i(e){Ie||(d(g.$$.fragment,e),d(M.$$.fragment,e),d(y.$$.fragment,e),d(L.$$.fragment,e),d(_.$$.fragment,e),d(J.$$.fragment,e),d(A.$$.fragment,e),d(F.$$.fragment,e),d(Y.$$.fragment,e),Ie=!0)},o(e){f(g.$$.fragment,e),f(M.$$.fragment,e),f(y.$$.fragment,e),f(L.$$.fragment,e),f(_.$$.fragment,e),f(J.$$.fragment,e),f(A.$$.fragment,e),f(F.$$.fragment,e),f(Y.$$.fragment,e),Ie=!1},d(e){e&&(a(D),a(V),a(K),a(ee),a(b),a(te),a(w),a(ae),a(v),a(ne),a(se),a(T),a(le),a(x),a(oe),a($),a(ie),a(re),a(C),a(ue),a(pe),a(P),a(he),a(j),a(me),a(G),a(de),a(fe),a(H),a(ce),a(k),a(ge),a(I),a(be),a(Z),a(we),a(ve),a(U),a(Me),a(Te),a(W),a(xe),a(E),a($e),a(z),a(ye),a(q),a(Ce),a(Le),a(N),a(Pe),a(R),a(je),a(X),a(Ge),a(S),a(_e),a(B),a(He),a(ke),a(O)),a(u),c(g,e),c(M,e),c(y,e),c(L,e),c(_,e),c(J,e),c(A,e),c(F,e),c(Y,e)}}}const bt='{"title":"Monitoring TGI server with Prometheus and Grafana dashboard","local":"monitoring-tgi-server-with-prometheus-and-grafana-dashboard","sections":[{"title":"Setup on the server machine","local":"setup-on-the-server-machine","sections":[],"depth":2},{"title":"Setup on the monitoring machine","local":"setup-on-the-monitoring-machine","sections":[],"depth":2}],"depth":1}';function wt(Je){return pt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class $t extends ht{constructor(u){super(),mt(this,u,wt,gt,rt,{})}}export{$t as component};
